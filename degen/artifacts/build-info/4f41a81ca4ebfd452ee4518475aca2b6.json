{
	"id": "4f41a81ca4ebfd452ee4518475aca2b6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"degen/DegenMoneyLib.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.6;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n\r\nlibrary DegenMoneyLib {\r\n    //****************\r\n    // PARAMS\r\n    //****************\r\n    uint256 constant private _taskCreateMinFee = 10 * 10**18;\r\n    uint256 constant private _groupCreateMinFee = 1 * 10**18;\r\n    uint256 constant private _a = 3;        // 门票金额给队长的比例（%）\r\n    uint256 constant private _b = 50;       // 门票金额投入奖池的比例（%）\r\n    uint256 constant private _c = 10;       // 队长的最终奖池收益比例（%）\r\n    uint256 constant private _p = 10;       // MonopolyPenalty比例（%）\r\n    uint256 constant private _v = 10;       // 第一名队伍比第二名队伍人数多_v时，触发MonopolyPenalty\r\n\r\n    uint256 constant private _alpha = 2;\r\n    uint256 constant private _beta = 1;               // beta = _beta / _denominator\r\n    uint256 constant private _gamma = 0.01 * 10**18;    // absolute init ticket price threshold\r\n    uint256 constant private _denominator = 100;\r\n\r\n    function taskCreateMinFee() public pure returns (uint256 money) {\r\n        return _taskCreateMinFee;\r\n    }\r\n\r\n    function groupCreateMinFee() public pure returns (uint256 money) {\r\n        return _groupCreateMinFee;\r\n    }\r\n\r\n    function ticketPrice(\r\n        uint256 ith, \r\n        uint256 totalRewardPool,\r\n        int256 firstGrpId,\r\n        int256 SecondGrpId,\r\n        uint256 firstGrpPeopleNum,\r\n        uint256 secondGrpPeopleNum\r\n    ) \r\n    public pure returns (uint256 price) \r\n    {\r\n        require(_alpha <= 5, \"To avoid overflow, alpha <= 5 only\");\r\n\r\n        // bool flag = true;\r\n        // uint256 tp = 1;\r\n        \r\n        // for (uint i=0; i < _alpha; i++) {\r\n        //     (flag, tp) = SafeMath.tryMul(tp, ith);\r\n        //     require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\");\r\n        // }\r\n\r\n        // (flag, tp) = SafeMath.tryMul(tp, _beta);\r\n        // require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\");\r\n\r\n        // (flag, tp) = SafeMath.tryDiv(tp, _denominator);\r\n        // require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\");\r\n\r\n        // (flag, tp) = SafeMath.tryMul(tp, 10**18);\r\n        // require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\");\r\n\r\n        // (flag, tp) = SafeMath.tryAdd(tp, _gamma);\r\n        // require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\");\r\n\r\n        uint256 tp = _beta * ith ** _alpha * 10**18 / _denominator + _gamma;\r\n\r\n        bool isMonopolyPenalty;\r\n        if(firstGrpId >= 0 && SecondGrpId >= 0){\r\n            if(firstGrpPeopleNum - secondGrpPeopleNum > _v){\r\n                isMonopolyPenalty = true;\r\n            }\r\n            else {\r\n                isMonopolyPenalty = false;\r\n            }\r\n        }\r\n        else if (firstGrpId >= 0 && SecondGrpId < 0){\r\n            if(firstGrpPeopleNum > _v) {\r\n                isMonopolyPenalty = true;\r\n            }\r\n            else {\r\n                isMonopolyPenalty = false;\r\n            }\r\n        }\r\n        else{\r\n            isMonopolyPenalty = false;\r\n        }\r\n\r\n        if (isMonopolyPenalty){\r\n            // uint256 extraFee = 0;\r\n            // (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p);\r\n            // require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\");\r\n            // (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator);\r\n            // require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\");\r\n            // (flag, tp) = SafeMath.tryAdd(tp, extraFee);\r\n            // require(flag, \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\");\r\n\r\n            tp += totalRewardPool * _p / _denominator;\r\n        }\r\n\r\n        return tp;\r\n    }\r\n\r\n    function ticketIncome2RewardPool(uint256 ticketIncome) public pure returns (uint256 money) {\r\n        return ticketIncome * _b / _denominator;\r\n\r\n        // bool flag = false;\r\n        // uint256 m = 0;\r\n        // (flag, m) = SafeMath.tryMul(ticketIncome, _b);\r\n        // require(flag, \"[ticketIncome2RewardPool] overflow.\");\r\n        // (flag, m) = SafeMath.tryDiv(m, _denominator);\r\n        // require(flag, \"[ticketIncome2RewardPool] overflow.\");\r\n        // return m;\r\n    }\r\n\r\n    function ticketIncome2GroupLeader(uint256 ticketIncome) public pure returns (uint256 money) {\r\n        return ticketIncome * _a / _denominator;\r\n\r\n        // bool flag = false;\r\n        // uint256 m = 0;\r\n        // (flag, m) = SafeMath.tryMul(ticketIncome, _a);\r\n        // require(flag, \"[ticketIncome2GroupLeader] overflow.\");\r\n        // (flag, m) = SafeMath.tryDiv(m, _denominator);\r\n        // require(flag, \"[ticketIncome2GroupLeader] overflow.\");\r\n        // return m;\r\n    }\r\n\r\n    function ticketIncome2GroupMember(uint256 ticketIncome, uint256 memNum) public pure returns (uint256 money) {\r\n        uint256 c = _denominator - _a - _b;\r\n        return ticketIncome * c / _denominator / memNum;\r\n\r\n        // bool flag = false;\r\n        // uint256 m = 0;\r\n        // (flag, m) = SafeMath.tryMul(ticketIncome, c);\r\n        // require(flag, \"[ticketIncome2GroupMember] overflow.\");\r\n        // (flag, m) = SafeMath.tryDiv(m, _denominator);\r\n        // require(flag, \"[ticketIncome2GroupMember] overflow.\");\r\n        // (flag, m) = SafeMath.tryDiv(m, memNum);\r\n        // require(flag, \"[ticketIncome2GroupMember] overflow.\");\r\n\r\n        // return m;\r\n    }\r\n\r\n}\r\n\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xEE DUP7 0xE8 KECCAK256 DUP14 0xE7 0x4B EXTCODEHASH LOG4 0xB1 PUSH16 0x3B51DCF7FAC733127FC4F9E663FD4716 DUP12 SWAP4 DUP2 DIV PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xEE DUP7 0xE8 KECCAK256 DUP14 0xE7 0x4B EXTCODEHASH LOG4 0xB1 PUSH16 0x3B51DCF7FAC733127FC4F9E663FD4716 DUP12 SWAP4 DUP2 DIV PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"degen/DegenMoneyLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"degen/DegenMoneyLib.sol": {
				"DegenMoneyLib": {
					"abi": [
						{
							"inputs": [],
							"name": "groupCreateMinFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taskCreateMinFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ticketIncome",
									"type": "uint256"
								}
							],
							"name": "ticketIncome2GroupLeader",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ticketIncome",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memNum",
									"type": "uint256"
								}
							],
							"name": "ticketIncome2GroupMember",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ticketIncome",
									"type": "uint256"
								}
							],
							"name": "ticketIncome2RewardPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ith",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalRewardPool",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "firstGrpId",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "SecondGrpId",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "firstGrpPeopleNum",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "secondGrpPeopleNum",
									"type": "uint256"
								}
							],
							"name": "ticketPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"degen/DegenMoneyLib.sol\":123:5693  library DegenMoneyLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"degen/DegenMoneyLib.sol\":123:5693  library DegenMoneyLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x26d0a334\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2e26fb4a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x84105419\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x91096a3c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9b49380b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe6ca2a8d\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"degen/DegenMoneyLib.sol\":1196:1305  function groupCreateMinFee() public pure returns (uint256 money) {... */\n    tag_2:\n        /* \"degen/DegenMoneyLib.sol\":324:334  1 * 10**18 */\n      0x0de0b6b3a7640000\n        /* \"degen/DegenMoneyLib.sol\":1196:1305  function groupCreateMinFee() public pure returns (uint256 money) {... */\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":168:193   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":156:158   */\n      0x20\n        /* \"#utility.yul\":141:159   */\n      add\n        /* \"degen/DegenMoneyLib.sol\":1196:1305  function groupCreateMinFee() public pure returns (uint256 money) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"degen/DegenMoneyLib.sol\":4525:5008  function ticketIncome2GroupLeader(uint256 ticketIncome) public pure returns (uint256 money) {... */\n    tag_3:\n      tag_8\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":5016:5688  function ticketIncome2GroupMember(uint256 ticketIncome, uint256 memNum) public pure returns (uint256 money) {... */\n    tag_4:\n      tag_8\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":1081:1188  function taskCreateMinFee() public pure returns (uint256 money) {... */\n    tag_5:\n        /* \"degen/DegenMoneyLib.sol\":260:271  10 * 10**18 */\n      0x8ac7230489e80000\n        /* \"degen/DegenMoneyLib.sol\":1081:1188  function taskCreateMinFee() public pure returns (uint256 money) {... */\n      jump(tag_8)\n        /* \"degen/DegenMoneyLib.sol\":1313:4029  function ticketPrice(... */\n    tag_6:\n      tag_8\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":4037:4517  function ticketIncome2RewardPool(uint256 ticketIncome) public pure returns (uint256 money) {... */\n    tag_7:\n      tag_8\n      tag_31\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":4525:5008  function ticketIncome2GroupLeader(uint256 ticketIncome) public pure returns (uint256 money) {... */\n    tag_15:\n        /* \"degen/DegenMoneyLib.sol\":4602:4615  uint256 money */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":1069:1072  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":4635:4652  ticketIncome * _a */\n      tag_36\n        /* \"degen/DegenMoneyLib.sol\":371:372  3 */\n      0x03\n        /* \"degen/DegenMoneyLib.sol\":4635:4647  ticketIncome */\n      dup5\n        /* \"degen/DegenMoneyLib.sol\":4635:4652  ticketIncome * _a */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"degen/DegenMoneyLib.sol\":4635:4667  ticketIncome * _a / _denominator */\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"degen/DegenMoneyLib.sol\":4628:4667  return ticketIncome * _a / _denominator */\n      swap3\n        /* \"degen/DegenMoneyLib.sol\":4525:5008  function ticketIncome2GroupLeader(uint256 ticketIncome) public pure returns (uint256 money) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"degen/DegenMoneyLib.sol\":5016:5688  function ticketIncome2GroupMember(uint256 ticketIncome, uint256 memNum) public pure returns (uint256 money) {... */\n    tag_20:\n        /* \"degen/DegenMoneyLib.sol\":5109:5122  uint256 money */\n      0x00\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":457:459  50 */\n      0x32\n        /* \"degen/DegenMoneyLib.sol\":5147:5164  _denominator - _a */\n      tag_41\n        /* \"degen/DegenMoneyLib.sol\":371:372  3 */\n      0x03\n        /* \"degen/DegenMoneyLib.sol\":1069:1072  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":5147:5164  _denominator - _a */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"degen/DegenMoneyLib.sol\":5147:5169  _denominator - _a - _b */\n      tag_43\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_43:\n        /* \"degen/DegenMoneyLib.sol\":5135:5169  uint256 c = _denominator - _a - _b */\n      swap1\n      pop\n        /* \"degen/DegenMoneyLib.sol\":5221:5227  memNum */\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":1069:1072  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":5187:5203  ticketIncome * c */\n      tag_44\n        /* \"degen/DegenMoneyLib.sol\":5135:5169  uint256 c = _denominator - _a - _b */\n      dup4\n        /* \"degen/DegenMoneyLib.sol\":5187:5199  ticketIncome */\n      dup8\n        /* \"degen/DegenMoneyLib.sol\":5187:5203  ticketIncome * c */\n      tag_37\n      jump\t// in\n    tag_44:\n        /* \"degen/DegenMoneyLib.sol\":5187:5218  ticketIncome * c / _denominator */\n      tag_45\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_45:\n        /* \"degen/DegenMoneyLib.sol\":5187:5227  ticketIncome * c / _denominator / memNum */\n      tag_46\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_46:\n        /* \"degen/DegenMoneyLib.sol\":5180:5227  return ticketIncome * c / _denominator / memNum */\n      swap5\n        /* \"degen/DegenMoneyLib.sol\":5016:5688  function ticketIncome2GroupMember(uint256 ticketIncome, uint256 memNum) public pure returns (uint256 money) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"degen/DegenMoneyLib.sol\":1313:4029  function ticketPrice(... */\n    tag_28:\n        /* \"degen/DegenMoneyLib.sol\":1555:1568  uint256 price */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":2631:2641  uint256 tp */\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":966:979  0.01 * 10**18 */\n      0x2386f26fc10000\n        /* \"degen/DegenMoneyLib.sol\":1069:1072  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":2652:2665  ith ** _alpha */\n      tag_52\n        /* \"degen/DegenMoneyLib.sol\":838:839  2 */\n      0x02\n        /* \"degen/DegenMoneyLib.sol\":2652:2655  ith */\n      dup12\n        /* \"degen/DegenMoneyLib.sol\":2652:2665  ith ** _alpha */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"degen/DegenMoneyLib.sol\":2644:2665  _beta * ith ** _alpha */\n      tag_54\n      swap1\n        /* \"degen/DegenMoneyLib.sol\":879:880  1 */\n      0x01\n        /* \"degen/DegenMoneyLib.sol\":2644:2665  _beta * ith ** _alpha */\n      tag_37\n      jump\t// in\n    tag_54:\n        /* \"degen/DegenMoneyLib.sol\":2644:2674  _beta * ith ** _alpha * 10**18 */\n      tag_55\n      swap1\n        /* \"degen/DegenMoneyLib.sol\":2668:2674  10**18 */\n      0x0de0b6b3a7640000\n        /* \"degen/DegenMoneyLib.sol\":2644:2674  _beta * ith ** _alpha * 10**18 */\n      tag_37\n      jump\t// in\n    tag_55:\n        /* \"degen/DegenMoneyLib.sol\":2644:2689  _beta * ith ** _alpha * 10**18 / _denominator */\n      tag_56\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_56:\n        /* \"degen/DegenMoneyLib.sol\":2644:2698  _beta * ith ** _alpha * 10**18 / _denominator + _gamma */\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"degen/DegenMoneyLib.sol\":2631:2698  uint256 tp = _beta * ith ** _alpha * 10**18 / _denominator + _gamma */\n      swap1\n      pop\n        /* \"degen/DegenMoneyLib.sol\":2711:2733  bool isMonopolyPenalty */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":2761:2762  0 */\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":2747:2757  firstGrpId */\n      dup8\n        /* \"degen/DegenMoneyLib.sol\":2747:2762  firstGrpId >= 0 */\n      slt\n      iszero\n        /* \"degen/DegenMoneyLib.sol\":2747:2782  firstGrpId >= 0 && SecondGrpId >= 0 */\n      dup1\n      iszero\n      tag_59\n      jumpi\n      pop\n        /* \"degen/DegenMoneyLib.sol\":2781:2782  0 */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":2766:2777  SecondGrpId */\n      dup7\n        /* \"degen/DegenMoneyLib.sol\":2766:2782  SecondGrpId >= 0 */\n      slt\n      iszero\n        /* \"degen/DegenMoneyLib.sol\":2747:2782  firstGrpId >= 0 && SecondGrpId >= 0 */\n    tag_59:\n        /* \"degen/DegenMoneyLib.sol\":2744:3305  if(firstGrpId >= 0 && SecondGrpId >= 0){... */\n      iszero\n      tag_60\n      jumpi\n        /* \"degen/DegenMoneyLib.sol\":712:714  10 */\n      0x0a\n        /* \"degen/DegenMoneyLib.sol\":2801:2839  firstGrpPeopleNum - secondGrpPeopleNum */\n      tag_61\n        /* \"degen/DegenMoneyLib.sol\":2821:2839  secondGrpPeopleNum */\n      dup6\n        /* \"degen/DegenMoneyLib.sol\":2801:2818  firstGrpPeopleNum */\n      dup8\n        /* \"degen/DegenMoneyLib.sol\":2801:2839  firstGrpPeopleNum - secondGrpPeopleNum */\n      tag_42\n      jump\t// in\n    tag_61:\n        /* \"degen/DegenMoneyLib.sol\":2801:2844  firstGrpPeopleNum - secondGrpPeopleNum > _v */\n      gt\n        /* \"degen/DegenMoneyLib.sol\":2798:2983  if(firstGrpPeopleNum - secondGrpPeopleNum > _v){... */\n      iszero\n      tag_62\n      jumpi\n      pop\n        /* \"degen/DegenMoneyLib.sol\":2884:2888  true */\n      0x01\n        /* \"degen/DegenMoneyLib.sol\":2744:3305  if(firstGrpId >= 0 && SecondGrpId >= 0){... */\n      jump(tag_69)\n        /* \"degen/DegenMoneyLib.sol\":2798:2983  if(firstGrpPeopleNum - secondGrpPeopleNum > _v){... */\n    tag_62:\n      pop\n        /* \"degen/DegenMoneyLib.sol\":2962:2967  false */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":2744:3305  if(firstGrpId >= 0 && SecondGrpId >= 0){... */\n      jump(tag_69)\n    tag_60:\n        /* \"degen/DegenMoneyLib.sol\":3027:3028  0 */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":3013:3023  firstGrpId */\n      dup8\n        /* \"degen/DegenMoneyLib.sol\":3013:3028  firstGrpId >= 0 */\n      slt\n      iszero\n        /* \"degen/DegenMoneyLib.sol\":3013:3047  firstGrpId >= 0 && SecondGrpId < 0 */\n      dup1\n      iszero\n      tag_65\n      jumpi\n      pop\n        /* \"degen/DegenMoneyLib.sol\":3046:3047  0 */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":3032:3043  SecondGrpId */\n      dup7\n        /* \"degen/DegenMoneyLib.sol\":3032:3047  SecondGrpId < 0 */\n      slt\n        /* \"degen/DegenMoneyLib.sol\":3013:3047  firstGrpId >= 0 && SecondGrpId < 0 */\n    tag_65:\n        /* \"degen/DegenMoneyLib.sol\":3009:3305  if (firstGrpId >= 0 && SecondGrpId < 0){... */\n      iszero\n      tag_66\n      jumpi\n        /* \"degen/DegenMoneyLib.sol\":712:714  10 */\n      0x0a\n        /* \"degen/DegenMoneyLib.sol\":3066:3083  firstGrpPeopleNum */\n      dup6\n        /* \"degen/DegenMoneyLib.sol\":3066:3088  firstGrpPeopleNum > _v */\n      gt\n        /* \"degen/DegenMoneyLib.sol\":3063:3228  if(firstGrpPeopleNum > _v) {... */\n      iszero\n      tag_62\n      jumpi\n      pop\n        /* \"degen/DegenMoneyLib.sol\":3129:3133  true */\n      0x01\n        /* \"degen/DegenMoneyLib.sol\":3009:3305  if (firstGrpId >= 0 && SecondGrpId < 0){... */\n      jump(tag_69)\n    tag_66:\n      pop\n        /* \"degen/DegenMoneyLib.sol\":3288:3293  false */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":3009:3305  if (firstGrpId >= 0 && SecondGrpId < 0){... */\n    tag_69:\n        /* \"degen/DegenMoneyLib.sol\":3321:3338  isMonopolyPenalty */\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":3317:4000  if (isMonopolyPenalty){... */\n      iszero\n      tag_70\n      jumpi\n        /* \"degen/DegenMoneyLib.sol\":1069:1072  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":3953:3973  totalRewardPool * _p */\n      tag_71\n        /* \"degen/DegenMoneyLib.sol\":635:637  10 */\n      0x0a\n        /* \"degen/DegenMoneyLib.sol\":3953:3968  totalRewardPool */\n      dup11\n        /* \"degen/DegenMoneyLib.sol\":3953:3973  totalRewardPool * _p */\n      tag_37\n      jump\t// in\n    tag_71:\n        /* \"degen/DegenMoneyLib.sol\":3953:3988  totalRewardPool * _p / _denominator */\n      tag_72\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_72:\n        /* \"degen/DegenMoneyLib.sol\":3947:3988  tp += totalRewardPool * _p / _denominator */\n      tag_73\n      swap1\n      dup4\n      tag_58\n      jump\t// in\n    tag_73:\n      swap2\n      pop\n        /* \"degen/DegenMoneyLib.sol\":3317:4000  if (isMonopolyPenalty){... */\n    tag_70:\n      pop\n        /* \"degen/DegenMoneyLib.sol\":4019:4021  tp */\n      swap8\n        /* \"degen/DegenMoneyLib.sol\":1313:4029  function ticketPrice(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"degen/DegenMoneyLib.sol\":4037:4517  function ticketIncome2RewardPool(uint256 ticketIncome) public pure returns (uint256 money) {... */\n    tag_32:\n        /* \"degen/DegenMoneyLib.sol\":4113:4126  uint256 money */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":1069:1072  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":4146:4163  ticketIncome * _b */\n      tag_36\n        /* \"degen/DegenMoneyLib.sol\":457:459  50 */\n      0x32\n        /* \"degen/DegenMoneyLib.sol\":4146:4158  ticketIncome */\n      dup5\n        /* \"degen/DegenMoneyLib.sol\":4146:4163  ticketIncome * _b */\n      tag_37\n      jump\t// in\n        /* \"#utility.yul\":204:384   */\n    tag_14:\n        /* \"#utility.yul\":263:269   */\n      0x00\n        /* \"#utility.yul\":316:318   */\n      0x20\n        /* \"#utility.yul\":304:313   */\n      dup3\n        /* \"#utility.yul\":295:302   */\n      dup5\n        /* \"#utility.yul\":291:314   */\n      sub\n        /* \"#utility.yul\":287:319   */\n      slt\n        /* \"#utility.yul\":284:336   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":332:333   */\n      0x00\n        /* \"#utility.yul\":329:330   */\n      dup1\n        /* \"#utility.yul\":322:334   */\n      revert\n        /* \"#utility.yul\":284:336   */\n    tag_83:\n      pop\n        /* \"#utility.yul\":355:378   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":204:384   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":389:637   */\n    tag_19:\n        /* \"#utility.yul\":457:463   */\n      0x00\n        /* \"#utility.yul\":465:471   */\n      dup1\n        /* \"#utility.yul\":518:520   */\n      0x40\n        /* \"#utility.yul\":506:515   */\n      dup4\n        /* \"#utility.yul\":497:504   */\n      dup6\n        /* \"#utility.yul\":493:516   */\n      sub\n        /* \"#utility.yul\":489:521   */\n      slt\n        /* \"#utility.yul\":486:538   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":534:535   */\n      0x00\n        /* \"#utility.yul\":531:532   */\n      dup1\n        /* \"#utility.yul\":524:536   */\n      revert\n        /* \"#utility.yul\":486:538   */\n    tag_85:\n      pop\n      pop\n        /* \"#utility.yul\":557:580   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":627:629   */\n      0x20\n        /* \"#utility.yul\":612:630   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":599:631   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":389:637   */\n      jump\t// out\n        /* \"#utility.yul\":642:1163   */\n    tag_27:\n        /* \"#utility.yul\":744:750   */\n      0x00\n        /* \"#utility.yul\":752:758   */\n      dup1\n        /* \"#utility.yul\":760:766   */\n      0x00\n        /* \"#utility.yul\":768:774   */\n      dup1\n        /* \"#utility.yul\":776:782   */\n      0x00\n        /* \"#utility.yul\":784:790   */\n      dup1\n        /* \"#utility.yul\":837:840   */\n      0xc0\n        /* \"#utility.yul\":825:834   */\n      dup8\n        /* \"#utility.yul\":816:823   */\n      dup10\n        /* \"#utility.yul\":812:835   */\n      sub\n        /* \"#utility.yul\":808:841   */\n      slt\n        /* \"#utility.yul\":805:858   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":851:852   */\n      dup1\n        /* \"#utility.yul\":844:856   */\n      revert\n        /* \"#utility.yul\":805:858   */\n    tag_87:\n      pop\n      pop\n        /* \"#utility.yul\":877:900   */\n      dup5\n      calldataload\n      swap7\n        /* \"#utility.yul\":947:949   */\n      0x20\n        /* \"#utility.yul\":932:950   */\n      dup7\n      add\n        /* \"#utility.yul\":919:951   */\n      calldataload\n      swap7\n      pop\n        /* \"#utility.yul\":998:1000   */\n      0x40\n        /* \"#utility.yul\":983:1001   */\n      dup7\n      add\n        /* \"#utility.yul\":970:1002   */\n      calldataload\n      swap6\n        /* \"#utility.yul\":1049:1051   */\n      0x60\n        /* \"#utility.yul\":1034:1052   */\n      dup2\n      add\n        /* \"#utility.yul\":1021:1053   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":1100:1103   */\n      0x80\n        /* \"#utility.yul\":1085:1104   */\n      dup2\n      add\n        /* \"#utility.yul\":1072:1105   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":1152:1155   */\n      0xa0\n        /* \"#utility.yul\":1137:1156   */\n      add\n        /* \"#utility.yul\":1124:1157   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":642:1163   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1168:1295   */\n    tag_77:\n        /* \"#utility.yul\":1229:1239   */\n      0x4e487b71\n        /* \"#utility.yul\":1224:1227   */\n      0xe0\n        /* \"#utility.yul\":1220:1240   */\n      shl\n        /* \"#utility.yul\":1217:1218   */\n      0x00\n        /* \"#utility.yul\":1210:1241   */\n      mstore\n        /* \"#utility.yul\":1260:1264   */\n      0x11\n        /* \"#utility.yul\":1257:1258   */\n      0x04\n        /* \"#utility.yul\":1250:1265   */\n      mstore\n        /* \"#utility.yul\":1284:1288   */\n      0x24\n        /* \"#utility.yul\":1281:1282   */\n      0x00\n        /* \"#utility.yul\":1274:1289   */\n      revert\n        /* \"#utility.yul\":1300:1468   */\n    tag_37:\n        /* \"#utility.yul\":1373:1382   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":1404:1413   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1421:1436   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":1415:1437   */\n      dup5\n      eq\n        /* \"#utility.yul\":1401:1438   */\n      or\n        /* \"#utility.yul\":1391:1462   */\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1442:1460   */\n      tag_38\n      tag_77\n      jump\t// in\n        /* \"#utility.yul\":1473:1690   */\n    tag_39:\n        /* \"#utility.yul\":1513:1514   */\n      0x00\n        /* \"#utility.yul\":1539:1540   */\n      dup3\n        /* \"#utility.yul\":1529:1661   */\n      tag_93\n      jumpi\n        /* \"#utility.yul\":1583:1593   */\n      0x4e487b71\n        /* \"#utility.yul\":1578:1581   */\n      0xe0\n        /* \"#utility.yul\":1574:1594   */\n      shl\n        /* \"#utility.yul\":1571:1572   */\n      0x00\n        /* \"#utility.yul\":1564:1595   */\n      mstore\n        /* \"#utility.yul\":1618:1622   */\n      0x12\n        /* \"#utility.yul\":1615:1616   */\n      0x04\n        /* \"#utility.yul\":1608:1623   */\n      mstore\n        /* \"#utility.yul\":1646:1650   */\n      0x24\n        /* \"#utility.yul\":1643:1644   */\n      0x00\n        /* \"#utility.yul\":1636:1651   */\n      revert\n        /* \"#utility.yul\":1529:1661   */\n    tag_93:\n      pop\n        /* \"#utility.yul\":1675:1684   */\n      div\n      swap1\n        /* \"#utility.yul\":1473:1690   */\n      jump\t// out\n        /* \"#utility.yul\":1695:1823   */\n    tag_42:\n        /* \"#utility.yul\":1762:1771   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1783:1794   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1780:1817   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1797:1815   */\n      tag_38\n      tag_77\n      jump\t// in\n        /* \"#utility.yul\":2231:2653   */\n    tag_78:\n        /* \"#utility.yul\":2320:2321   */\n      0x01\n        /* \"#utility.yul\":2363:2368   */\n      dup2\n        /* \"#utility.yul\":2320:2321   */\n      dup2\n        /* \"#utility.yul\":2377:2647   */\n    tag_99:\n        /* \"#utility.yul\":2398:2405   */\n      dup1\n        /* \"#utility.yul\":2388:2396   */\n      dup6\n        /* \"#utility.yul\":2385:2406   */\n      gt\n        /* \"#utility.yul\":2377:2647   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":2457:2461   */\n      dup2\n        /* \"#utility.yul\":2453:2454   */\n      0x00\n        /* \"#utility.yul\":2449:2455   */\n      not\n        /* \"#utility.yul\":2445:2462   */\n      div\n        /* \"#utility.yul\":2439:2443   */\n      dup3\n        /* \"#utility.yul\":2436:2463   */\n      gt\n        /* \"#utility.yul\":2433:2486   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":2466:2484   */\n      tag_103\n      tag_77\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2516:2523   */\n      dup1\n        /* \"#utility.yul\":2506:2514   */\n      dup6\n        /* \"#utility.yul\":2502:2524   */\n      and\n        /* \"#utility.yul\":2499:2554   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":2536:2552   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":2499:2554   */\n    tag_104:\n        /* \"#utility.yul\":2615:2637   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":2575:2590   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":2377:2647   */\n      jump(tag_99)\n    tag_101:\n        /* \"#utility.yul\":2381:2384   */\n      pop\n        /* \"#utility.yul\":2231:2653   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2658:3464   */\n    tag_79:\n        /* \"#utility.yul\":2707:2712   */\n      0x00\n        /* \"#utility.yul\":2737:2745   */\n      dup3\n        /* \"#utility.yul\":2727:2807   */\n      tag_106\n      jumpi\n      pop\n        /* \"#utility.yul\":2778:2779   */\n      0x01\n        /* \"#utility.yul\":2792:2797   */\n      jump(tag_38)\n        /* \"#utility.yul\":2727:2807   */\n    tag_106:\n        /* \"#utility.yul\":2826:2830   */\n      dup2\n        /* \"#utility.yul\":2816:2892   */\n      tag_107\n      jumpi\n      pop\n        /* \"#utility.yul\":2863:2864   */\n      0x00\n        /* \"#utility.yul\":2877:2882   */\n      jump(tag_38)\n        /* \"#utility.yul\":2816:2892   */\n    tag_107:\n        /* \"#utility.yul\":2908:2912   */\n      dup2\n        /* \"#utility.yul\":2926:2927   */\n      0x01\n        /* \"#utility.yul\":2921:2980   */\n      dup2\n      eq\n      tag_109\n      jumpi\n        /* \"#utility.yul\":2994:2995   */\n      0x02\n        /* \"#utility.yul\":2989:3119   */\n      dup2\n      eq\n      tag_110\n      jumpi\n        /* \"#utility.yul\":2901:3119   */\n      jump(tag_108)\n        /* \"#utility.yul\":2921:2980   */\n    tag_109:\n        /* \"#utility.yul\":2951:2952   */\n      0x01\n        /* \"#utility.yul\":2942:2952   */\n      swap2\n      pop\n        /* \"#utility.yul\":2965:2970   */\n      pop\n      jump(tag_38)\n        /* \"#utility.yul\":2989:3119   */\n    tag_110:\n        /* \"#utility.yul\":3026:3029   */\n      0xff\n        /* \"#utility.yul\":3016:3024   */\n      dup5\n        /* \"#utility.yul\":3013:3030   */\n      gt\n        /* \"#utility.yul\":3010:3053   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":3033:3051   */\n      tag_112\n      tag_77\n      jump\t// in\n    tag_112:\n      pop\n      pop\n        /* \"#utility.yul\":3089:3090   */\n      0x01\n        /* \"#utility.yul\":3075:3091   */\n      dup3\n      shl\n        /* \"#utility.yul\":3104:3109   */\n      jump(tag_38)\n        /* \"#utility.yul\":2901:3119   */\n    tag_108:\n      pop\n        /* \"#utility.yul\":3203:3205   */\n      0x20\n        /* \"#utility.yul\":3193:3201   */\n      dup4\n        /* \"#utility.yul\":3190:3206   */\n      lt\n        /* \"#utility.yul\":3184:3187   */\n      0x0133\n        /* \"#utility.yul\":3178:3182   */\n      dup4\n        /* \"#utility.yul\":3175:3188   */\n      lt\n        /* \"#utility.yul\":3171:3207   */\n      and\n        /* \"#utility.yul\":3165:3167   */\n      0x4e\n        /* \"#utility.yul\":3155:3163   */\n      dup5\n        /* \"#utility.yul\":3152:3168   */\n      lt\n        /* \"#utility.yul\":3147:3149   */\n      0x0b\n        /* \"#utility.yul\":3141:3145   */\n      dup5\n        /* \"#utility.yul\":3138:3150   */\n      lt\n        /* \"#utility.yul\":3134:3169   */\n      and\n        /* \"#utility.yul\":3131:3208   */\n      or\n        /* \"#utility.yul\":3128:3287   */\n      iszero\n      tag_113\n      jumpi\n      pop\n        /* \"#utility.yul\":3240:3259   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":3272:3277   */\n      jump(tag_38)\n        /* \"#utility.yul\":3128:3287   */\n    tag_113:\n        /* \"#utility.yul\":3319:3353   */\n      tag_114\n        /* \"#utility.yul\":3344:3352   */\n      dup4\n        /* \"#utility.yul\":3338:3342   */\n      dup4\n        /* \"#utility.yul\":3319:3353   */\n      tag_78\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3389:3395   */\n      dup1\n        /* \"#utility.yul\":3385:3386   */\n      0x00\n        /* \"#utility.yul\":3381:3387   */\n      not\n        /* \"#utility.yul\":3377:3396   */\n      div\n        /* \"#utility.yul\":3368:3375   */\n      dup3\n        /* \"#utility.yul\":3365:3397   */\n      gt\n        /* \"#utility.yul\":3362:3420   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":3400:3418   */\n      tag_116\n      tag_77\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3438:3458   */\n      mul\n      swap4\n        /* \"#utility.yul\":2658:3464   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3469:3600   */\n    tag_53:\n        /* \"#utility.yul\":3529:3534   */\n      0x00\n        /* \"#utility.yul\":3558:3594   */\n      tag_118\n        /* \"#utility.yul\":3585:3593   */\n      dup4\n        /* \"#utility.yul\":3579:3583   */\n      dup4\n        /* \"#utility.yul\":3558:3594   */\n      tag_79\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":3549:3594   */\n      swap4\n        /* \"#utility.yul\":3469:3600   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3605:3730   */\n    tag_58:\n        /* \"#utility.yul\":3670:3679   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3691:3701   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3688:3724   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":3704:3722   */\n      tag_38\n      tag_77\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220b67cc959a2112483b871e5ba5ea51f666d0a48bf34f198d67d47ea529d60497064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "61046161003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c806326d0a334146100715780632e26fb4a1461008d57806384105419146100a057806391096a3c146100b35780639b49380b146100c1578063e6ca2a8d146100d4575b600080fd5b670de0b6b3a76400005b60405190815260200160405180910390f35b61007b61009b366004610241565b6100e7565b61007b6100ae36600461025a565b610106565b678ac7230489e8000061007b565b61007b6100cf36600461027c565b61014c565b61007b6100e2366004610241565b610232565b600060646100f66003846102d5565b61010091906102ec565b92915050565b60008060326101176003606461030e565b610121919061030e565b905082606461013083876102d5565b61013a91906102ec565b61014491906102ec565b949350505050565b600080662386f26fc10000606461016460028b610405565b61016f9060016102d5565b61018190670de0b6b3a76400006102d5565b61018b91906102ec565b6101959190610418565b905060008087121580156101aa575060008612155b156101d157600a6101bb858761030e565b11156101c9575060016101fc565b5060006101fc565b600087121580156101e25750600086125b156101f857600a8511156101c9575060016101fc565b5060005b801561022657606461020f600a8a6102d5565b61021991906102ec565b6102239083610418565b91505b50979650505050505050565b600060646100f66032846102d5565b60006020828403121561025357600080fd5b5035919050565b6000806040838503121561026d57600080fd5b50508035926020909101359150565b60008060008060008060c0878903121561029557600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610100576101006102bf565b60008261030957634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610100576101006102bf565b600181815b8085111561035c578160001904821115610342576103426102bf565b8085161561034f57918102915b93841c9390800290610326565b509250929050565b60008261037357506001610100565b8161038057506000610100565b816001811461039657600281146103a0576103bc565b6001915050610100565b60ff8411156103b1576103b16102bf565b50506001821b610100565b5060208310610133831016604e8410600b84101617156103df575081810a610100565b6103e98383610321565b80600019048211156103fd576103fd6102bf565b029392505050565b60006104118383610364565b9392505050565b80820180821115610100576101006102bf56fea2646970667358221220b67cc959a2112483b871e5ba5ea51f666d0a48bf34f198d67d47ea529d60497064736f6c63430008120033",
							"opcodes": "PUSH2 0x461 PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26D0A334 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x2E26FB4A EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x84105419 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x91096A3C EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x9B49380B EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xE6CA2A8D EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x241 JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST PUSH2 0x7B PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0x25A JUMP JUMPDEST PUSH2 0x106 JUMP JUMPDEST PUSH8 0x8AC7230489E80000 PUSH2 0x7B JUMP JUMPDEST PUSH2 0x7B PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x27C JUMP JUMPDEST PUSH2 0x14C JUMP JUMPDEST PUSH2 0x7B PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x241 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0xF6 PUSH1 0x3 DUP5 PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x32 PUSH2 0x117 PUSH1 0x3 PUSH1 0x64 PUSH2 0x30E JUMP JUMPDEST PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x64 PUSH2 0x130 DUP4 DUP8 PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH7 0x2386F26FC10000 PUSH1 0x64 PUSH2 0x164 PUSH1 0x2 DUP12 PUSH2 0x405 JUMP JUMPDEST PUSH2 0x16F SWAP1 PUSH1 0x1 PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP8 SLT ISZERO DUP1 ISZERO PUSH2 0x1AA JUMPI POP PUSH1 0x0 DUP7 SLT ISZERO JUMPDEST ISZERO PUSH2 0x1D1 JUMPI PUSH1 0xA PUSH2 0x1BB DUP6 DUP8 PUSH2 0x30E JUMP JUMPDEST GT ISZERO PUSH2 0x1C9 JUMPI POP PUSH1 0x1 PUSH2 0x1FC JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x0 DUP8 SLT ISZERO DUP1 ISZERO PUSH2 0x1E2 JUMPI POP PUSH1 0x0 DUP7 SLT JUMPDEST ISZERO PUSH2 0x1F8 JUMPI PUSH1 0xA DUP6 GT ISZERO PUSH2 0x1C9 JUMPI POP PUSH1 0x1 PUSH2 0x1FC JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x64 PUSH2 0x20F PUSH1 0xA DUP11 PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x223 SWAP1 DUP4 PUSH2 0x418 JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0xF6 PUSH1 0x32 DUP5 PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP5 CALLDATALOAD SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x100 JUMPI PUSH2 0x100 PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x309 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x100 JUMPI PUSH2 0x100 PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x35C JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x342 JUMPI PUSH2 0x342 PUSH2 0x2BF JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x34F JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x326 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x373 JUMPI POP PUSH1 0x1 PUSH2 0x100 JUMP JUMPDEST DUP2 PUSH2 0x380 JUMPI POP PUSH1 0x0 PUSH2 0x100 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x396 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3A0 JUMPI PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x100 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3B1 JUMPI PUSH2 0x3B1 PUSH2 0x2BF JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x100 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3DF JUMPI POP DUP2 DUP2 EXP PUSH2 0x100 JUMP JUMPDEST PUSH2 0x3E9 DUP4 DUP4 PUSH2 0x321 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x3FD JUMPI PUSH2 0x3FD PUSH2 0x2BF JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411 DUP4 DUP4 PUSH2 0x364 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x100 JUMPI PUSH2 0x100 PUSH2 0x2BF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 PUSH29 0xC959A2112483B871E5BA5EA51F666D0A48BF34F198D67D47EA529D6049 PUSH17 0x64736F6C63430008120033000000000000 ",
							"sourceMap": "123:5570:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;123:5570:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@groupCreateMinFee_375": {
									"entryPoint": null,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taskCreateMinFee_367": {
									"entryPoint": null,
									"id": 367,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ticketIncome2GroupLeader_513": {
									"entryPoint": 231,
									"id": 513,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ticketIncome2GroupMember_539": {
									"entryPoint": 262,
									"id": 539,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@ticketIncome2RewardPool_499": {
									"entryPoint": 562,
									"id": 499,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ticketPrice_485": {
									"entryPoint": 332,
									"id": 485,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_int256t_int256t_uint256t_uint256": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_tuple_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 1029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3732:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "123:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "133:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "145:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "156:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "141:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "141:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "133:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "175:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "186:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "168:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "168:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "92:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "103:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "114:4:2",
														"type": ""
													}
												],
												"src": "14:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "274:110:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "320:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "329:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "332:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "322:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "322:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "322:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "295:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "304:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "291:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "291:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "316:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "287:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "287:32:2"
															},
															"nodeType": "YulIf",
															"src": "284:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "368:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "355:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "240:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "251:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "263:6:2",
														"type": ""
													}
												],
												"src": "204:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "476:161:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "522:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "531:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "534:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "524:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "524:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "497:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "506:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "493:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "493:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "518:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "489:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:32:2"
															},
															"nodeType": "YulIf",
															"src": "486:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "547:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "557:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "557:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "547:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "616:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "627:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "612:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "612:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "599:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "434:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "445:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "457:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "465:6:2",
														"type": ""
													}
												],
												"src": "389:248:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:368:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "842:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "851:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "854:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "844:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "844:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "844:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "816:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "825:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "812:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "812:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "837:3:2",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "808:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "808:33:2"
															},
															"nodeType": "YulIf",
															"src": "805:53:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "867:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "890:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "877:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "877:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "867:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "909:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "936:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "947:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "932:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "932:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "919:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "960:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "987:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "998:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "983:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "970:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:32:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "960:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1011:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1038:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1049:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1034:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1034:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1021:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:32:2"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1062:43:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1089:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1100:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:19:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1072:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1072:33:2"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1062:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1114:43:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1141:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1152:3:2",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1137:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:19:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1124:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:33:2"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_int256t_int256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "721:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "732:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "744:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "752:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "760:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "768:6:2",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "776:6:2",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "784:6:2",
														"type": ""
													}
												],
												"src": "642:521:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1200:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1217:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1224:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1229:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1210:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1210:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1210:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1257:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1260:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1250:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1250:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1250:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1281:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1284:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1274:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1274:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1168:127:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1352:116:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1362:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1377:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1380:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1373:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1373:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1362:7:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1440:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1442:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1442:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1442:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1411:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1404:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1404:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "1418:1:2"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "1425:7:2"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "1434:1:2"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "1421:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1421:15:2"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "1415:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1415:22:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1401:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:37:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1394:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1394:45:2"
															},
															"nodeType": "YulIf",
															"src": "1391:71:2"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1331:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1334:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1340:7:2",
														"type": ""
													}
												],
												"src": "1300:168:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:171:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1550:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1571:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1578:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1583:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1574:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1574:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1564:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1564:31:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1564:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1615:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1618:4:2",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1608:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1608:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1608:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1643:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1646:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1636:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1636:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1636:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1539:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1532:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1532:9:2"
															},
															"nodeType": "YulIf",
															"src": "1529:132:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1670:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1679:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1682:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1675:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1675:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1670:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1504:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1507:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1513:1:2",
														"type": ""
													}
												],
												"src": "1473:217:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1744:79:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1754:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1766:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1769:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1762:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1754:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1795:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1797:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1797:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1797:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:2"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1792:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1783:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1783:11:2"
															},
															"nodeType": "YulIf",
															"src": "1780:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1726:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1729:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1735:4:2",
														"type": ""
													}
												],
												"src": "1695:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2002:224:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2019:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2030:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2012:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2012:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2053:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2064:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2049:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2049:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2069:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2042:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2092:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2103:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2088:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2088:18:2"
																	},
																	{
																		"hexValue": "546f2061766f6964206f766572666c6f772c20616c706861203c3d2035206f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2108:34:2",
																		"type": "",
																		"value": "To avoid overflow, alpha <= 5 on"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2081:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2081:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2081:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2163:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2174:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2159:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2159:18:2"
																	},
																	{
																		"hexValue": "6c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2179:4:2",
																		"type": "",
																		"value": "ly"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2152:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2152:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2152:32:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2193:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2205:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2216:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2201:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2201:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2193:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1979:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1993:4:2",
														"type": ""
													}
												],
												"src": "1828:398:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2295:358:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2305:16:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2320:1:2",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "2309:7:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2330:16:2",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "2339:7:2"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2330:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2355:13:2",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "2363:5:2"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "2355:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2419:228:2",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2464:22:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "2466:16:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2466:18:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2466:18:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2453:1:2",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "2449:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2449:6:2"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "2457:4:2"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:17:2"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "2436:2:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2436:27:2"
																		},
																		"nodeType": "YulIf",
																		"src": "2433:53:2"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2525:29:2",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2527:25:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "2540:5:2"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "2547:4:2"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "2536:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2536:16:2"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "2527:5:2"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "2506:8:2"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "2516:7:2"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2502:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2502:22:2"
																		},
																		"nodeType": "YulIf",
																		"src": "2499:55:2"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2567:23:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "2579:4:2"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "2585:4:2"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "2575:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2575:15:2"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "2567:4:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2603:34:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "2619:7:2"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "2628:8:2"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "2615:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2615:22:2"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "2603:8:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "2388:8:2"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "2398:7:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2385:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:21:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2407:3:2",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2381:3:2",
																"statements": []
															},
															"src": "2377:270:2"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "2259:5:2",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "2266:8:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "2279:5:2",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "2286:4:2",
														"type": ""
													}
												],
												"src": "2231:422:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2717:747:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2755:52:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2769:10:2",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2778:1:2",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "2769:5:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "2792:5:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "2737:8:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2730:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2730:16:2"
															},
															"nodeType": "YulIf",
															"src": "2727:80:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2840:52:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2854:10:2",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2863:1:2",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "2854:5:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "2877:5:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "2826:4:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2819:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:12:2"
															},
															"nodeType": "YulIf",
															"src": "2816:76:2"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2928:52:2",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "2942:10:2",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2951:1:2",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "2942:5:2"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "2965:5:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2921:59:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2926:1:2",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2996:123:2",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3031:22:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "3033:16:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3033:18:2"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3033:18:2"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3016:8:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3026:3:2",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "3013:2:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3013:17:2"
																				},
																				"nodeType": "YulIf",
																				"src": "3010:43:2"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3066:25:2",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3079:8:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3089:1:2",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3075:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3075:16:2"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3066:5:2"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3104:5:2"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2989:130:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2994:1:2",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "2908:4:2"
															},
															"nodeType": "YulSwitch",
															"src": "2901:218:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3217:70:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3231:28:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3244:4:2"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3250:8:2"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "3240:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3240:19:2"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3231:5:2"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3272:5:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3141:4:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3147:2:2",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3138:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3138:12:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3155:8:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3165:2:2",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3152:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3152:16:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3134:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3134:35:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3178:4:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3184:3:2",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3175:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3175:13:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3193:8:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3203:2:2",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3190:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3190:16:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3171:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3171:36:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3131:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3131:77:2"
															},
															"nodeType": "YulIf",
															"src": "3128:159:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3296:57:2",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3338:4:2"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3344:8:2"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "3319:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3319:34:2"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "3300:7:2",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "3309:6:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3398:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3400:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3400:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3400:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "3368:7:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3385:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3381:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3381:6:2"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "3389:6:2"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3377:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3377:19:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3365:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3365:32:2"
															},
															"nodeType": "YulIf",
															"src": "3362:58:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3429:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "3442:7:2"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "3451:6:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3438:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3438:20:2"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "3429:5:2"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "2688:4:2",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "2694:8:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "2707:5:2",
														"type": ""
													}
												],
												"src": "2658:806:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3539:61:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3549:45:2",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3579:4:2"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3585:8:2"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "3558:20:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:36:2"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "3549:5:2"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3510:4:2",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3516:8:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3529:5:2",
														"type": ""
													}
												],
												"src": "3469:131:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3653:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3663:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3674:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3677:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3670:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3670:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3663:3:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3702:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3704:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3704:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3704:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3694:1:2"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3697:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3691:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3691:10:2"
															},
															"nodeType": "YulIf",
															"src": "3688:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3636:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3639:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3645:3:2",
														"type": ""
													}
												],
												"src": "3605:125:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_int256t_int256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"To avoid overflow, alpha <= 5 on\")\n        mstore(add(headStart, 96), \"ly\")\n        tail := add(headStart, 128)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c806326d0a334146100715780632e26fb4a1461008d57806384105419146100a057806391096a3c146100b35780639b49380b146100c1578063e6ca2a8d146100d4575b600080fd5b670de0b6b3a76400005b60405190815260200160405180910390f35b61007b61009b366004610241565b6100e7565b61007b6100ae36600461025a565b610106565b678ac7230489e8000061007b565b61007b6100cf36600461027c565b61014c565b61007b6100e2366004610241565b610232565b600060646100f66003846102d5565b61010091906102ec565b92915050565b60008060326101176003606461030e565b610121919061030e565b905082606461013083876102d5565b61013a91906102ec565b61014491906102ec565b949350505050565b600080662386f26fc10000606461016460028b610405565b61016f9060016102d5565b61018190670de0b6b3a76400006102d5565b61018b91906102ec565b6101959190610418565b905060008087121580156101aa575060008612155b156101d157600a6101bb858761030e565b11156101c9575060016101fc565b5060006101fc565b600087121580156101e25750600086125b156101f857600a8511156101c9575060016101fc565b5060005b801561022657606461020f600a8a6102d5565b61021991906102ec565b6102239083610418565b91505b50979650505050505050565b600060646100f66032846102d5565b60006020828403121561025357600080fd5b5035919050565b6000806040838503121561026d57600080fd5b50508035926020909101359150565b60008060008060008060c0878903121561029557600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610100576101006102bf565b60008261030957634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610100576101006102bf565b600181815b8085111561035c578160001904821115610342576103426102bf565b8085161561034f57918102915b93841c9390800290610326565b509250929050565b60008261037357506001610100565b8161038057506000610100565b816001811461039657600281146103a0576103bc565b6001915050610100565b60ff8411156103b1576103b16102bf565b50506001821b610100565b5060208310610133831016604e8410600b84101617156103df575081810a610100565b6103e98383610321565b80600019048211156103fd576103fd6102bf565b029392505050565b60006104118383610364565b9392505050565b80820180821115610100576101006102bf56fea2646970667358221220b67cc959a2112483b871e5ba5ea51f666d0a48bf34f198d67d47ea529d60497064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26D0A334 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x2E26FB4A EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x84105419 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x91096A3C EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x9B49380B EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xE6CA2A8D EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x241 JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST PUSH2 0x7B PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0x25A JUMP JUMPDEST PUSH2 0x106 JUMP JUMPDEST PUSH8 0x8AC7230489E80000 PUSH2 0x7B JUMP JUMPDEST PUSH2 0x7B PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x27C JUMP JUMPDEST PUSH2 0x14C JUMP JUMPDEST PUSH2 0x7B PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x241 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0xF6 PUSH1 0x3 DUP5 PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x32 PUSH2 0x117 PUSH1 0x3 PUSH1 0x64 PUSH2 0x30E JUMP JUMPDEST PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x30E JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x64 PUSH2 0x130 DUP4 DUP8 PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x13A SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH7 0x2386F26FC10000 PUSH1 0x64 PUSH2 0x164 PUSH1 0x2 DUP12 PUSH2 0x405 JUMP JUMPDEST PUSH2 0x16F SWAP1 PUSH1 0x1 PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x181 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP8 SLT ISZERO DUP1 ISZERO PUSH2 0x1AA JUMPI POP PUSH1 0x0 DUP7 SLT ISZERO JUMPDEST ISZERO PUSH2 0x1D1 JUMPI PUSH1 0xA PUSH2 0x1BB DUP6 DUP8 PUSH2 0x30E JUMP JUMPDEST GT ISZERO PUSH2 0x1C9 JUMPI POP PUSH1 0x1 PUSH2 0x1FC JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x0 DUP8 SLT ISZERO DUP1 ISZERO PUSH2 0x1E2 JUMPI POP PUSH1 0x0 DUP7 SLT JUMPDEST ISZERO PUSH2 0x1F8 JUMPI PUSH1 0xA DUP6 GT ISZERO PUSH2 0x1C9 JUMPI POP PUSH1 0x1 PUSH2 0x1FC JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x64 PUSH2 0x20F PUSH1 0xA DUP11 PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x223 SWAP1 DUP4 PUSH2 0x418 JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH2 0xF6 PUSH1 0x32 DUP5 PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP5 CALLDATALOAD SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x100 JUMPI PUSH2 0x100 PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x309 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x100 JUMPI PUSH2 0x100 PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x35C JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x342 JUMPI PUSH2 0x342 PUSH2 0x2BF JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x34F JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x326 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x373 JUMPI POP PUSH1 0x1 PUSH2 0x100 JUMP JUMPDEST DUP2 PUSH2 0x380 JUMPI POP PUSH1 0x0 PUSH2 0x100 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x396 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3A0 JUMPI PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x100 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x3B1 JUMPI PUSH2 0x3B1 PUSH2 0x2BF JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x100 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x3DF JUMPI POP DUP2 DUP2 EXP PUSH2 0x100 JUMP JUMPDEST PUSH2 0x3E9 DUP4 DUP4 PUSH2 0x321 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x3FD JUMPI PUSH2 0x3FD PUSH2 0x2BF JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x411 DUP4 DUP4 PUSH2 0x364 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x100 JUMPI PUSH2 0x100 PUSH2 0x2BF JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 PUSH29 0xC959A2112483B871E5BA5EA51F666D0A48BF34F198D67D47EA529D6049 PUSH17 0x64736F6C63430008120033000000000000 ",
							"sourceMap": "123:5570:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1196:109;324:10;1196:109;;;168:25:2;;;156:2;141:18;1196:109:1;;;;;;;4525:483;;;;;;:::i;:::-;;:::i;5016:672::-;;;;;;:::i;:::-;;:::i;1081:107::-;260:11;1081:107;;1313:2716;;;;;;:::i;:::-;;:::i;4037:480::-;;;;;;:::i;:::-;;:::i;4525:483::-;4602:13;1069:3;4635:17;371:1;4635:12;:17;:::i;:::-;:32;;;;:::i;:::-;4628:39;4525:483;-1:-1:-1;;4525:483:1:o;5016:672::-;5109:13;;457:2;5147:17;371:1;1069:3;5147:17;:::i;:::-;:22;;;;:::i;:::-;5135:34;-1:-1:-1;5221:6:1;1069:3;5187:16;5135:34;5187:12;:16;:::i;:::-;:31;;;;:::i;:::-;:40;;;;:::i;:::-;5180:47;5016:672;-1:-1:-1;;;;5016:672:1:o;1313:2716::-;1555:13;2631:10;966:13;1069:3;2652:13;838:1;2652:3;:13;:::i;:::-;2644:21;;879:1;2644:21;:::i;:::-;:30;;2668:6;2644:30;:::i;:::-;:45;;;;:::i;:::-;:54;;;;:::i;:::-;2631:67;;2711:22;2761:1;2747:10;:15;;:35;;;;;2781:1;2766:11;:16;;2747:35;2744:561;;;712:2;2801:38;2821:18;2801:17;:38;:::i;:::-;:43;2798:185;;;-1:-1:-1;2884:4:1;2744:561;;2798:185;-1:-1:-1;2962:5:1;2744:561;;;3027:1;3013:10;:15;;:34;;;;;3046:1;3032:11;:15;3013:34;3009:296;;;712:2;3066:17;:22;3063:165;;;-1:-1:-1;3129:4:1;3009:296;;;-1:-1:-1;3288:5:1;3009:296;3321:17;3317:683;;;1069:3;3953:20;635:2;3953:15;:20;:::i;:::-;:35;;;;:::i;:::-;3947:41;;;;:::i;:::-;;;3317:683;-1:-1:-1;4019:2:1;1313:2716;-1:-1:-1;;;;;;;1313:2716:1:o;4037:480::-;4113:13;1069:3;4146:17;457:2;4146:12;:17;:::i;204:180:2:-;263:6;316:2;304:9;295:7;291:23;287:32;284:52;;;332:1;329;322:12;284:52;-1:-1:-1;355:23:2;;204:180;-1:-1:-1;204:180:2:o;389:248::-;457:6;465;518:2;506:9;497:7;493:23;489:32;486:52;;;534:1;531;524:12;486:52;-1:-1:-1;;557:23:2;;;627:2;612:18;;;599:32;;-1:-1:-1;389:248:2:o;642:521::-;744:6;752;760;768;776;784;837:3;825:9;816:7;812:23;808:33;805:53;;;854:1;851;844:12;805:53;-1:-1:-1;;877:23:2;;;947:2;932:18;;919:32;;-1:-1:-1;998:2:2;983:18;;970:32;;1049:2;1034:18;;1021:32;;-1:-1:-1;1100:3:2;1085:19;;1072:33;;-1:-1:-1;1152:3:2;1137:19;1124:33;;-1:-1:-1;642:521:2;-1:-1:-1;642:521:2:o;1168:127::-;1229:10;1224:3;1220:20;1217:1;1210:31;1260:4;1257:1;1250:15;1284:4;1281:1;1274:15;1300:168;1373:9;;;1404;;1421:15;;;1415:22;;1401:37;1391:71;;1442:18;;:::i;1473:217::-;1513:1;1539;1529:132;;1583:10;1578:3;1574:20;1571:1;1564:31;1618:4;1615:1;1608:15;1646:4;1643:1;1636:15;1529:132;-1:-1:-1;1675:9:2;;1473:217::o;1695:128::-;1762:9;;;1783:11;;;1780:37;;;1797:18;;:::i;2231:422::-;2320:1;2363:5;2320:1;2377:270;2398:7;2388:8;2385:21;2377:270;;;2457:4;2453:1;2449:6;2445:17;2439:4;2436:27;2433:53;;;2466:18;;:::i;:::-;2516:7;2506:8;2502:22;2499:55;;;2536:16;;;;2499:55;2615:22;;;;2575:15;;;;2377:270;;;2381:3;2231:422;;;;;:::o;2658:806::-;2707:5;2737:8;2727:80;;-1:-1:-1;2778:1:2;2792:5;;2727:80;2826:4;2816:76;;-1:-1:-1;2863:1:2;2877:5;;2816:76;2908:4;2926:1;2921:59;;;;2994:1;2989:130;;;;2901:218;;2921:59;2951:1;2942:10;;2965:5;;;2989:130;3026:3;3016:8;3013:17;3010:43;;;3033:18;;:::i;:::-;-1:-1:-1;;3089:1:2;3075:16;;3104:5;;2901:218;;3203:2;3193:8;3190:16;3184:3;3178:4;3175:13;3171:36;3165:2;3155:8;3152:16;3147:2;3141:4;3138:12;3134:35;3131:77;3128:159;;;-1:-1:-1;3240:19:2;;;3272:5;;3128:159;3319:34;3344:8;3338:4;3319:34;:::i;:::-;3389:6;3385:1;3381:6;3377:19;3368:7;3365:32;3362:58;;;3400:18;;:::i;:::-;3438:20;;2658:806;-1:-1:-1;;;2658:806:2:o;3469:131::-;3529:5;3558:36;3585:8;3579:4;3558:36;:::i;:::-;3549:45;3469:131;-1:-1:-1;;;3469:131:2:o;3605:125::-;3670:9;;;3691:10;;;3688:36;;;3704:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "224200",
								"executionCost": "300",
								"totalCost": "224500"
							},
							"external": {
								"groupCreateMinFee()": "131",
								"taskCreateMinFee()": "208",
								"ticketIncome2GroupLeader(uint256)": "infinite",
								"ticketIncome2GroupMember(uint256,uint256)": "infinite",
								"ticketIncome2RewardPool(uint256)": "infinite",
								"ticketPrice(uint256,uint256,int256,int256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 123,
									"end": 5693,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5693,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b67cc959a2112483b871e5ba5ea51f666d0a48bf34f198d67d47ea529d60497064736f6c63430008120033",
									".code": [
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "26D0A334"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "2E26FB4A"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "84105419"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "91096A3C"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "9B49380B"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "E6CA2A8D"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5693,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1305,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1196,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 324,
											"end": 334,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1196,
											"end": 1305,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1196,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1305,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1305,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 168,
											"end": 193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 156,
											"end": 158,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 141,
											"end": 159,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1196,
											"end": 1305,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1305,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1305,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1305,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1305,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 5008,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4525,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4525,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4525,
											"end": 5008,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 5008,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4525,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4525,
											"end": 5008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 5008,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4525,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4525,
											"end": 5008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5016,
											"end": 5688,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5016,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5016,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5016,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5016,
											"end": 5688,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5016,
											"end": 5688,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5016,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5016,
											"end": 5688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5016,
											"end": 5688,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5016,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5016,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5016,
											"end": 5688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1081,
											"end": 1188,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1081,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 260,
											"end": 271,
											"name": "PUSH",
											"source": 1,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 1081,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1081,
											"end": 1188,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 4029,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1313,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1313,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1313,
											"end": 4029,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 4029,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1313,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1313,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 4029,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1313,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1313,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4517,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4037,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4037,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4037,
											"end": 4517,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4517,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4037,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4037,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4517,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4037,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4037,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 5008,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4525,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4602,
											"end": 4615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4635,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 371,
											"end": 372,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4635,
											"end": 4647,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4635,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4635,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4635,
											"end": 4652,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4635,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4635,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4635,
											"end": 4667,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4635,
											"end": 4667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4635,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4635,
											"end": 4667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4635,
											"end": 4667,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4635,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4667,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 5008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4525,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5016,
											"end": 5688,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5016,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5109,
											"end": 5122,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5147,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 371,
											"end": 372,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1069,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5147,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5147,
											"end": 5164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5147,
											"end": 5164,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5147,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5147,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5147,
											"end": 5169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5147,
											"end": 5169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5147,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5147,
											"end": 5169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5147,
											"end": 5169,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5147,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5221,
											"end": 5227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5187,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5135,
											"end": 5169,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5199,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5187,
											"end": 5203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5203,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5187,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5187,
											"end": 5218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5187,
											"end": 5218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5218,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5187,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5187,
											"end": 5227,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5187,
											"end": 5227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5227,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5187,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5227,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5016,
											"end": 5688,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5016,
											"end": 5688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 4029,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1313,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 966,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 1069,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 838,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2652,
											"end": 2655,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2652,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2652,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2644,
											"end": 2665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 879,
											"end": 880,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2644,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2644,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2665,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2644,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2644,
											"end": 2674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2668,
											"end": 2674,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2644,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2644,
											"end": 2674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2674,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2644,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2644,
											"end": 2689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2644,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2689,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2644,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2644,
											"end": 2698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2644,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2698,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2644,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2757,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2762,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2782,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2747,
											"end": 2782,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2781,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2777,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2782,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2782,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2782,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2747,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 3305,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2744,
											"end": 3305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 712,
											"end": 714,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2818,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2801,
											"end": 2839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2801,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2844,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2798,
											"end": 2983,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2798,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2798,
											"end": 2983,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2884,
											"end": 2888,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2744,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2744,
											"end": 3305,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2798,
											"end": 2983,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2798,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2962,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2744,
											"end": 3305,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 3305,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2744,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3023,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3028,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3047,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3013,
											"end": 3047,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3046,
											"end": 3047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3043,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3047,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3047,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3013,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3305,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3009,
											"end": 3305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 712,
											"end": 714,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3066,
											"end": 3083,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3088,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3063,
											"end": 3228,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3063,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3063,
											"end": 3228,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3009,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3009,
											"end": 3305,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3305,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3009,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3288,
											"end": 3293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3305,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3009,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 4000,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3317,
											"end": 4000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 635,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3953,
											"end": 3968,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3953,
											"end": 3973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3953,
											"end": 3988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3953,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3988,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3953,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3947,
											"end": 3988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 3988,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3947,
											"end": 3988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 3988,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3947,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 3988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 3988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 4000,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3317,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4019,
											"end": 4021,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 4029,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1313,
											"end": 4029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4517,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4037,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4146,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4146,
											"end": 4158,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4146,
											"end": 4163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 204,
											"end": 384,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 204,
											"end": 384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 263,
											"end": 269,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 318,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 304,
											"end": 313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 295,
											"end": 302,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 287,
											"end": 319,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 284,
											"end": 336,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 284,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 284,
											"end": 336,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 332,
											"end": 333,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 334,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 284,
											"end": 336,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 284,
											"end": 336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 355,
											"end": 378,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 355,
											"end": 378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 204,
											"end": 384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 204,
											"end": 384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 389,
											"end": 637,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 389,
											"end": 637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 457,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 471,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 518,
											"end": 520,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 515,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 497,
											"end": 504,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 489,
											"end": 521,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 486,
											"end": 538,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 486,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 486,
											"end": 538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 534,
											"end": 535,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 524,
											"end": 536,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 486,
											"end": 538,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 486,
											"end": 538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 557,
											"end": 580,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 557,
											"end": 580,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 627,
											"end": 629,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 612,
											"end": 630,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 599,
											"end": 631,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 599,
											"end": 631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 389,
											"end": 637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 642,
											"end": 1163,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 642,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 744,
											"end": 750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 760,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 776,
											"end": 782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 837,
											"end": 840,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 825,
											"end": 834,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 816,
											"end": 823,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 812,
											"end": 835,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 808,
											"end": 841,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 805,
											"end": 858,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 805,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 805,
											"end": 858,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 852,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 844,
											"end": 856,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 805,
											"end": 858,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 805,
											"end": 858,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 877,
											"end": 900,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 877,
											"end": 900,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 877,
											"end": 900,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 947,
											"end": 949,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 932,
											"end": 950,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 932,
											"end": 950,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 919,
											"end": 951,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 919,
											"end": 951,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 998,
											"end": 1000,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1002,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1002,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1053,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1053,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1100,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1085,
											"end": 1104,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1104,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1152,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1137,
											"end": 1156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1157,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1157,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 642,
											"end": 1163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 642,
											"end": 1163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1295,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1168,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1239,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1224,
											"end": 1227,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1241,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1257,
											"end": 1258,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1250,
											"end": 1265,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1284,
											"end": 1288,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1281,
											"end": 1282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1289,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1300,
											"end": 1468,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1300,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1382,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1382,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1413,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1413,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1436,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1437,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1437,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1438,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1391,
											"end": 1462,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1442,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1442,
											"end": 1460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1690,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1473,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1514,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1529,
											"end": 1661,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1593,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1578,
											"end": 1581,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1574,
											"end": 1594,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1595,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1622,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1615,
											"end": 1616,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1608,
											"end": 1623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1650,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1643,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1651,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1661,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1529,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1675,
											"end": 1684,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1675,
											"end": 1684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 1823,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1695,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1771,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1771,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1762,
											"end": 1771,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1794,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1794,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1817,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1780,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1780,
											"end": 1817,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1797,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2653,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2231,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2320,
											"end": 2321,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2320,
											"end": 2321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2647,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2377,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2405,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2396,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2406,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2647,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2377,
											"end": 2647,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2457,
											"end": 2461,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2453,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2449,
											"end": 2455,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 2462,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2439,
											"end": 2443,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2463,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2486,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2433,
											"end": 2486,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2466,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2466,
											"end": 2484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2484,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2466,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2514,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2502,
											"end": 2524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2554,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2499,
											"end": 2554,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2554,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2499,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2637,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2637,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2637,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2615,
											"end": 2637,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2377,
											"end": 2647,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2647,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2377,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2653,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2653,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2653,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2653,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2653,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2231,
											"end": 2653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 3464,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2658,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2712,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2745,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2727,
											"end": 2807,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2792,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2792,
											"end": 2797,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2807,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2727,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2826,
											"end": 2830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2816,
											"end": 2892,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2863,
											"end": 2864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2877,
											"end": 2882,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2892,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2816,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2921,
											"end": 2980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 2980,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2921,
											"end": 2980,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2994,
											"end": 2995,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2989,
											"end": 3119,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3119,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2989,
											"end": 3119,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2901,
											"end": 3119,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 2980,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2921,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2951,
											"end": 2952,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2942,
											"end": 2952,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2942,
											"end": 2952,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2965,
											"end": 2970,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3119,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2989,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3026,
											"end": 3029,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3016,
											"end": 3024,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3030,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3053,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3010,
											"end": 3053,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3033,
											"end": 3051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3033,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3089,
											"end": 3090,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3075,
											"end": 3091,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3091,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 3119,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2901,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 3119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3203,
											"end": 3205,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3193,
											"end": 3201,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3190,
											"end": 3206,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3184,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3178,
											"end": 3182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3188,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3171,
											"end": 3207,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3165,
											"end": 3167,
											"name": "PUSH",
											"source": 2,
											"value": "4E"
										},
										{
											"begin": 3155,
											"end": 3163,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3147,
											"end": 3149,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 3141,
											"end": 3145,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3138,
											"end": 3150,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3134,
											"end": 3169,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3208,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3287,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3128,
											"end": 3287,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3240,
											"end": 3259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3240,
											"end": 3259,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3272,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3272,
											"end": 3277,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3287,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3128,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3344,
											"end": 3352,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3338,
											"end": 3342,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3319,
											"end": 3353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3353,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3319,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3389,
											"end": 3395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3385,
											"end": 3386,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3377,
											"end": 3396,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3368,
											"end": 3375,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3397,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3420,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3362,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3362,
											"end": 3420,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3400,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3400,
											"end": 3418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3418,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3400,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3458,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3458,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 3464,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2658,
											"end": 3464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3469,
											"end": 3600,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3469,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3529,
											"end": 3534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3585,
											"end": 3593,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3579,
											"end": 3583,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3558,
											"end": 3594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3594,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3558,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3594,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3469,
											"end": 3600,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3469,
											"end": 3600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3605,
											"end": 3730,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3605,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3691,
											"end": 3701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3691,
											"end": 3701,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3691,
											"end": 3701,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3688,
											"end": 3724,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3688,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3688,
											"end": 3724,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3704,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3704,
											"end": 3722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"degen/DegenMoneyLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"groupCreateMinFee()": "26d0a334",
							"taskCreateMinFee()": "91096a3c",
							"ticketIncome2GroupLeader(uint256)": "2e26fb4a",
							"ticketIncome2GroupMember(uint256,uint256)": "84105419",
							"ticketIncome2RewardPool(uint256)": "e6ca2a8d",
							"ticketPrice(uint256,uint256,int256,int256,uint256,uint256)": "9b49380b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"groupCreateMinFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taskCreateMinFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketIncome\",\"type\":\"uint256\"}],\"name\":\"ticketIncome2GroupLeader\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketIncome\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memNum\",\"type\":\"uint256\"}],\"name\":\"ticketIncome2GroupMember\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketIncome\",\"type\":\"uint256\"}],\"name\":\"ticketIncome2RewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ith\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewardPool\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"firstGrpId\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"SecondGrpId\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"firstGrpPeopleNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondGrpPeopleNum\",\"type\":\"uint256\"}],\"name\":\"ticketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"degen/DegenMoneyLib.sol\":\"DegenMoneyLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"degen/DegenMoneyLib.sol\":{\"keccak256\":\"0x952acdd309f8e4fec99e744853335ea19ba63b6c4676843969111c75dc50e0e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://460b47eaf7b1bcc6f13e982962dc501d8886db4b8f282b5efbcd87a141d46e69\",\"dweb:/ipfs/QmcASYxmdZmNcJMvb6B3EnkX85sstb4HJzYqATcwd4FbZM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0",
							"usedErrors": []
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"degen/DegenMoneyLib.sol": {
				"ast": {
					"absolutePath": "degen/DegenMoneyLib.sol",
					"exportedSymbols": {
						"DegenMoneyLib": [
							540
						],
						"SafeMath": [
							311
						]
					},
					"id": 541,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 541,
							"sourceUnit": 312,
							"src": "60:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DegenMoneyLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 540,
							"linearizedBaseContracts": [
								540
							],
							"name": "DegenMoneyLib",
							"nameLocation": "131:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 321,
									"mutability": "constant",
									"name": "_taskCreateMinFee",
									"nameLocation": "240:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "215:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 315,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "215:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"id": 320,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 316,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "260:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 319,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 317,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "265:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 318,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "269:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "265:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "260:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 328,
									"mutability": "constant",
									"name": "_groupCreateMinFee",
									"nameLocation": "303:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "278:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 322,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "278:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 327,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 323,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "324:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 326,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 324,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "328:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 325,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "332:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "328:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "324:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 331,
									"mutability": "constant",
									"name": "_a",
									"nameLocation": "366:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "341:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 329,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "341:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 330,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "371:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 334,
									"mutability": "constant",
									"name": "_b",
									"nameLocation": "452:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "427:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 332,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "427:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 333,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "457:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 337,
									"mutability": "constant",
									"name": "_c",
									"nameLocation": "541:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "516:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 335,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "516:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 336,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "546:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 340,
									"mutability": "constant",
									"name": "_p",
									"nameLocation": "630:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "605:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 338,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "605:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 339,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "635:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 343,
									"mutability": "constant",
									"name": "_v",
									"nameLocation": "707:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "682:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 341,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 342,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "712:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 346,
									"mutability": "constant",
									"name": "_alpha",
									"nameLocation": "829:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "804:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 344,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "804:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 345,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "838:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 349,
									"mutability": "constant",
									"name": "_beta",
									"nameLocation": "871:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "846:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 347,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "846:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 348,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "879:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 356,
									"mutability": "constant",
									"name": "_gamma",
									"nameLocation": "957:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "932:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 350,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "932:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"id": 355,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e3031",
											"id": 351,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "966:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_100",
												"typeString": "rational_const 1 / 100"
											},
											"value": "0.01"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 354,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 352,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "973:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 353,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "977:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "973:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "966:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 359,
									"mutability": "constant",
									"name": "_denominator",
									"nameLocation": "1054:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "1029:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 357,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1029:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 358,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1069:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "1145:43:1",
										"statements": [
											{
												"expression": {
													"id": 364,
													"name": "_taskCreateMinFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 321,
													"src": "1163:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 363,
												"id": 365,
												"nodeType": "Return",
												"src": "1156:24:1"
											}
										]
									},
									"functionSelector": "91096a3c",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "taskCreateMinFee",
									"nameLocation": "1090:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1106:2:1"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "1138:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1130:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:15:1"
									},
									"scope": 540,
									"src": "1081:107:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "1261:44:1",
										"statements": [
											{
												"expression": {
													"id": 372,
													"name": "_groupCreateMinFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 328,
													"src": "1279:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 371,
												"id": 373,
												"nodeType": "Return",
												"src": "1272:25:1"
											}
										]
									},
									"functionSelector": "26d0a334",
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "groupCreateMinFee",
									"nameLocation": "1205:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1222:2:1"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "1254:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "1246:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:15:1"
									},
									"scope": 540,
									"src": "1196:109:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "1576:2453:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "_alpha",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "1595:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "35",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															"src": "1595:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f2061766f6964206f766572666c6f772c20616c706861203c3d2035206f6e6c79",
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1608:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452",
																"typeString": "literal_string \"To avoid overflow, alpha <= 5 only\""
															},
															"value": "To avoid overflow, alpha <= 5 only"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452",
																"typeString": "literal_string \"To avoid overflow, alpha <= 5 only\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1587:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1587:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "1587:58:1"
											},
											{
												"assignments": [
													400
												],
												"declarations": [
													{
														"constant": false,
														"id": 400,
														"mutability": "mutable",
														"name": "tp",
														"nameLocation": "2639:2:1",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "2631:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 399,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2631:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 401,
																	"name": "_beta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "2644:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 402,
																		"name": "ith",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "2652:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 403,
																		"name": "_alpha",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "2659:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2652:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2644:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2668:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2672:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "2668:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "2644:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 410,
															"name": "_denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "2677:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2644:45:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 412,
														"name": "_gamma",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "2692:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2644:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2631:67:1"
											},
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "isMonopolyPenalty",
														"nameLocation": "2716:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "2711:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 415,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2711:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 417,
												"nodeType": "VariableDeclarationStatement",
												"src": "2711:22:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 418,
															"name": "firstGrpId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "2747:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "30",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2761:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2747:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 421,
															"name": "SecondGrpId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "2766:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "30",
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2781:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2766:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2747:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 442,
																"name": "firstGrpId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "3013:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3027:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3013:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 445,
																"name": "SecondGrpId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "3032:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "30",
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3046:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3032:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3013:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 468,
														"nodeType": "Block",
														"src": "3253:52:1",
														"statements": [
															{
																"expression": {
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 464,
																		"name": "isMonopolyPenalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3268:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "66616c7365",
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3288:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "3268:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 467,
																"nodeType": "ExpressionStatement",
																"src": "3268:25:1"
															}
														]
													},
													"id": 469,
													"nodeType": "IfStatement",
													"src": "3009:296:1",
													"trueBody": {
														"id": 463,
														"nodeType": "Block",
														"src": "3048:191:1",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 449,
																		"name": "firstGrpPeopleNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 385,
																		"src": "3066:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 450,
																		"name": "_v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "3086:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3066:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 461,
																	"nodeType": "Block",
																	"src": "3168:60:1",
																	"statements": [
																		{
																			"expression": {
																				"id": 459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 457,
																					"name": "isMonopolyPenalty",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 416,
																					"src": "3187:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "66616c7365",
																					"id": 458,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3207:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "false"
																				},
																				"src": "3187:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 460,
																			"nodeType": "ExpressionStatement",
																			"src": "3187:25:1"
																		}
																	]
																},
																"id": 462,
																"nodeType": "IfStatement",
																"src": "3063:165:1",
																"trueBody": {
																	"id": 456,
																	"nodeType": "Block",
																	"src": "3090:59:1",
																	"statements": [
																		{
																			"expression": {
																				"id": 454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 452,
																					"name": "isMonopolyPenalty",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 416,
																					"src": "3109:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "74727565",
																					"id": 453,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3129:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"src": "3109:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 455,
																			"nodeType": "ExpressionStatement",
																			"src": "3109:24:1"
																		}
																	]
																}
															}
														]
													}
												},
												"id": 470,
												"nodeType": "IfStatement",
												"src": "2744:561:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "2783:211:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 425,
																		"name": "firstGrpPeopleNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 385,
																		"src": "2801:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 426,
																		"name": "secondGrpPeopleNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "2821:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2801:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 428,
																	"name": "_v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "2842:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2801:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 439,
																"nodeType": "Block",
																"src": "2923:60:1",
																"statements": [
																	{
																		"expression": {
																			"id": 437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 435,
																				"name": "isMonopolyPenalty",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "2942:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 436,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2962:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "2942:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 438,
																		"nodeType": "ExpressionStatement",
																		"src": "2942:25:1"
																	}
																]
															},
															"id": 440,
															"nodeType": "IfStatement",
															"src": "2798:185:1",
															"trueBody": {
																"id": 434,
																"nodeType": "Block",
																"src": "2845:59:1",
																"statements": [
																	{
																		"expression": {
																			"id": 432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 430,
																				"name": "isMonopolyPenalty",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "2864:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2884:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "2864:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 433,
																		"nodeType": "ExpressionStatement",
																		"src": "2864:24:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"id": 471,
													"name": "isMonopolyPenalty",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 416,
													"src": "3321:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 481,
												"nodeType": "IfStatement",
												"src": "3317:683:1",
												"trueBody": {
													"id": 480,
													"nodeType": "Block",
													"src": "3339:661:1",
													"statements": [
														{
															"expression": {
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 472,
																	"name": "tp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "3947:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 473,
																			"name": "totalRewardPool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 379,
																			"src": "3953:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 474,
																			"name": "_p",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "3971:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3953:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 476,
																		"name": "_denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "3976:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3953:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3947:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 479,
															"nodeType": "ExpressionStatement",
															"src": "3947:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 482,
													"name": "tp",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 400,
													"src": "4019:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 391,
												"id": 483,
												"nodeType": "Return",
												"src": "4012:9:1"
											}
										]
									},
									"functionSelector": "9b49380b",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketPrice",
									"nameLocation": "1322:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "ith",
												"nameLocation": "1352:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1344:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "totalRewardPool",
												"nameLocation": "1375:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1367:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1367:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "firstGrpId",
												"nameLocation": "1408:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1401:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 380,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1401:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "SecondGrpId",
												"nameLocation": "1436:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1429:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 382,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1429:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "firstGrpPeopleNum",
												"nameLocation": "1466:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1458:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "secondGrpPeopleNum",
												"nameLocation": "1502:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1494:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1333:194:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1563:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1555:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1555:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1554:15:1"
									},
									"scope": 540,
									"src": "1313:2716:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "4128:389:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 492,
															"name": "ticketIncome",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "4146:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 493,
															"name": "_b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "4161:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4146:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 495,
														"name": "_denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "4166:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4146:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 491,
												"id": 497,
												"nodeType": "Return",
												"src": "4139:39:1"
											}
										]
									},
									"functionSelector": "e6ca2a8d",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketIncome2RewardPool",
									"nameLocation": "4046:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "ticketIncome",
												"nameLocation": "4078:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "4070:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4070:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:22:1"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "4121:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "4113:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4113:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4112:15:1"
									},
									"scope": 540,
									"src": "4037:480:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "4617:391:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 506,
															"name": "ticketIncome",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "4635:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 507,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "4650:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4635:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 509,
														"name": "_denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "4655:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4635:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 505,
												"id": 511,
												"nodeType": "Return",
												"src": "4628:39:1"
											}
										]
									},
									"functionSelector": "2e26fb4a",
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketIncome2GroupLeader",
									"nameLocation": "4534:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "ticketIncome",
												"nameLocation": "4567:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "4559:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4559:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4558:22:1"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "4610:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "4602:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4602:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4601:15:1"
									},
									"scope": 540,
									"src": "4525:483:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "5124:564:1",
										"statements": [
											{
												"assignments": [
													523
												],
												"declarations": [
													{
														"constant": false,
														"id": 523,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "5143:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 538,
														"src": "5135:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5135:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 529,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"id": 524,
															"name": "_denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5147:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 525,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "5162:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5147:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 527,
														"name": "_b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "5167:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5147:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5135:34:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 530,
																"name": "ticketIncome",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "5187:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 531,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "5202:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5187:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 533,
															"name": "_denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "5206:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5187:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 535,
														"name": "memNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "5221:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5187:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 521,
												"id": 537,
												"nodeType": "Return",
												"src": "5180:47:1"
											}
										]
									},
									"functionSelector": "84105419",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketIncome2GroupMember",
									"nameLocation": "5025:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "ticketIncome",
												"nameLocation": "5058:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "5050:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "memNum",
												"nameLocation": "5080:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "5072:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5072:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5049:38:1"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "5117:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "5109:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5109:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5108:15:1"
									},
									"scope": 540,
									"src": "5016:672:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 541,
							"src": "123:5570:1",
							"usedErrors": []
						}
					],
					"src": "33:5664:1"
				},
				"id": 1
			}
		}
	}
}