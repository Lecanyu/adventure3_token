{
	"id": "db7e60bd8771a29e954b23aed3bd03de",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"degen/DegenMoneyLib.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.6;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n\r\nlibrary DegenMoneyLib {\r\n    event LogUint256(string, uint256);\r\n\r\n    uint256 constant private _decimal = 10**6;\r\n    \r\n    //****************\r\n    // PARAMS\r\n    //****************\r\n    uint256 constant private _taskCreateMinFee = 1000 * 10**6;\r\n    uint256 constant private _groupCreateMinFee = 100 * 10**6;\r\n    uint256 constant private _a = 30;        // 门票金额给队长的比例（%）\r\n    uint256 constant private _b = 500;       // 门票金额投入奖池的比例（%）\r\n    uint256 constant private _c = 100;       // 队长的最终奖池收益比例（%）\r\n    uint256 constant private _p = 100;       // MonopolyPenalty比例（%）\r\n    uint256 constant private _v = 10;       // 第一名队伍比第二名队伍人数多_v时，触发MonopolyPenalty\r\n\r\n    uint256 constant private _alpha = 2;\r\n    uint256 constant private _beta = 10;               // beta = _beta / _denominator\r\n    uint256 constant private _gamma = 5 * 10**6;    // absolute init ticket price threshold\r\n    uint256 constant private _denominator = 1000;\r\n\r\n    function taskCreateMinFee() public pure returns (uint256 money) {\r\n        return _taskCreateMinFee;\r\n    }\r\n\r\n    function groupCreateMinFee() public pure returns (uint256 money) {\r\n        return _groupCreateMinFee;\r\n    }\r\n\r\n    //****************\r\n    // ticket function\r\n    //****************\r\n    function ticketPrice(\r\n        uint256 ith, \r\n        uint256 totalRewardPool,\r\n        int256 firstGrpId,\r\n        int256 SecondGrpId,\r\n        uint256 firstGrpPeopleNum,\r\n        uint256 secondGrpPeopleNum\r\n    ) \r\n    public pure returns (uint256 price) \r\n    {\r\n        require(_alpha <= 5, \"To avoid overflow, alpha <= 5 only\");\r\n\r\n        bool flag = true;\r\n        uint256 tp = 1;\r\n        \r\n        for (uint i=0; i < _alpha; i++) {\r\n            (flag, tp) = SafeMath.tryMul(tp, ith);\r\n            require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\");\r\n        }\r\n\r\n        (flag, tp) = SafeMath.tryMul(tp, _beta);\r\n        require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\");\r\n\r\n        (flag, tp) = SafeMath.tryMul(tp, _decimal);\r\n        require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*_decimal.\");\r\n\r\n        (flag, tp) = SafeMath.tryDiv(tp, _denominator);\r\n        require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\");\r\n        \r\n        (flag, tp) = SafeMath.tryAdd(tp, _gamma);\r\n        require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\");\r\n\r\n\r\n        // uint256 tp = _beta * ith ** _alpha * _decimal / _denominator + _gamma;\r\n\r\n        bool isMonopolyPenalty;\r\n        if(firstGrpId >= 0 && SecondGrpId >= 0){\r\n            if(firstGrpPeopleNum - secondGrpPeopleNum > _v){\r\n                isMonopolyPenalty = true;\r\n            }\r\n            else {\r\n                isMonopolyPenalty = false;\r\n            }\r\n        }\r\n        else if (firstGrpId >= 0 && SecondGrpId < 0){\r\n            if(firstGrpPeopleNum > _v) {\r\n                isMonopolyPenalty = true;\r\n            }\r\n            else {\r\n                isMonopolyPenalty = false;\r\n            }\r\n        }\r\n        else{\r\n            isMonopolyPenalty = false;\r\n        }\r\n\r\n        if (isMonopolyPenalty){\r\n            uint256 extraFee = 0;\r\n            (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p);\r\n            require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\");\r\n            (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator);\r\n            require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\");\r\n            (flag, tp) = SafeMath.tryAdd(tp, extraFee);\r\n            require(flag, \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\");\r\n\r\n            // tp += totalRewardPool * _p / _denominator;\r\n        }\r\n\r\n        return tp;\r\n    }\r\n\r\n    function ticketIncome2RewardPool(uint256 ticketIncome) public pure returns (uint256 money) {\r\n        // return ticketIncome * _b / _denominator;\r\n\r\n        bool flag = false;\r\n        uint256 m = 0;\r\n        (flag, m) = SafeMath.tryMul(ticketIncome, _b);\r\n        require(flag, \"[ticketIncome2RewardPool] overflow.\");\r\n        (flag, m) = SafeMath.tryDiv(m, _denominator);\r\n        require(flag, \"[ticketIncome2RewardPool] overflow.\");\r\n        return m;\r\n    }\r\n\r\n    function ticketIncome2GroupLeader(uint256 ticketIncome) public pure returns (uint256 money) {\r\n        // return ticketIncome * _a / _denominator;\r\n\r\n        bool flag = false;\r\n        uint256 m = 0;\r\n        (flag, m) = SafeMath.tryMul(ticketIncome, _a);\r\n        require(flag, \"[ticketIncome2GroupLeader] overflow.\");\r\n        (flag, m) = SafeMath.tryDiv(m, _denominator);\r\n        require(flag, \"[ticketIncome2GroupLeader] overflow.\");\r\n        return m;\r\n    }\r\n\r\n    function ticketIncome2GroupMember(uint256 ticketIncome, uint256 memNum) public pure returns (uint256 money) {\r\n        // return ticketIncome * (_denominator - _a - _b) / _denominator / memNum;\r\n\r\n        bool flag = false;\r\n        uint256 m = 0;\r\n        uint256 c = 0;\r\n        (flag, c) = SafeMath.trySub(_denominator, _a);\r\n        require(flag, \"[ticketIncome2GroupMember] overflow.\");\r\n        (flag, c) = SafeMath.trySub(c, _b);\r\n        require(flag, \"[ticketIncome2GroupMember] overflow.\");\r\n        (flag, m) = SafeMath.tryMul(ticketIncome, c);\r\n        require(flag, \"[ticketIncome2GroupMember] overflow.\");\r\n        (flag, m) = SafeMath.tryDiv(m, _denominator);\r\n        require(flag, \"[ticketIncome2GroupMember] overflow.\");\r\n        (flag, m) = SafeMath.tryDiv(m, memNum);\r\n        require(flag, \"[ticketIncome2GroupMember] overflow.\");\r\n\r\n        return m;\r\n    }\r\n\r\n    //****************\r\n    // reward pool function\r\n    //****************\r\n    function rewardPool2GroupLeader(uint256 totalReward) public pure returns (uint256 money) {\r\n        // return totalReward * _c / _denominator;\r\n\r\n        bool flag = false;\r\n        uint256 m = 0;\r\n        (flag, m) = SafeMath.tryMul(totalReward, _c);\r\n        require(flag, \"[rewardPool2GroupLeader] overflow.\");\r\n        (flag, m) = SafeMath.tryDiv(m, _denominator);\r\n        require(flag, \"[rewardPool2GroupLeader] overflow.\");\r\n\r\n        return m;\r\n    }\r\n\r\n    function rewardPool2GroupMember(uint256 totalReward, uint256 memNum) public pure returns (uint256 money) {\r\n        // return ticketIncome * (_denominator - _c) / _denominator / memNum;\r\n\r\n        bool flag = false;\r\n        uint256 m = 0;\r\n        uint256 c = 0;\r\n        (flag, c) = SafeMath.trySub(_denominator, _c);\r\n        require(flag, \"[rewardPool2GroupMember] overflow.\");\r\n        (flag, m) = SafeMath.tryMul(totalReward, c);\r\n        require(flag, \"[rewardPool2GroupMember] overflow.\");\r\n        (flag, m) = SafeMath.tryDiv(m, _denominator);\r\n        require(flag, \"[rewardPool2GroupMember] overflow.\");\r\n        (flag, m) = SafeMath.tryDiv(m, memNum);\r\n        require(flag, \"[rewardPool2GroupMember] overflow.\");\r\n\r\n        return m;\r\n    }\r\n}\r\n\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xEE DUP7 0xE8 KECCAK256 DUP14 0xE7 0x4B EXTCODEHASH LOG4 0xB1 PUSH16 0x3B51DCF7FAC733127FC4F9E663FD4716 DUP12 SWAP4 DUP2 DIV PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xEE DUP7 0xE8 KECCAK256 DUP14 0xE7 0x4B EXTCODEHASH LOG4 0xB1 PUSH16 0x3B51DCF7FAC733127FC4F9E663FD4716 DUP12 SWAP4 DUP2 DIV PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"degen/DegenMoneyLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"degen/DegenMoneyLib.sol": {
				"DegenMoneyLib": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "LogUint256",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "groupCreateMinFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								}
							],
							"name": "rewardPool2GroupLeader",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "totalReward",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memNum",
									"type": "uint256"
								}
							],
							"name": "rewardPool2GroupMember",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taskCreateMinFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ticketIncome",
									"type": "uint256"
								}
							],
							"name": "ticketIncome2GroupLeader",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ticketIncome",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memNum",
									"type": "uint256"
								}
							],
							"name": "ticketIncome2GroupMember",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ticketIncome",
									"type": "uint256"
								}
							],
							"name": "ticketIncome2RewardPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ith",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalRewardPool",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "firstGrpId",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "SecondGrpId",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "firstGrpPeopleNum",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "secondGrpPeopleNum",
									"type": "uint256"
								}
							],
							"name": "ticketPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"degen/DegenMoneyLib.sol\":123:7297  library DegenMoneyLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"degen/DegenMoneyLib.sol\":123:7297  library DegenMoneyLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91096a3c\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x91096a3c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9b49380b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbeb19a21\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe6ca2a8d\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup1\n      0x26d0a334\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2e26fb4a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ed12ab7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x84105419\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"degen/DegenMoneyLib.sol\":1296:1405  function groupCreateMinFee() public pure returns (uint256 money) {... */\n    tag_2:\n        /* \"degen/DegenMoneyLib.sol\":421:432  100 * 10**6 */\n      0x05f5e100\n        /* \"degen/DegenMoneyLib.sol\":1296:1405  function groupCreateMinFee() public pure returns (uint256 money) {... */\n    tag_11:\n      mload(0x40)\n        /* \"#utility.yul\":168:193   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":156:158   */\n      0x20\n        /* \"#utility.yul\":141:159   */\n      add\n        /* \"degen/DegenMoneyLib.sol\":1296:1405  function groupCreateMinFee() public pure returns (uint256 money) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"degen/DegenMoneyLib.sol\":4638:5103  function ticketIncome2GroupLeader(uint256 ticketIncome) public pure returns (uint256 money) {... */\n    tag_3:\n      tag_11\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":6541:7294  function rewardPool2GroupMember(uint256 totalReward, uint256 memNum) public pure returns (uint256 money) {... */\n    tag_4:\n      tag_11\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":5111:5990  function ticketIncome2GroupMember(uint256 ticketIncome, uint256 memNum) public pure returns (uint256 money) {... */\n    tag_5:\n      tag_11\n      tag_26\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":1181:1288  function taskCreateMinFee() public pure returns (uint256 money) {... */\n    tag_6:\n        /* \"degen/DegenMoneyLib.sol\":356:368  1000 * 10**6 */\n      0x3b9aca00\n        /* \"degen/DegenMoneyLib.sol\":1181:1288  function taskCreateMinFee() public pure returns (uint256 money) {... */\n      jump(tag_11)\n        /* \"degen/DegenMoneyLib.sol\":1485:4160  function ticketPrice(... */\n    tag_7:\n      tag_11\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":6075:6533  function rewardPool2GroupLeader(uint256 totalReward) public pure returns (uint256 money) {... */\n    tag_8:\n      tag_11\n      tag_38\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":4168:4630  function ticketIncome2RewardPool(uint256 ticketIncome) public pure returns (uint256 money) {... */\n    tag_9:\n      tag_11\n      tag_42\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":4638:5103  function ticketIncome2GroupLeader(uint256 ticketIncome) public pure returns (uint256 money) {... */\n    tag_18:\n        /* \"degen/DegenMoneyLib.sol\":4715:4728  uint256 money */\n      0x00\n      dup1\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":4860:4893  SafeMath.tryMul(ticketIncome, _a) */\n      tag_47\n        /* \"degen/DegenMoneyLib.sol\":4876:4888  ticketIncome */\n      dup5\n        /* \"degen/DegenMoneyLib.sol\":469:471  30 */\n      0x1e\n        /* \"degen/DegenMoneyLib.sol\":4860:4875  SafeMath.tryMul */\n      tag_48\n        /* \"degen/DegenMoneyLib.sol\":4860:4893  SafeMath.tryMul(ticketIncome, _a) */\n      jump\t// in\n    tag_47:\n        /* \"degen/DegenMoneyLib.sol\":4848:4893  (flag, m) = SafeMath.tryMul(ticketIncome, _a) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":4904:4957  require(flag, \"[ticketIncome2GroupLeader] overflow.\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"degen/DegenMoneyLib.sol\":4980:5012  SafeMath.tryDiv(m, _denominator) */\n      tag_52\n        /* \"degen/DegenMoneyLib.sol\":4996:4997  m */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1168:1172  1000 */\n      0x03e8\n        /* \"degen/DegenMoneyLib.sol\":4980:4995  SafeMath.tryDiv */\n      tag_53\n        /* \"degen/DegenMoneyLib.sol\":4980:5012  SafeMath.tryDiv(m, _denominator) */\n      jump\t// in\n    tag_52:\n        /* \"degen/DegenMoneyLib.sol\":4968:5012  (flag, m) = SafeMath.tryDiv(m, _denominator) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":5023:5076  require(flag, \"[ticketIncome2GroupLeader] overflow.\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_54:\n        /* \"degen/DegenMoneyLib.sol\":5094:5095  m */\n      swap4\n        /* \"degen/DegenMoneyLib.sol\":4638:5103  function ticketIncome2GroupLeader(uint256 ticketIncome) public pure returns (uint256 money) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"degen/DegenMoneyLib.sol\":6541:7294  function rewardPool2GroupMember(uint256 totalReward, uint256 memNum) public pure returns (uint256 money) {... */\n    tag_23:\n        /* \"degen/DegenMoneyLib.sol\":6631:6644  uint256 money */\n      0x00\n      dup1\n      dup1\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":6826:6859  SafeMath.trySub(_denominator, _c) */\n      tag_57\n        /* \"degen/DegenMoneyLib.sol\":1168:1172  1000 */\n      0x03e8\n        /* \"degen/DegenMoneyLib.sol\":646:649  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":6826:6841  SafeMath.trySub */\n      tag_58\n        /* \"degen/DegenMoneyLib.sol\":6826:6859  SafeMath.trySub(_denominator, _c) */\n      jump\t// in\n    tag_57:\n        /* \"degen/DegenMoneyLib.sol\":6814:6859  (flag, c) = SafeMath.trySub(_denominator, _c) */\n      swap1\n      swap4\n      pop\n      swap1\n      pop\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":6870:6921  require(flag, \"[rewardPool2GroupMember] overflow.\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_61\n      jump\t// in\n    tag_59:\n        /* \"degen/DegenMoneyLib.sol\":6944:6975  SafeMath.tryMul(totalReward, c) */\n      tag_62\n        /* \"degen/DegenMoneyLib.sol\":6960:6971  totalReward */\n      dup7\n        /* \"degen/DegenMoneyLib.sol\":6973:6974  c */\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":6944:6959  SafeMath.tryMul */\n      tag_48\n        /* \"degen/DegenMoneyLib.sol\":6944:6975  SafeMath.tryMul(totalReward, c) */\n      jump\t// in\n    tag_62:\n        /* \"degen/DegenMoneyLib.sol\":6932:6975  (flag, m) = SafeMath.tryMul(totalReward, c) */\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":6986:7037  require(flag, \"[rewardPool2GroupMember] overflow.\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_61\n      jump\t// in\n    tag_63:\n        /* \"degen/DegenMoneyLib.sol\":7060:7092  SafeMath.tryDiv(m, _denominator) */\n      tag_65\n        /* \"degen/DegenMoneyLib.sol\":7076:7077  m */\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":1168:1172  1000 */\n      0x03e8\n        /* \"degen/DegenMoneyLib.sol\":7060:7075  SafeMath.tryDiv */\n      tag_53\n        /* \"degen/DegenMoneyLib.sol\":7060:7092  SafeMath.tryDiv(m, _denominator) */\n      jump\t// in\n    tag_65:\n        /* \"degen/DegenMoneyLib.sol\":7048:7092  (flag, m) = SafeMath.tryDiv(m, _denominator) */\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":7103:7154  require(flag, \"[rewardPool2GroupMember] overflow.\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_61\n      jump\t// in\n    tag_66:\n        /* \"degen/DegenMoneyLib.sol\":7177:7203  SafeMath.tryDiv(m, memNum) */\n      tag_68\n        /* \"degen/DegenMoneyLib.sol\":7193:7194  m */\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":7196:7202  memNum */\n      dup7\n        /* \"degen/DegenMoneyLib.sol\":7177:7192  SafeMath.tryDiv */\n      tag_53\n        /* \"degen/DegenMoneyLib.sol\":7177:7203  SafeMath.tryDiv(m, memNum) */\n      jump\t// in\n    tag_68:\n        /* \"degen/DegenMoneyLib.sol\":7165:7203  (flag, m) = SafeMath.tryDiv(m, memNum) */\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":7214:7265  require(flag, \"[rewardPool2GroupMember] overflow.\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_61\n      jump\t// in\n    tag_69:\n      pop\n        /* \"degen/DegenMoneyLib.sol\":7285:7286  m */\n      swap2\n      pop\n      pop\n        /* \"degen/DegenMoneyLib.sol\":6541:7294  function rewardPool2GroupMember(uint256 totalReward, uint256 memNum) public pure returns (uint256 money) {... */\n    tag_56:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"degen/DegenMoneyLib.sol\":5111:5990  function ticketIncome2GroupMember(uint256 ticketIncome, uint256 memNum) public pure returns (uint256 money) {... */\n    tag_27:\n        /* \"degen/DegenMoneyLib.sol\":5204:5217  uint256 money */\n      0x00\n      dup1\n      dup1\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":5404:5437  SafeMath.trySub(_denominator, _a) */\n      tag_72\n        /* \"degen/DegenMoneyLib.sol\":1168:1172  1000 */\n      0x03e8\n        /* \"degen/DegenMoneyLib.sol\":469:471  30 */\n      0x1e\n        /* \"degen/DegenMoneyLib.sol\":5404:5419  SafeMath.trySub */\n      tag_58\n        /* \"degen/DegenMoneyLib.sol\":5404:5437  SafeMath.trySub(_denominator, _a) */\n      jump\t// in\n    tag_72:\n        /* \"degen/DegenMoneyLib.sol\":5392:5437  (flag, c) = SafeMath.trySub(_denominator, _a) */\n      swap1\n      swap4\n      pop\n      swap1\n      pop\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":5448:5501  require(flag, \"[ticketIncome2GroupMember] overflow.\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_75\n      jump\t// in\n    tag_73:\n        /* \"degen/DegenMoneyLib.sol\":5524:5546  SafeMath.trySub(c, _b) */\n      tag_76\n        /* \"degen/DegenMoneyLib.sol\":5540:5541  c */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":556:559  500 */\n      0x01f4\n        /* \"degen/DegenMoneyLib.sol\":5524:5539  SafeMath.trySub */\n      tag_58\n        /* \"degen/DegenMoneyLib.sol\":5524:5546  SafeMath.trySub(c, _b) */\n      jump\t// in\n    tag_76:\n        /* \"degen/DegenMoneyLib.sol\":5512:5546  (flag, c) = SafeMath.trySub(c, _b) */\n      swap1\n      swap4\n      pop\n      swap1\n      pop\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":5557:5610  require(flag, \"[ticketIncome2GroupMember] overflow.\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_75\n      jump\t// in\n    tag_77:\n        /* \"degen/DegenMoneyLib.sol\":5633:5665  SafeMath.tryMul(ticketIncome, c) */\n      tag_79\n        /* \"degen/DegenMoneyLib.sol\":5649:5661  ticketIncome */\n      dup7\n        /* \"degen/DegenMoneyLib.sol\":5663:5664  c */\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":5633:5648  SafeMath.tryMul */\n      tag_48\n        /* \"degen/DegenMoneyLib.sol\":5633:5665  SafeMath.tryMul(ticketIncome, c) */\n      jump\t// in\n    tag_79:\n        /* \"degen/DegenMoneyLib.sol\":5621:5665  (flag, m) = SafeMath.tryMul(ticketIncome, c) */\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":5676:5729  require(flag, \"[ticketIncome2GroupMember] overflow.\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_75\n      jump\t// in\n    tag_80:\n        /* \"degen/DegenMoneyLib.sol\":5752:5784  SafeMath.tryDiv(m, _denominator) */\n      tag_82\n        /* \"degen/DegenMoneyLib.sol\":5768:5769  m */\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":1168:1172  1000 */\n      0x03e8\n        /* \"degen/DegenMoneyLib.sol\":5752:5767  SafeMath.tryDiv */\n      tag_53\n        /* \"degen/DegenMoneyLib.sol\":5752:5784  SafeMath.tryDiv(m, _denominator) */\n      jump\t// in\n    tag_82:\n        /* \"degen/DegenMoneyLib.sol\":5740:5784  (flag, m) = SafeMath.tryDiv(m, _denominator) */\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":5795:5848  require(flag, \"[ticketIncome2GroupMember] overflow.\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_75\n      jump\t// in\n    tag_83:\n        /* \"degen/DegenMoneyLib.sol\":5871:5897  SafeMath.tryDiv(m, memNum) */\n      tag_85\n        /* \"degen/DegenMoneyLib.sol\":5887:5888  m */\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":5890:5896  memNum */\n      dup7\n        /* \"degen/DegenMoneyLib.sol\":5871:5886  SafeMath.tryDiv */\n      tag_53\n        /* \"degen/DegenMoneyLib.sol\":5871:5897  SafeMath.tryDiv(m, memNum) */\n      jump\t// in\n    tag_85:\n        /* \"degen/DegenMoneyLib.sol\":5859:5897  (flag, m) = SafeMath.tryDiv(m, memNum) */\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":5908:5961  require(flag, \"[ticketIncome2GroupMember] overflow.\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_75\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":1485:4160  function ticketPrice(... */\n    tag_35:\n        /* \"degen/DegenMoneyLib.sol\":1727:1740  uint256 price */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":1842:1846  true */\n      0x01\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":1830:1839  bool flag */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":1892:2084  for (uint i=0; i < _alpha; i++) {... */\n    tag_93:\n        /* \"degen/DegenMoneyLib.sol\":940:941  2 */\n      0x02\n        /* \"degen/DegenMoneyLib.sol\":1907:1908  i */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1907:1917  i < _alpha */\n      lt\n        /* \"degen/DegenMoneyLib.sol\":1892:2084  for (uint i=0; i < _alpha; i++) {... */\n      iszero\n      tag_94\n      jumpi\n        /* \"degen/DegenMoneyLib.sol\":1952:1976  SafeMath.tryMul(tp, ith) */\n      tag_96\n        /* \"degen/DegenMoneyLib.sol\":1968:1970  tp */\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":1972:1975  ith */\n      dup12\n        /* \"degen/DegenMoneyLib.sol\":1952:1967  SafeMath.tryMul */\n      tag_48\n        /* \"degen/DegenMoneyLib.sol\":1952:1976  SafeMath.tryMul(tp, ith) */\n      jump\t// in\n    tag_96:\n        /* \"degen/DegenMoneyLib.sol\":1939:1976  (flag, tp) = SafeMath.tryMul(tp, ith) */\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":1991:2072  require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\") */\n      tag_97\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2986:2988   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":1991:2072  require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2968:2989   */\n      mstore\n        /* \"#utility.yul\":3005:3023   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2998:3028   */\n      swap2\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":3044:3062   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3037:3099   */\n      mstore\n        /* \"#utility.yul\":3135:3169   */\n      0x756c617465207469636b657420707269636520696e20692a2a5f616c7068612e\n        /* \"#utility.yul\":3115:3133   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3108:3170   */\n      mstore\n        /* \"#utility.yul\":3187:3206   */\n      0x84\n      add\n        /* \"degen/DegenMoneyLib.sol\":1991:2072  require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\") */\n      tag_50\n        /* \"#utility.yul\":2784:3212   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":1991:2072  require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\") */\n    tag_97:\n        /* \"degen/DegenMoneyLib.sol\":1919:1922  i++ */\n      dup1\n      tag_100\n      dup2\n      tag_101\n      jump\t// in\n    tag_100:\n      swap2\n      pop\n      pop\n        /* \"degen/DegenMoneyLib.sol\":1892:2084  for (uint i=0; i < _alpha; i++) {... */\n      jump(tag_93)\n    tag_94:\n      pop\n        /* \"degen/DegenMoneyLib.sol\":2109:2135  SafeMath.tryMul(tp, _beta) */\n      tag_102\n        /* \"degen/DegenMoneyLib.sol\":2125:2127  tp */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":981:983  10 */\n      0x0a\n        /* \"degen/DegenMoneyLib.sol\":2109:2124  SafeMath.tryMul */\n      tag_48\n        /* \"degen/DegenMoneyLib.sol\":2109:2135  SafeMath.tryMul(tp, _beta) */\n      jump\t// in\n    tag_102:\n        /* \"degen/DegenMoneyLib.sol\":2096:2135  (flag, tp) = SafeMath.tryMul(tp, _beta) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":2146:2233  require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3691:3693   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":2146:2233  require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3673:3694   */\n      mstore\n        /* \"#utility.yul\":3730:3732   */\n      0x46\n        /* \"#utility.yul\":3710:3728   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3703:3733   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":3749:3767   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3742:3804   */\n      mstore\n        /* \"#utility.yul\":3840:3874   */\n      0x756c617465207469636b657420707269636520696e205f626574612a692a2a5f\n        /* \"#utility.yul\":3820:3838   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3813:3875   */\n      mstore\n      shl(0xd1, 0x30b638343097)\n        /* \"#utility.yul\":3891:3910   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":3884:3921   */\n      mstore\n        /* \"#utility.yul\":3938:3957   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":2146:2233  require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\") */\n      tag_50\n        /* \"#utility.yul\":3489:3963   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":2146:2233  require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\") */\n    tag_103:\n        /* \"degen/DegenMoneyLib.sol\":2259:2288  SafeMath.tryMul(tp, _decimal) */\n      tag_106\n        /* \"degen/DegenMoneyLib.sol\":2275:2277  tp */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":230:235  10**6 */\n      0x0f4240\n        /* \"degen/DegenMoneyLib.sol\":2259:2274  SafeMath.tryMul */\n      tag_48\n        /* \"degen/DegenMoneyLib.sol\":2259:2288  SafeMath.tryMul(tp, _decimal) */\n      jump\t// in\n    tag_106:\n        /* \"degen/DegenMoneyLib.sol\":2246:2288  (flag, tp) = SafeMath.tryMul(tp, _decimal) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":2299:2410  require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*_decimal.\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4170:4172   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":2299:2410  require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*_decimal.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4152:4173   */\n      mstore\n        /* \"#utility.yul\":4209:4211   */\n      0x5e\n        /* \"#utility.yul\":4189:4207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4182:4212   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":4228:4246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4221:4283   */\n      mstore\n        /* \"#utility.yul\":4319:4353   */\n      0x756c617465207469636b657420707269636520696e20285f626574612f5f6465\n        /* \"#utility.yul\":4299:4317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4292:4354   */\n      mstore\n        /* \"#utility.yul\":4391:4423   */\n      0x6e6f6d696e61746f722a692a2a5f616c706861292a5f646563696d616c2e0000\n        /* \"#utility.yul\":4370:4389   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":4363:4424   */\n      mstore\n        /* \"#utility.yul\":4441:4460   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":2299:2410  require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*_decimal.\") */\n      tag_50\n        /* \"#utility.yul\":3968:4466   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":2299:2410  require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*_decimal.\") */\n    tag_107:\n        /* \"degen/DegenMoneyLib.sol\":2436:2469  SafeMath.tryDiv(tp, _denominator) */\n      tag_110\n        /* \"degen/DegenMoneyLib.sol\":2452:2454  tp */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1168:1172  1000 */\n      0x03e8\n        /* \"degen/DegenMoneyLib.sol\":2436:2451  SafeMath.tryDiv */\n      tag_53\n        /* \"degen/DegenMoneyLib.sol\":2436:2469  SafeMath.tryDiv(tp, _denominator) */\n      jump\t// in\n    tag_110:\n        /* \"degen/DegenMoneyLib.sol\":2423:2469  (flag, tp) = SafeMath.tryDiv(tp, _denominator) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":2480:2580  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4673:4675   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":2480:2580  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4655:4676   */\n      mstore\n        /* \"#utility.yul\":4712:4714   */\n      0x53\n        /* \"#utility.yul\":4692:4710   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4685:4715   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":4731:4749   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4724:4786   */\n      mstore\n        /* \"#utility.yul\":4822:4856   */\n      0x756c617465207469636b657420707269636520696e205f626574612f5f64656e\n        /* \"#utility.yul\":4802:4820   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4795:4857   */\n      mstore\n      shl(0x69, 0x37b6b4b730ba37b9153495152fb0b638343097)\n        /* \"#utility.yul\":4873:4892   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":4866:4916   */\n      mstore\n        /* \"#utility.yul\":4933:4952   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":2480:2580  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\") */\n      tag_50\n        /* \"#utility.yul\":4471:4958   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":2480:2580  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\") */\n    tag_111:\n        /* \"degen/DegenMoneyLib.sol\":2614:2641  SafeMath.tryAdd(tp, _gamma) */\n      tag_114\n        /* \"degen/DegenMoneyLib.sol\":2630:2632  tp */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1069:1078  5 * 10**6 */\n      0x4c4b40\n        /* \"degen/DegenMoneyLib.sol\":2614:2629  SafeMath.tryAdd */\n      tag_115\n        /* \"degen/DegenMoneyLib.sol\":2614:2641  SafeMath.tryAdd(tp, _gamma) */\n      jump\t// in\n    tag_114:\n        /* \"degen/DegenMoneyLib.sol\":2601:2641  (flag, tp) = SafeMath.tryAdd(tp, _gamma) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":2652:2760  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5165:5167   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":2652:2760  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5147:5168   */\n      mstore\n        /* \"#utility.yul\":5204:5206   */\n      0x5b\n        /* \"#utility.yul\":5184:5202   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5177:5207   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":5223:5241   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5216:5278   */\n      mstore\n        /* \"#utility.yul\":5314:5348   */\n      0x756c617465207469636b657420707269636520696e205f626574612f5f64656e\n        /* \"#utility.yul\":5294:5312   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5287:5349   */\n      mstore\n        /* \"#utility.yul\":5386:5415   */\n      0x6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e0000000000\n        /* \"#utility.yul\":5365:5384   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":5358:5416   */\n      mstore\n        /* \"#utility.yul\":5433:5452   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":2652:2760  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\") */\n      tag_50\n        /* \"#utility.yul\":4963:5458   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":2652:2760  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\") */\n    tag_116:\n        /* \"degen/DegenMoneyLib.sol\":2860:2882  bool isMonopolyPenalty */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":2910:2911  0 */\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":2896:2906  firstGrpId */\n      dup9\n        /* \"degen/DegenMoneyLib.sol\":2896:2911  firstGrpId >= 0 */\n      slt\n      iszero\n        /* \"degen/DegenMoneyLib.sol\":2896:2931  firstGrpId >= 0 && SecondGrpId >= 0 */\n      dup1\n      iszero\n      tag_119\n      jumpi\n      pop\n        /* \"degen/DegenMoneyLib.sol\":2930:2931  0 */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":2915:2926  SecondGrpId */\n      dup8\n        /* \"degen/DegenMoneyLib.sol\":2915:2931  SecondGrpId >= 0 */\n      slt\n      iszero\n        /* \"degen/DegenMoneyLib.sol\":2896:2931  firstGrpId >= 0 && SecondGrpId >= 0 */\n    tag_119:\n        /* \"degen/DegenMoneyLib.sol\":2893:3454  if(firstGrpId >= 0 && SecondGrpId >= 0){... */\n      iszero\n      tag_120\n      jumpi\n        /* \"degen/DegenMoneyLib.sol\":814:816  10 */\n      0x0a\n        /* \"degen/DegenMoneyLib.sol\":2950:2988  firstGrpPeopleNum - secondGrpPeopleNum */\n      tag_121\n        /* \"degen/DegenMoneyLib.sol\":2970:2988  secondGrpPeopleNum */\n      dup7\n        /* \"degen/DegenMoneyLib.sol\":2950:2967  firstGrpPeopleNum */\n      dup9\n        /* \"degen/DegenMoneyLib.sol\":2950:2988  firstGrpPeopleNum - secondGrpPeopleNum */\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"degen/DegenMoneyLib.sol\":2950:2993  firstGrpPeopleNum - secondGrpPeopleNum > _v */\n      gt\n        /* \"degen/DegenMoneyLib.sol\":2947:3132  if(firstGrpPeopleNum - secondGrpPeopleNum > _v){... */\n      iszero\n      tag_123\n      jumpi\n      pop\n        /* \"degen/DegenMoneyLib.sol\":3033:3037  true */\n      0x01\n        /* \"degen/DegenMoneyLib.sol\":2893:3454  if(firstGrpId >= 0 && SecondGrpId >= 0){... */\n      jump(tag_130)\n        /* \"degen/DegenMoneyLib.sol\":2947:3132  if(firstGrpPeopleNum - secondGrpPeopleNum > _v){... */\n    tag_123:\n      pop\n        /* \"degen/DegenMoneyLib.sol\":3111:3116  false */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":2893:3454  if(firstGrpId >= 0 && SecondGrpId >= 0){... */\n      jump(tag_130)\n    tag_120:\n        /* \"degen/DegenMoneyLib.sol\":3176:3177  0 */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":3162:3172  firstGrpId */\n      dup9\n        /* \"degen/DegenMoneyLib.sol\":3162:3177  firstGrpId >= 0 */\n      slt\n      iszero\n        /* \"degen/DegenMoneyLib.sol\":3162:3196  firstGrpId >= 0 && SecondGrpId < 0 */\n      dup1\n      iszero\n      tag_126\n      jumpi\n      pop\n        /* \"degen/DegenMoneyLib.sol\":3195:3196  0 */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":3181:3192  SecondGrpId */\n      dup8\n        /* \"degen/DegenMoneyLib.sol\":3181:3196  SecondGrpId < 0 */\n      slt\n        /* \"degen/DegenMoneyLib.sol\":3162:3196  firstGrpId >= 0 && SecondGrpId < 0 */\n    tag_126:\n        /* \"degen/DegenMoneyLib.sol\":3158:3454  if (firstGrpId >= 0 && SecondGrpId < 0){... */\n      iszero\n      tag_127\n      jumpi\n        /* \"degen/DegenMoneyLib.sol\":814:816  10 */\n      0x0a\n        /* \"degen/DegenMoneyLib.sol\":3215:3232  firstGrpPeopleNum */\n      dup7\n        /* \"degen/DegenMoneyLib.sol\":3215:3237  firstGrpPeopleNum > _v */\n      gt\n        /* \"degen/DegenMoneyLib.sol\":3212:3377  if(firstGrpPeopleNum > _v) {... */\n      iszero\n      tag_123\n      jumpi\n      pop\n        /* \"degen/DegenMoneyLib.sol\":3278:3282  true */\n      0x01\n        /* \"degen/DegenMoneyLib.sol\":3158:3454  if (firstGrpId >= 0 && SecondGrpId < 0){... */\n      jump(tag_130)\n    tag_127:\n      pop\n        /* \"degen/DegenMoneyLib.sol\":3437:3442  false */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":3158:3454  if (firstGrpId >= 0 && SecondGrpId < 0){... */\n    tag_130:\n        /* \"degen/DegenMoneyLib.sol\":3470:3487  isMonopolyPenalty */\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":3466:4131  if (isMonopolyPenalty){... */\n      iszero\n      tag_131\n      jumpi\n        /* \"degen/DegenMoneyLib.sol\":3503:3519  uint256 extraFee */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":3557:3593  SafeMath.tryMul(totalRewardPool, _p) */\n      tag_132\n        /* \"degen/DegenMoneyLib.sol\":3573:3588  totalRewardPool */\n      dup11\n        /* \"degen/DegenMoneyLib.sol\":736:739  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":3557:3572  SafeMath.tryMul */\n      tag_48\n        /* \"degen/DegenMoneyLib.sol\":3557:3593  SafeMath.tryMul(totalRewardPool, _p) */\n      jump\t// in\n    tag_132:\n        /* \"degen/DegenMoneyLib.sol\":3538:3593  (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p) */\n      swap1\n      swap5\n      pop\n      swap1\n      pop\n      dup4\n        /* \"degen/DegenMoneyLib.sol\":3608:3708  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5798:5800   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":3608:3708  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5780:5801   */\n      mstore\n        /* \"#utility.yul\":5837:5839   */\n      0x53\n        /* \"#utility.yul\":5817:5835   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5810:5840   */\n      mstore\n        /* \"#utility.yul\":5876:5910   */\n      0x4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61\n        /* \"#utility.yul\":5856:5874   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5849:5911   */\n      mstore\n        /* \"#utility.yul\":5947:5981   */\n      0x672c20657874726146656529203d20536166654d6174682e7472794d756c2874\n        /* \"#utility.yul\":5927:5945   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5920:5982   */\n      mstore\n      shl(0x68, 0x6f74616c526577617264506f6f6c2c205f7029)\n        /* \"#utility.yul\":5998:6017   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":5991:6041   */\n      mstore\n        /* \"#utility.yul\":6058:6077   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":3608:3708  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\") */\n      tag_50\n        /* \"#utility.yul\":5596:6083   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":3608:3708  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\") */\n    tag_133:\n        /* \"degen/DegenMoneyLib.sol\":3742:3781  SafeMath.tryDiv(extraFee, _denominator) */\n      tag_136\n        /* \"degen/DegenMoneyLib.sol\":3758:3766  extraFee */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1168:1172  1000 */\n      0x03e8\n        /* \"degen/DegenMoneyLib.sol\":3742:3757  SafeMath.tryDiv */\n      tag_53\n        /* \"degen/DegenMoneyLib.sol\":3742:3781  SafeMath.tryDiv(extraFee, _denominator) */\n      jump\t// in\n    tag_136:\n        /* \"degen/DegenMoneyLib.sol\":3723:3781  (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator) */\n      swap1\n      swap5\n      pop\n      swap1\n      pop\n      dup4\n        /* \"degen/DegenMoneyLib.sol\":3796:3899  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6290:6292   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":3796:3899  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6272:6293   */\n      mstore\n        /* \"#utility.yul\":6329:6331   */\n      0x56\n        /* \"#utility.yul\":6309:6327   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6302:6332   */\n      mstore\n        /* \"#utility.yul\":6368:6402   */\n      0x4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61\n        /* \"#utility.yul\":6348:6366   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6341:6403   */\n      mstore\n        /* \"#utility.yul\":6439:6473   */\n      0x672c20657874726146656529203d20536166654d6174682e7472794469762865\n        /* \"#utility.yul\":6419:6437   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6412:6474   */\n      mstore\n      shl(0x50, 0x787472614665652c205f64656e6f6d696e61746f7229)\n        /* \"#utility.yul\":6490:6509   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":6483:6536   */\n      mstore\n        /* \"#utility.yul\":6553:6572   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":3796:3899  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\") */\n      tag_50\n        /* \"#utility.yul\":6088:6578   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":3796:3899  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\") */\n    tag_137:\n        /* \"degen/DegenMoneyLib.sol\":3927:3956  SafeMath.tryAdd(tp, extraFee) */\n      tag_140\n        /* \"degen/DegenMoneyLib.sol\":3943:3945  tp */\n      dup4\n        /* \"degen/DegenMoneyLib.sol\":3947:3955  extraFee */\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":3927:3942  SafeMath.tryAdd */\n      tag_115\n        /* \"degen/DegenMoneyLib.sol\":3927:3956  SafeMath.tryAdd(tp, extraFee) */\n      jump\t// in\n    tag_140:\n        /* \"degen/DegenMoneyLib.sol\":3914:3956  (flag, tp) = SafeMath.tryAdd(tp, extraFee) */\n      swap1\n      swap5\n      pop\n      swap3\n      pop\n      dup4\n        /* \"degen/DegenMoneyLib.sol\":3971:4058  require(flag, \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6785:6787   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":3971:4058  require(flag, \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6767:6788   */\n      mstore\n        /* \"#utility.yul\":6824:6826   */\n      0x46\n        /* \"#utility.yul\":6804:6822   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6797:6827   */\n      mstore\n        /* \"#utility.yul\":6863:6897   */\n      0x4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61\n        /* \"#utility.yul\":6843:6861   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6836:6898   */\n      mstore\n        /* \"#utility.yul\":6934:6968   */\n      0x672c20747029203d20536166654d6174682e7472794164642874702c20657874\n        /* \"#utility.yul\":6914:6932   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6907:6969   */\n      mstore\n      shl(0xd0, 0x726146656529)\n        /* \"#utility.yul\":6985:7004   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":6978:7015   */\n      mstore\n        /* \"#utility.yul\":7032:7051   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":3971:4058  require(flag, \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\") */\n      tag_50\n        /* \"#utility.yul\":6583:7057   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":3971:4058  require(flag, \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\") */\n    tag_141:\n        /* \"degen/DegenMoneyLib.sol\":3488:4131  {... */\n      pop\n        /* \"degen/DegenMoneyLib.sol\":3466:4131  if (isMonopolyPenalty){... */\n    tag_131:\n      pop\n        /* \"degen/DegenMoneyLib.sol\":4150:4152  tp */\n      swap9\n        /* \"degen/DegenMoneyLib.sol\":1485:4160  function ticketPrice(... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"degen/DegenMoneyLib.sol\":6075:6533  function rewardPool2GroupLeader(uint256 totalReward) public pure returns (uint256 money) {... */\n    tag_39:\n        /* \"degen/DegenMoneyLib.sol\":6149:6162  uint256 money */\n      0x00\n      dup1\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":6293:6325  SafeMath.tryMul(totalReward, _c) */\n      tag_145\n        /* \"degen/DegenMoneyLib.sol\":6309:6320  totalReward */\n      dup5\n        /* \"degen/DegenMoneyLib.sol\":646:649  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":6293:6308  SafeMath.tryMul */\n      tag_48\n        /* \"degen/DegenMoneyLib.sol\":6293:6325  SafeMath.tryMul(totalReward, _c) */\n      jump\t// in\n    tag_145:\n        /* \"degen/DegenMoneyLib.sol\":6281:6325  (flag, m) = SafeMath.tryMul(totalReward, _c) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":6336:6387  require(flag, \"[rewardPool2GroupLeader] overflow.\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_148\n      jump\t// in\n    tag_146:\n        /* \"degen/DegenMoneyLib.sol\":6410:6442  SafeMath.tryDiv(m, _denominator) */\n      tag_149\n        /* \"degen/DegenMoneyLib.sol\":6426:6427  m */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1168:1172  1000 */\n      0x03e8\n        /* \"degen/DegenMoneyLib.sol\":6410:6425  SafeMath.tryDiv */\n      tag_53\n        /* \"degen/DegenMoneyLib.sol\":6410:6442  SafeMath.tryDiv(m, _denominator) */\n      jump\t// in\n    tag_149:\n        /* \"degen/DegenMoneyLib.sol\":6398:6442  (flag, m) = SafeMath.tryDiv(m, _denominator) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":6453:6504  require(flag, \"[rewardPool2GroupLeader] overflow.\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_148\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":4168:4630  function ticketIncome2RewardPool(uint256 ticketIncome) public pure returns (uint256 money) {... */\n    tag_43:\n        /* \"degen/DegenMoneyLib.sol\":4244:4257  uint256 money */\n      0x00\n      dup1\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":4389:4422  SafeMath.tryMul(ticketIncome, _b) */\n      tag_153\n        /* \"degen/DegenMoneyLib.sol\":4405:4417  ticketIncome */\n      dup5\n        /* \"degen/DegenMoneyLib.sol\":556:559  500 */\n      0x01f4\n        /* \"degen/DegenMoneyLib.sol\":4389:4404  SafeMath.tryMul */\n      tag_48\n        /* \"degen/DegenMoneyLib.sol\":4389:4422  SafeMath.tryMul(ticketIncome, _b) */\n      jump\t// in\n    tag_153:\n        /* \"degen/DegenMoneyLib.sol\":4377:4422  (flag, m) = SafeMath.tryMul(ticketIncome, _b) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":4433:4485  require(flag, \"[ticketIncome2RewardPool] overflow.\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_156\n      jump\t// in\n    tag_154:\n        /* \"degen/DegenMoneyLib.sol\":4508:4540  SafeMath.tryDiv(m, _denominator) */\n      tag_157\n        /* \"degen/DegenMoneyLib.sol\":4524:4525  m */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1168:1172  1000 */\n      0x03e8\n        /* \"degen/DegenMoneyLib.sol\":4508:4523  SafeMath.tryDiv */\n      tag_53\n        /* \"degen/DegenMoneyLib.sol\":4508:4540  SafeMath.tryDiv(m, _denominator) */\n      jump\t// in\n    tag_157:\n        /* \"degen/DegenMoneyLib.sol\":4496:4540  (flag, m) = SafeMath.tryDiv(m, _denominator) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":4551:4603  require(flag, \"[ticketIncome2RewardPool] overflow.\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_156\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1339:1832  function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1400:1404  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1406:1413  uint256 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1683:1684  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1688:1689  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1683:1689  a == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1679:1707  if (a == 0) return (true, 0) */\n      tag_161\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1699:1703  true */\n      0x01\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1705:1706  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1691:1707  return (true, 0) */\n      jump(tag_160)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1679:1707  if (a == 0) return (true, 0) */\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1733:1738  a * b */\n      dup4\n      dup4\n      mul\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1737:1738  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1733:1734  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1733:1738  a * b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1733:1734  a */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1756:1761  c / a */\n      tag_163\n      jumpi\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1756:1766  c / a != b */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1752:1785  if (c / a != b) return (false, 0) */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1776:1781  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1783:1784  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1768:1785  return (false, 0) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_160)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1752:1785  if (c / a != b) return (false, 0) */\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1807:1811  true */\n      0x01\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1813:1814  c */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1339:1832  function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_160:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1981:2171  function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2042:2046  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2048:2055  uint256 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2095:2096  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2095:2101  b == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2091:2120  if (b == 0) return (false, 0) */\n      tag_167\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2111:2116  false */\n      0x00\n      swap1\n      pop\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2103:2120  return (false, 0) */\n      jump(tag_160)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2091:2120  if (b == 0) return (false, 0) */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2142:2146  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2152:2153  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2148:2149  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2148:2153  a / b */\n      dup2\n      tag_169\n      jumpi\n      tag_169\n      tag_164\n      jump\t// in\n    tag_169:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2134:2154  return (true, a / b) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1981:2171  function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1002:1191  function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1063:1067  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1069:1076  uint256 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1120:1121  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1116:1117  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1116:1121  b > a */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1112:1140  if (b > a) return (false, 0) */\n      iszero\n      tag_171\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1131:1136  false */\n      0x00\n      swap1\n      pop\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1123:1140  return (false, 0) */\n      jump(tag_160)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1112:1140  if (b > a) return (false, 0) */\n    tag_171:\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1162:1166  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1168:1173  a - b */\n      swap2\n      swap1\n      swap3\n      sub\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1002:1191  function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":641:857  function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":702:706  bool */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":763:768  a + b */\n      dup4\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":786:791  c < a */\n      dup5\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":782:810  if (c < a) return (false, 0) */\n      iszero\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":801:806  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":808:809  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":793:810  return (false, 0) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_160)\n        /* \"#utility.yul\":204:384   */\n    tag_17:\n        /* \"#utility.yul\":263:269   */\n      0x00\n        /* \"#utility.yul\":316:318   */\n      0x20\n        /* \"#utility.yul\":304:313   */\n      dup3\n        /* \"#utility.yul\":295:302   */\n      dup5\n        /* \"#utility.yul\":291:314   */\n      sub\n        /* \"#utility.yul\":287:319   */\n      slt\n        /* \"#utility.yul\":284:336   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":332:333   */\n      0x00\n        /* \"#utility.yul\":329:330   */\n      dup1\n        /* \"#utility.yul\":322:334   */\n      revert\n        /* \"#utility.yul\":284:336   */\n    tag_178:\n      pop\n        /* \"#utility.yul\":355:378   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":204:384   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":389:637   */\n    tag_22:\n        /* \"#utility.yul\":457:463   */\n      0x00\n        /* \"#utility.yul\":465:471   */\n      dup1\n        /* \"#utility.yul\":518:520   */\n      0x40\n        /* \"#utility.yul\":506:515   */\n      dup4\n        /* \"#utility.yul\":497:504   */\n      dup6\n        /* \"#utility.yul\":493:516   */\n      sub\n        /* \"#utility.yul\":489:521   */\n      slt\n        /* \"#utility.yul\":486:538   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":534:535   */\n      0x00\n        /* \"#utility.yul\":531:532   */\n      dup1\n        /* \"#utility.yul\":524:536   */\n      revert\n        /* \"#utility.yul\":486:538   */\n    tag_180:\n      pop\n      pop\n        /* \"#utility.yul\":557:580   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":627:629   */\n      0x20\n        /* \"#utility.yul\":612:630   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":599:631   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":389:637   */\n      jump\t// out\n        /* \"#utility.yul\":642:1163   */\n    tag_34:\n        /* \"#utility.yul\":744:750   */\n      0x00\n        /* \"#utility.yul\":752:758   */\n      dup1\n        /* \"#utility.yul\":760:766   */\n      0x00\n        /* \"#utility.yul\":768:774   */\n      dup1\n        /* \"#utility.yul\":776:782   */\n      0x00\n        /* \"#utility.yul\":784:790   */\n      dup1\n        /* \"#utility.yul\":837:840   */\n      0xc0\n        /* \"#utility.yul\":825:834   */\n      dup8\n        /* \"#utility.yul\":816:823   */\n      dup10\n        /* \"#utility.yul\":812:835   */\n      sub\n        /* \"#utility.yul\":808:841   */\n      slt\n        /* \"#utility.yul\":805:858   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":851:852   */\n      dup1\n        /* \"#utility.yul\":844:856   */\n      revert\n        /* \"#utility.yul\":805:858   */\n    tag_182:\n      pop\n      pop\n        /* \"#utility.yul\":877:900   */\n      dup5\n      calldataload\n      swap7\n        /* \"#utility.yul\":947:949   */\n      0x20\n        /* \"#utility.yul\":932:950   */\n      dup7\n      add\n        /* \"#utility.yul\":919:951   */\n      calldataload\n      swap7\n      pop\n        /* \"#utility.yul\":998:1000   */\n      0x40\n        /* \"#utility.yul\":983:1001   */\n      dup7\n      add\n        /* \"#utility.yul\":970:1002   */\n      calldataload\n      swap6\n        /* \"#utility.yul\":1049:1051   */\n      0x60\n        /* \"#utility.yul\":1034:1052   */\n      dup2\n      add\n        /* \"#utility.yul\":1021:1053   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":1100:1103   */\n      0x80\n        /* \"#utility.yul\":1085:1104   */\n      dup2\n      add\n        /* \"#utility.yul\":1072:1105   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":1152:1155   */\n      0xa0\n        /* \"#utility.yul\":1137:1156   */\n      add\n        /* \"#utility.yul\":1124:1157   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":642:1163   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1168:1568   */\n    tag_51:\n        /* \"#utility.yul\":1370:1372   */\n      0x20\n        /* \"#utility.yul\":1352:1373   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1409:1411   */\n      0x24\n        /* \"#utility.yul\":1389:1407   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1382:1412   */\n      mstore\n        /* \"#utility.yul\":1448:1482   */\n      0x5b7469636b6574496e636f6d653247726f75704c65616465725d206f76657266\n        /* \"#utility.yul\":1443:1445   */\n      0x40\n        /* \"#utility.yul\":1428:1446   */\n      dup3\n      add\n        /* \"#utility.yul\":1421:1483   */\n      mstore\n      shl(0xe1, 0x3637bb97)\n        /* \"#utility.yul\":1514:1516   */\n      0x60\n        /* \"#utility.yul\":1499:1517   */\n      dup3\n      add\n        /* \"#utility.yul\":1492:1526   */\n      mstore\n        /* \"#utility.yul\":1558:1561   */\n      0x80\n        /* \"#utility.yul\":1543:1562   */\n      add\n      swap1\n        /* \"#utility.yul\":1168:1568   */\n      jump\t// out\n        /* \"#utility.yul\":1573:1971   */\n    tag_61:\n        /* \"#utility.yul\":1775:1777   */\n      0x20\n        /* \"#utility.yul\":1757:1778   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1814:1816   */\n      0x22\n        /* \"#utility.yul\":1794:1812   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1787:1817   */\n      mstore\n        /* \"#utility.yul\":1853:1887   */\n      0x5b726577617264506f6f6c3247726f75704d656d6265725d206f766572666c6f\n        /* \"#utility.yul\":1848:1850   */\n      0x40\n        /* \"#utility.yul\":1833:1851   */\n      dup3\n      add\n        /* \"#utility.yul\":1826:1888   */\n      mstore\n      shl(0xf1, 0x3b97)\n        /* \"#utility.yul\":1919:1921   */\n      0x60\n        /* \"#utility.yul\":1904:1922   */\n      dup3\n      add\n        /* \"#utility.yul\":1897:1929   */\n      mstore\n        /* \"#utility.yul\":1961:1964   */\n      0x80\n        /* \"#utility.yul\":1946:1965   */\n      add\n      swap1\n        /* \"#utility.yul\":1573:1971   */\n      jump\t// out\n        /* \"#utility.yul\":1976:2376   */\n    tag_75:\n        /* \"#utility.yul\":2178:2180   */\n      0x20\n        /* \"#utility.yul\":2160:2181   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2217:2219   */\n      0x24\n        /* \"#utility.yul\":2197:2215   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2190:2220   */\n      mstore\n        /* \"#utility.yul\":2256:2290   */\n      0x5b7469636b6574496e636f6d653247726f75704d656d6265725d206f76657266\n        /* \"#utility.yul\":2251:2253   */\n      0x40\n        /* \"#utility.yul\":2236:2254   */\n      dup3\n      add\n        /* \"#utility.yul\":2229:2291   */\n      mstore\n      shl(0xe1, 0x3637bb97)\n        /* \"#utility.yul\":2322:2324   */\n      0x60\n        /* \"#utility.yul\":2307:2325   */\n      dup3\n      add\n        /* \"#utility.yul\":2300:2334   */\n      mstore\n        /* \"#utility.yul\":2366:2369   */\n      0x80\n        /* \"#utility.yul\":2351:2370   */\n      add\n      swap1\n        /* \"#utility.yul\":1976:2376   */\n      jump\t// out\n        /* \"#utility.yul\":3217:3344   */\n    tag_174:\n        /* \"#utility.yul\":3278:3288   */\n      0x4e487b71\n        /* \"#utility.yul\":3273:3276   */\n      0xe0\n        /* \"#utility.yul\":3269:3289   */\n      shl\n        /* \"#utility.yul\":3266:3267   */\n      0x00\n        /* \"#utility.yul\":3259:3290   */\n      mstore\n        /* \"#utility.yul\":3309:3313   */\n      0x11\n        /* \"#utility.yul\":3306:3307   */\n      0x04\n        /* \"#utility.yul\":3299:3314   */\n      mstore\n        /* \"#utility.yul\":3333:3337   */\n      0x24\n        /* \"#utility.yul\":3330:3331   */\n      0x00\n        /* \"#utility.yul\":3323:3338   */\n      revert\n        /* \"#utility.yul\":3349:3484   */\n    tag_101:\n        /* \"#utility.yul\":3388:3391   */\n      0x00\n        /* \"#utility.yul\":3409:3426   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":3406:3449   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":3429:3447   */\n      tag_191\n      tag_174\n      jump\t// in\n    tag_191:\n      pop\n        /* \"#utility.yul\":3476:3477   */\n      0x01\n        /* \"#utility.yul\":3465:3478   */\n      add\n      swap1\n        /* \"#utility.yul\":3349:3484   */\n      jump\t// out\n        /* \"#utility.yul\":5463:5591   */\n    tag_122:\n        /* \"#utility.yul\":5530:5539   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5551:5562   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5548:5585   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":5565:5583   */\n      tag_56\n      tag_174\n      jump\t// in\n        /* \"#utility.yul\":7062:7460   */\n    tag_148:\n        /* \"#utility.yul\":7264:7266   */\n      0x20\n        /* \"#utility.yul\":7246:7267   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7303:7305   */\n      0x22\n        /* \"#utility.yul\":7283:7301   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7276:7306   */\n      mstore\n        /* \"#utility.yul\":7342:7376   */\n      0x5b726577617264506f6f6c3247726f75704c65616465725d206f766572666c6f\n        /* \"#utility.yul\":7337:7339   */\n      0x40\n        /* \"#utility.yul\":7322:7340   */\n      dup3\n      add\n        /* \"#utility.yul\":7315:7377   */\n      mstore\n      shl(0xf1, 0x3b97)\n        /* \"#utility.yul\":7408:7410   */\n      0x60\n        /* \"#utility.yul\":7393:7411   */\n      dup3\n      add\n        /* \"#utility.yul\":7386:7418   */\n      mstore\n        /* \"#utility.yul\":7450:7453   */\n      0x80\n        /* \"#utility.yul\":7435:7454   */\n      add\n      swap1\n        /* \"#utility.yul\":7062:7460   */\n      jump\t// out\n        /* \"#utility.yul\":7465:7864   */\n    tag_156:\n        /* \"#utility.yul\":7667:7669   */\n      0x20\n        /* \"#utility.yul\":7649:7670   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7706:7708   */\n      0x23\n        /* \"#utility.yul\":7686:7704   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7679:7709   */\n      mstore\n        /* \"#utility.yul\":7745:7779   */\n      0x5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c\n        /* \"#utility.yul\":7740:7742   */\n      0x40\n        /* \"#utility.yul\":7725:7743   */\n      dup3\n      add\n        /* \"#utility.yul\":7718:7780   */\n      mstore\n      shl(0xe9, 0x37bb97)\n        /* \"#utility.yul\":7811:7813   */\n      0x60\n        /* \"#utility.yul\":7796:7814   */\n      dup3\n      add\n        /* \"#utility.yul\":7789:7822   */\n      mstore\n        /* \"#utility.yul\":7854:7857   */\n      0x80\n        /* \"#utility.yul\":7839:7858   */\n      add\n      swap1\n        /* \"#utility.yul\":7465:7864   */\n      jump\t// out\n        /* \"#utility.yul\":7869:7996   */\n    tag_164:\n        /* \"#utility.yul\":7930:7940   */\n      0x4e487b71\n        /* \"#utility.yul\":7925:7928   */\n      0xe0\n        /* \"#utility.yul\":7921:7941   */\n      shl\n        /* \"#utility.yul\":7918:7919   */\n      0x00\n        /* \"#utility.yul\":7911:7942   */\n      mstore\n        /* \"#utility.yul\":7961:7965   */\n      0x12\n        /* \"#utility.yul\":7958:7959   */\n      0x04\n        /* \"#utility.yul\":7951:7966   */\n      mstore\n        /* \"#utility.yul\":7985:7989   */\n      0x24\n        /* \"#utility.yul\":7982:7983   */\n      0x00\n        /* \"#utility.yul\":7975:7990   */\n      revert\n    stop\n    data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a 4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63\n\n    auxdata: 0xa2646970667358221220ea64bc8966038257df4cafe0d8e715bd9eacef565aa7fd59866ea5b5d1e3a95b64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "610c6161003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c806391096a3c1161006557806391096a3c146100e85780639b49380b146100f2578063beb19a2114610105578063e6ca2a8d1461011857600080fd5b806326d0a334146100975780632e26fb4a146100af5780633ed12ab7146100c257806384105419146100d5575b600080fd5b6305f5e1005b60405190815260200160405180910390f35b61009d6100bd3660046109e6565b61012b565b61009d6100d03660046109ff565b61019a565b61009d6100e33660046109ff565b61025f565b633b9aca0061009d565b61009d610100366004610a21565b610347565b61009d6101133660046109e6565b61086c565b61009d6101263660046109e6565b6108cb565b6000808061013a84601e61092b565b9092509050816101655760405162461bcd60e51b815260040161015c90610a64565b60405180910390fd5b610171816103e8610976565b9092509050816101935760405162461bcd60e51b815260040161015c90610a64565b9392505050565b60008080806101ac6103e860646109a9565b9093509050826101ce5760405162461bcd60e51b815260040161015c90610aa8565b6101d8868261092b565b9093509150826101fa5760405162461bcd60e51b815260040161015c90610aa8565b610206826103e8610976565b9093509150826102285760405162461bcd60e51b815260040161015c90610aa8565b6102328286610976565b9093509150826102545760405162461bcd60e51b815260040161015c90610aa8565b509150505b92915050565b60008080806102716103e8601e6109a9565b9093509050826102935760405162461bcd60e51b815260040161015c90610aea565b61029f816101f46109a9565b9093509050826102c15760405162461bcd60e51b815260040161015c90610aea565b6102cb868261092b565b9093509150826102ed5760405162461bcd60e51b815260040161015c90610aea565b6102f9826103e8610976565b90935091508261031b5760405162461bcd60e51b815260040161015c90610aea565b6103258286610976565b9093509150826102545760405162461bcd60e51b815260040161015c90610aea565b600060018060005b60028110156103dc57610362828b61092b565b9093509150826103ca576040805162461bcd60e51b8152602060048201526024810191909152600080516020610c0c83398151915260448201527f756c617465207469636b657420707269636520696e20692a2a5f616c7068612e606482015260840161015c565b806103d481610b44565b91505061034f565b506103e881600a61092b565b90925090508161045d5760405162461bcd60e51b81526020600482015260466024820152600080516020610c0c83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612a692a2a5f60648201526530b63834309760d11b608482015260a40161015c565b61046a81620f424061092b565b9092509050816104f65760405162461bcd60e51b815260206004820152605e6024820152600080516020610c0c83398151915260448201527f756c617465207469636b657420707269636520696e20285f626574612f5f646560648201527f6e6f6d696e61746f722a692a2a5f616c706861292a5f646563696d616c2e0000608482015260a40161015c565b610502816103e8610976565b9092509050816105845760405162461bcd60e51b81526020600482015260536024820152600080516020610c0c83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612f5f64656e60648201527237b6b4b730ba37b9153495152fb0b63834309760691b608482015260a40161015c565b61059181624c4b406109cb565b90925090508161061d5760405162461bcd60e51b815260206004820152605b6024820152600080516020610c0c83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612f5f64656e60648201527f6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e0000000000608482015260a40161015c565b6000808812158015610630575060008712155b1561065757600a6106418688610b5d565b111561064f57506001610682565b506000610682565b600088121580156106685750600087125b1561067e57600a86111561064f57506001610682565b5060005b801561085f5760006106958a606461092b565b9094509050836107295760405162461bcd60e51b815260206004820152605360248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20657874726146656529203d20536166654d6174682e7472794d756c28746064820152726f74616c526577617264506f6f6c2c205f702960681b608482015260a40161015c565b610735816103e8610976565b9094509050836107cc5760405162461bcd60e51b815260206004820152605660248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20657874726146656529203d20536166654d6174682e7472794469762865606482015275787472614665652c205f64656e6f6d696e61746f722960501b608482015260a40161015c565b6107d683826109cb565b90945092508361085d5760405162461bcd60e51b815260206004820152604660248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20747029203d20536166654d6174682e7472794164642874702c2065787460648201526572614665652960d01b608482015260a40161015c565b505b5098975050505050505050565b6000808061087b84606461092b565b90925090508161089d5760405162461bcd60e51b815260040161015c90610b70565b6108a9816103e8610976565b9092509050816101935760405162461bcd60e51b815260040161015c90610b70565b600080806108db846101f461092b565b9092509050816108fd5760405162461bcd60e51b815260040161015c90610bb2565b610909816103e8610976565b9092509050816101935760405162461bcd60e51b815260040161015c90610bb2565b60008083600003610942575060019050600061096f565b8383028385828161095557610955610bf5565b041461096857600080925092505061096f565b6001925090505b9250929050565b6000808260000361098c5750600090508061096f565b600183858161099d5761099d610bf5565b04915091509250929050565b600080838311156109bf5750600090508061096f565b50600193919092039150565b6000808383018481101561096857600080925092505061096f565b6000602082840312156109f857600080fd5b5035919050565b60008060408385031215610a1257600080fd5b50508035926020909101359150565b60008060008060008060c08789031215610a3a57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b60208082526024908201527f5b7469636b6574496e636f6d653247726f75704c65616465725d206f766572666040820152633637bb9760e11b606082015260800190565b60208082526022908201527f5b726577617264506f6f6c3247726f75704d656d6265725d206f766572666c6f6040820152613b9760f11b606082015260800190565b60208082526024908201527f5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666040820152633637bb9760e11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600060018201610b5657610b56610b2e565b5060010190565b8181038181111561025957610259610b2e565b60208082526022908201527f5b726577617264506f6f6c3247726f75704c65616465725d206f766572666c6f6040820152613b9760f11b606082015260800190565b60208082526023908201527f5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c60408201526237bb9760e91b606082015260800190565b634e487b7160e01b600052601260045260246000fdfe4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63a2646970667358221220ea64bc8966038257df4cafe0d8e715bd9eacef565aa7fd59866ea5b5d1e3a95b64736f6c63430008120033",
							"opcodes": "PUSH2 0xC61 PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91096A3C GT PUSH2 0x65 JUMPI DUP1 PUSH4 0x91096A3C EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x9B49380B EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xBEB19A21 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xE6CA2A8D EQ PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x26D0A334 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x2E26FB4A EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x3ED12AB7 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x84105419 EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x5F5E100 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9D PUSH2 0xBD CALLDATASIZE PUSH1 0x4 PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH2 0x9D PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x9FF JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST PUSH2 0x9D PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x9FF JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0x9D JUMP JUMPDEST PUSH2 0x9D PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0xA21 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH2 0x9D PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x86C JUMP JUMPDEST PUSH2 0x9D PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x13A DUP5 PUSH1 0x1E PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x165 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x171 DUP2 PUSH2 0x3E8 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x193 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xA64 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x1AC PUSH2 0x3E8 PUSH1 0x64 PUSH2 0x9A9 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP1 POP DUP3 PUSH2 0x1CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x1D8 DUP7 DUP3 PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x1FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x206 DUP3 PUSH2 0x3E8 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x228 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x232 DUP3 DUP7 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x254 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAA8 JUMP JUMPDEST POP SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x271 PUSH2 0x3E8 PUSH1 0x1E PUSH2 0x9A9 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP1 POP DUP3 PUSH2 0x293 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x29F DUP2 PUSH2 0x1F4 PUSH2 0x9A9 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP1 POP DUP3 PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x2CB DUP7 DUP3 PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x2F9 DUP3 PUSH2 0x3E8 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x31B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x325 DUP3 DUP7 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x254 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x3DC JUMPI PUSH2 0x362 DUP3 DUP12 PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x3CA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E20692A2A5F616C7068612E PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x15C JUMP JUMPDEST DUP1 PUSH2 0x3D4 DUP2 PUSH2 0xB44 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x34F JUMP JUMPDEST POP PUSH2 0x3E8 DUP2 PUSH1 0xA PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x45D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612A692A2A5F PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x30B638343097 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x46A DUP2 PUSH3 0xF4240 PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E20285F626574612F5F6465 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E6F6D696E61746F722A692A2A5F616C706861292A5F646563696D616C2E0000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x502 DUP2 PUSH2 0x3E8 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x53 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612F5F64656E PUSH1 0x64 DUP3 ADD MSTORE PUSH19 0x37B6B4B730BA37B9153495152FB0B638343097 PUSH1 0x69 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x591 DUP2 PUSH3 0x4C4B40 PUSH2 0x9CB JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x61D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612F5F64656E PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6F6D696E61746F722A692A2A5F616C706861202B2067616D6D612E0000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x15C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP9 SLT ISZERO DUP1 ISZERO PUSH2 0x630 JUMPI POP PUSH1 0x0 DUP8 SLT ISZERO JUMPDEST ISZERO PUSH2 0x657 JUMPI PUSH1 0xA PUSH2 0x641 DUP7 DUP9 PUSH2 0xB5D JUMP JUMPDEST GT ISZERO PUSH2 0x64F JUMPI POP PUSH1 0x1 PUSH2 0x682 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x682 JUMP JUMPDEST PUSH1 0x0 DUP9 SLT ISZERO DUP1 ISZERO PUSH2 0x668 JUMPI POP PUSH1 0x0 DUP8 SLT JUMPDEST ISZERO PUSH2 0x67E JUMPI PUSH1 0xA DUP7 GT ISZERO PUSH2 0x64F JUMPI POP PUSH1 0x1 PUSH2 0x682 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP1 ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 PUSH2 0x695 DUP11 PUSH1 0x64 PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP5 POP SWAP1 POP DUP4 PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x53 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20657874726146656529203D20536166654D6174682E7472794D756C2874 PUSH1 0x64 DUP3 ADD MSTORE PUSH19 0x6F74616C526577617264506F6F6C2C205F7029 PUSH1 0x68 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x735 DUP2 PUSH2 0x3E8 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP1 POP DUP4 PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x56 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20657874726146656529203D20536166654D6174682E7472794469762865 PUSH1 0x64 DUP3 ADD MSTORE PUSH22 0x787472614665652C205F64656E6F6D696E61746F7229 PUSH1 0x50 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x7D6 DUP4 DUP3 PUSH2 0x9CB JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP DUP4 PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20747029203D20536166654D6174682E7472794164642874702C20657874 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x726146656529 PUSH1 0xD0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x15C JUMP JUMPDEST POP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x87B DUP5 PUSH1 0x64 PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xB70 JUMP JUMPDEST PUSH2 0x8A9 DUP2 PUSH2 0x3E8 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x193 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x8DB DUP5 PUSH2 0x1F4 PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0x909 DUP2 PUSH2 0x3E8 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x193 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 SUB PUSH2 0x942 JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH2 0x96F JUMP JUMPDEST DUP4 DUP4 MUL DUP4 DUP6 DUP3 DUP2 PUSH2 0x955 JUMPI PUSH2 0x955 PUSH2 0xBF5 JUMP JUMPDEST DIV EQ PUSH2 0x968 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x96F JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 SUB PUSH2 0x98C JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x99D JUMPI PUSH2 0x99D PUSH2 0xBF5 JUMP JUMPDEST DIV SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x9BF JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x96F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 ADD DUP5 DUP2 LT ISZERO PUSH2 0x968 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x96F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xA3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP5 CALLDATALOAD SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D653247726F75704C65616465725D206F76657266 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3637BB97 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B726577617264506F6F6C3247726F75704D656D6265725D206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x3B97 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D653247726F75704D656D6265725D206F76657266 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3637BB97 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xB56 JUMPI PUSH2 0xB56 PUSH2 0xB2E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x259 JUMPI PUSH2 0x259 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B726577617264506F6F6C3247726F75704C65616465725D206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x3B97 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D6532526577617264506F6F6C5D206F766572666C PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x37BB97 PUSH1 0xE9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0x4E PUSH22 0x6D626572206F766572666C6F77206F63637572732077 PUSH9 0x656E2063616C63A264 PUSH10 0x70667358221220EA64BC DUP10 PUSH7 0x38257DF4CAFE0 0xD8 0xE7 ISZERO 0xBD SWAP15 0xAC 0xEF JUMP GAS 0xA7 REVERT MSIZE DUP7 PUSH15 0xA5B5D1E3A95B64736F6C6343000812 STOP CALLER ",
							"sourceMap": "123:7174:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;123:7174:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@groupCreateMinFee_386": {
									"entryPoint": null,
									"id": 386,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardPool2GroupLeader_859": {
									"entryPoint": 2156,
									"id": 859,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardPool2GroupMember_943": {
									"entryPoint": 410,
									"id": 943,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@taskCreateMinFee_378": {
									"entryPoint": null,
									"id": 378,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ticketIncome2GroupLeader_712": {
									"entryPoint": 299,
									"id": 712,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ticketIncome2GroupMember_811": {
									"entryPoint": 607,
									"id": 811,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@ticketIncome2RewardPool_664": {
									"entryPoint": 2251,
									"id": 664,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ticketPrice_616": {
									"entryPoint": 839,
									"id": 616,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@tryAdd_34": {
									"entryPoint": 2507,
									"id": 34,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryDiv_132": {
									"entryPoint": 2422,
									"id": 132,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryMul_104": {
									"entryPoint": 2347,
									"id": 104,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@trySub_62": {
									"entryPoint": 2473,
									"id": 62,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_int256t_int256t_uint256t_uint256": {
									"entryPoint": 2593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_tuple_t_stringliteral_3cff605ba55f75487b824dcbd803532d720584314b3ad9db95f041ab0b3bfd0a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f6addb26863066f4fc9b23aba533f4fdd42a896e1187d8b37bf8aa1dfd5adc6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8dd8da3065c345dba015a0a7d1ccac008e84f920fbdb2fcfb1c7817423d77cb0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9925b897b1b5e7f46ce753efc960858b0d7ed723178392dae59a70457210994d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b98a017124e80b996a0154f558a4f6a00ad337f53ce48f54aff57606e471fad4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dc71b2050d303ab0cccf48d4e0bfdb8bc2c6920659efc90f83709c3a3bfa2051__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2862,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3061,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7998:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "123:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "133:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "145:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "156:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "141:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "141:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "133:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "175:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "186:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "168:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "168:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "92:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "103:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "114:4:2",
														"type": ""
													}
												],
												"src": "14:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "274:110:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "320:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "329:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "332:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "322:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "322:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "322:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "295:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "304:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "291:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "291:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "316:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "287:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "287:32:2"
															},
															"nodeType": "YulIf",
															"src": "284:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "368:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "355:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "240:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "251:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "263:6:2",
														"type": ""
													}
												],
												"src": "204:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "476:161:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "522:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "531:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "534:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "524:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "524:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "497:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "506:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "493:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "493:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "518:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "489:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:32:2"
															},
															"nodeType": "YulIf",
															"src": "486:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "547:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "557:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "557:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "547:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "616:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "627:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "612:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "612:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "599:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "434:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "445:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "457:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "465:6:2",
														"type": ""
													}
												],
												"src": "389:248:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:368:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "842:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "851:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "854:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "844:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "844:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "844:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "816:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "825:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "812:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "812:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "837:3:2",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "808:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "808:33:2"
															},
															"nodeType": "YulIf",
															"src": "805:53:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "867:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "890:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "877:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "877:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "867:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "909:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "936:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "947:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "932:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "932:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "919:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "960:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "987:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "998:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "983:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "970:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:32:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "960:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1011:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1038:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1049:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1034:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1034:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1021:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:32:2"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1062:43:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1089:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1100:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:19:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1072:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1072:33:2"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1062:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1114:43:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1141:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1152:3:2",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1137:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:19:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1124:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:33:2"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_int256t_int256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "721:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "732:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "744:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "752:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "760:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "768:6:2",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "776:6:2",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "784:6:2",
														"type": ""
													}
												],
												"src": "642:521:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1342:226:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1359:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1370:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1352:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1352:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1404:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1389:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1409:2:2",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1382:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1382:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1382:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1432:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1443:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1428:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1428:18:2"
																	},
																	{
																		"hexValue": "5b7469636b6574496e636f6d653247726f75704c65616465725d206f76657266",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1448:34:2",
																		"type": "",
																		"value": "[ticketIncome2GroupLeader] overf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1421:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1421:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1421:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1503:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1514:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:18:2"
																	},
																	{
																		"hexValue": "6c6f772e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1519:6:2",
																		"type": "",
																		"value": "low."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1492:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1492:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1535:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1547:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1558:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1543:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1543:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1535:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1319:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1333:4:2",
														"type": ""
													}
												],
												"src": "1168:400:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1747:224:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1764:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1775:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1757:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1757:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1798:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1809:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1794:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1794:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1814:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1787:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1787:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1837:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1848:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1833:18:2"
																	},
																	{
																		"hexValue": "5b726577617264506f6f6c3247726f75704d656d6265725d206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1853:34:2",
																		"type": "",
																		"value": "[rewardPool2GroupMember] overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1826:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1826:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1908:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1919:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1904:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1904:18:2"
																	},
																	{
																		"hexValue": "772e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1924:4:2",
																		"type": "",
																		"value": "w."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1897:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1897:32:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1938:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1950:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1961:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1946:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1946:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1938:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8dd8da3065c345dba015a0a7d1ccac008e84f920fbdb2fcfb1c7817423d77cb0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1724:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1738:4:2",
														"type": ""
													}
												],
												"src": "1573:398:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:226:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2167:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2178:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2160:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2160:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2160:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2201:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2212:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2197:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2197:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2217:2:2",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2190:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2190:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2190:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2240:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2251:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2236:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2236:18:2"
																	},
																	{
																		"hexValue": "5b7469636b6574496e636f6d653247726f75704d656d6265725d206f76657266",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2256:34:2",
																		"type": "",
																		"value": "[ticketIncome2GroupMember] overf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2229:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2229:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2229:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2311:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2322:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2307:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:18:2"
																	},
																	{
																		"hexValue": "6c6f772e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2327:6:2",
																		"type": "",
																		"value": "low."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2300:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2300:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2343:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2355:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2366:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2351:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2351:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2343:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2127:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2141:4:2",
														"type": ""
													}
												],
												"src": "1976:400:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2555:224:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2572:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2583:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2565:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2565:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2565:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2606:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2617:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2602:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2602:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2622:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2595:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2595:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2595:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2645:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2656:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2641:18:2"
																	},
																	{
																		"hexValue": "546f2061766f6964206f766572666c6f772c20616c706861203c3d2035206f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2661:34:2",
																		"type": "",
																		"value": "To avoid overflow, alpha <= 5 on"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2634:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2634:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2634:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:18:2"
																	},
																	{
																		"hexValue": "6c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2732:4:2",
																		"type": "",
																		"value": "ly"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:32:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2746:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2758:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2769:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2754:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2754:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2746:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2532:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2546:4:2",
														"type": ""
													}
												],
												"src": "2381:398:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2958:254:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2975:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2986:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2968:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2968:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2968:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3009:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3020:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3005:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3005:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3025:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2998:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2998:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2998:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3048:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3059:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3044:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3064:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3037:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3037:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3037:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3119:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3130:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3115:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3115:18:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e20692a2a5f616c7068612e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3135:34:2",
																		"type": "",
																		"value": "ulate ticket price in i**_alpha."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3108:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3108:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3108:62:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3179:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3191:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3202:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3187:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3187:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3179:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2935:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2949:4:2",
														"type": ""
													}
												],
												"src": "2784:428:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3249:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3266:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3273:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3278:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3259:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3306:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3309:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3299:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3330:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3333:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3323:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3323:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3323:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3217:127:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3396:88:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3427:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3429:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3429:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3429:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3412:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3423:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3419:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3419:6:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3409:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:17:2"
															},
															"nodeType": "YulIf",
															"src": "3406:43:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3458:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3469:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3476:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3465:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3465:13:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3458:3:2"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3378:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3388:3:2",
														"type": ""
													}
												],
												"src": "3349:135:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3663:300:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3680:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3691:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3673:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3673:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3673:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3714:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3725:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3710:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3710:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3730:2:2",
																		"type": "",
																		"value": "70"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3703:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3703:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3703:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3753:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3764:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3749:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3749:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3769:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3742:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3742:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3742:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3824:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3835:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3820:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3820:18:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e205f626574612a692a2a5f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3840:34:2",
																		"type": "",
																		"value": "ulate ticket price in _beta*i**_"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3813:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3813:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3813:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3895:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3906:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3891:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3891:19:2"
																	},
																	{
																		"hexValue": "616c7068612e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3912:8:2",
																		"type": "",
																		"value": "alpha."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3884:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3884:37:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3930:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3942:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3953:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3938:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3938:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3930:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3654:4:2",
														"type": ""
													}
												],
												"src": "3489:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4142:324:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4159:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4170:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4152:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4152:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4193:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4204:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4189:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4189:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4209:2:2",
																		"type": "",
																		"value": "94"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4182:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4182:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4182:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4232:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4243:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4228:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4228:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4248:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4221:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4221:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4221:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4303:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4314:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4299:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4299:18:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e20285f626574612f5f6465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4319:34:2",
																		"type": "",
																		"value": "ulate ticket price in (_beta/_de"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4292:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4292:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4292:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4374:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4385:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4370:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4370:19:2"
																	},
																	{
																		"hexValue": "6e6f6d696e61746f722a692a2a5f616c706861292a5f646563696d616c2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4391:32:2",
																		"type": "",
																		"value": "nominator*i**_alpha)*_decimal."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4363:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4363:61:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4363:61:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4433:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4445:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4456:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4441:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4441:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4433:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b98a017124e80b996a0154f558a4f6a00ad337f53ce48f54aff57606e471fad4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4119:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4133:4:2",
														"type": ""
													}
												],
												"src": "3968:498:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4645:313:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4662:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4673:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4655:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4655:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4655:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4696:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4707:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4692:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4692:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4712:2:2",
																		"type": "",
																		"value": "83"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4685:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4685:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4685:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4735:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4746:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4731:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4731:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4751:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4806:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4817:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4802:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4802:18:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e205f626574612f5f64656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4822:34:2",
																		"type": "",
																		"value": "ulate ticket price in _beta/_den"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4795:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4795:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4877:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4888:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4873:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4873:19:2"
																	},
																	{
																		"hexValue": "6f6d696e61746f722a692a2a5f616c7068612e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4894:21:2",
																		"type": "",
																		"value": "ominator*i**_alpha."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4866:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4866:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4866:50:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4925:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4937:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4948:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4933:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4933:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4925:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4622:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4636:4:2",
														"type": ""
													}
												],
												"src": "4471:487:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5137:321:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5154:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5165:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5147:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5147:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5147:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5188:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5199:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5184:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5184:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5204:2:2",
																		"type": "",
																		"value": "91"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5177:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5177:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5177:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5227:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5238:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5223:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5223:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5243:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5216:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5216:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5216:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5298:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5309:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5294:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5294:18:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e205f626574612f5f64656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5314:34:2",
																		"type": "",
																		"value": "ulate ticket price in _beta/_den"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5287:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5287:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5287:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5369:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5380:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5365:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5365:19:2"
																	},
																	{
																		"hexValue": "6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5386:29:2",
																		"type": "",
																		"value": "ominator*i**_alpha + gamma."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5358:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5358:58:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5425:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5437:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5448:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5433:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5433:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5425:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5114:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5128:4:2",
														"type": ""
													}
												],
												"src": "4963:495:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5512:79:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5522:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5534:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5537:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5530:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5530:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5522:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5563:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5565:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5565:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5565:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "5554:4:2"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5560:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5551:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5551:11:2"
															},
															"nodeType": "YulIf",
															"src": "5548:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5494:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5497:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5503:4:2",
														"type": ""
													}
												],
												"src": "5463:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5770:313:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5787:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5798:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5780:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5780:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5780:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5821:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5832:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5817:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5817:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:2:2",
																		"type": "",
																		"value": "83"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5810:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5810:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5810:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5860:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5871:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5856:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5856:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5876:34:2",
																		"type": "",
																		"value": "Number overflow occurs when (fla"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5849:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5849:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5849:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5931:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5942:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5927:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5927:18:2"
																	},
																	{
																		"hexValue": "672c20657874726146656529203d20536166654d6174682e7472794d756c2874",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5947:34:2",
																		"type": "",
																		"value": "g, extraFee) = SafeMath.tryMul(t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5920:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5920:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5920:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6002:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6013:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5998:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5998:19:2"
																	},
																	{
																		"hexValue": "6f74616c526577617264506f6f6c2c205f7029",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6019:21:2",
																		"type": "",
																		"value": "otalRewardPool, _p)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5991:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5991:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5991:50:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6050:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6062:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6073:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6058:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6058:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6050:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f6addb26863066f4fc9b23aba533f4fdd42a896e1187d8b37bf8aa1dfd5adc6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5747:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5761:4:2",
														"type": ""
													}
												],
												"src": "5596:487:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6262:316:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6279:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6290:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6272:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6272:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6313:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6324:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6309:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6309:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6329:2:2",
																		"type": "",
																		"value": "86"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6302:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6302:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6302:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6352:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6363:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6348:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6348:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6368:34:2",
																		"type": "",
																		"value": "Number overflow occurs when (fla"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6341:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6341:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6341:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6423:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6434:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6419:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6419:18:2"
																	},
																	{
																		"hexValue": "672c20657874726146656529203d20536166654d6174682e7472794469762865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6439:34:2",
																		"type": "",
																		"value": "g, extraFee) = SafeMath.tryDiv(e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6412:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6412:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6412:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6494:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6505:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6490:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6490:19:2"
																	},
																	{
																		"hexValue": "787472614665652c205f64656e6f6d696e61746f7229",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6511:24:2",
																		"type": "",
																		"value": "xtraFee, _denominator)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6483:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6483:53:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6483:53:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6545:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6557:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6568:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6553:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6553:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6545:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc71b2050d303ab0cccf48d4e0bfdb8bc2c6920659efc90f83709c3a3bfa2051__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6239:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6253:4:2",
														"type": ""
													}
												],
												"src": "6088:490:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6757:300:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6774:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6785:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6767:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6767:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6767:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6808:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6819:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6804:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6804:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6824:2:2",
																		"type": "",
																		"value": "70"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6797:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6797:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6797:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6847:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6858:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6843:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6843:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6863:34:2",
																		"type": "",
																		"value": "Number overflow occurs when (fla"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6836:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6836:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6836:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6918:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6929:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6914:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6914:18:2"
																	},
																	{
																		"hexValue": "672c20747029203d20536166654d6174682e7472794164642874702c20657874",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6934:34:2",
																		"type": "",
																		"value": "g, tp) = SafeMath.tryAdd(tp, ext"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6907:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6907:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6907:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6989:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7000:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6985:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6985:19:2"
																	},
																	{
																		"hexValue": "726146656529",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7006:8:2",
																		"type": "",
																		"value": "raFee)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6978:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6978:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6978:37:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7024:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7036:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7047:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7032:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7024:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9925b897b1b5e7f46ce753efc960858b0d7ed723178392dae59a70457210994d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6734:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6748:4:2",
														"type": ""
													}
												],
												"src": "6583:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7236:224:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7253:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7264:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7246:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7246:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7246:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7287:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7298:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7283:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7283:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7303:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7276:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7276:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7276:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7326:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7337:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7322:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7322:18:2"
																	},
																	{
																		"hexValue": "5b726577617264506f6f6c3247726f75704c65616465725d206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7342:34:2",
																		"type": "",
																		"value": "[rewardPool2GroupLeader] overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7315:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7315:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7315:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7397:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7408:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7393:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7393:18:2"
																	},
																	{
																		"hexValue": "772e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7413:4:2",
																		"type": "",
																		"value": "w."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7386:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7386:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7386:32:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7427:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7439:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7450:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7435:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7435:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7427:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3cff605ba55f75487b824dcbd803532d720584314b3ad9db95f041ab0b3bfd0a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7213:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7227:4:2",
														"type": ""
													}
												],
												"src": "7062:398:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7639:225:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7656:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7667:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7649:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7649:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7649:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7690:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7701:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7686:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7686:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7706:2:2",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7679:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7679:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7679:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7729:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7740:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7725:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7725:18:2"
																	},
																	{
																		"hexValue": "5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7745:34:2",
																		"type": "",
																		"value": "[ticketIncome2RewardPool] overfl"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7718:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7718:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7718:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7800:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7811:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7796:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7796:18:2"
																	},
																	{
																		"hexValue": "6f772e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7816:5:2",
																		"type": "",
																		"value": "ow."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7789:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7789:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7789:33:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7831:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7843:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7854:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7839:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7839:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7831:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7616:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7630:4:2",
														"type": ""
													}
												],
												"src": "7465:399:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7901:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7918:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7925:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7930:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7921:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7921:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7911:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7911:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7911:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7958:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7961:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7951:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7951:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7951:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7982:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7985:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7975:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7975:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7975:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "7869:127:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_int256t_int256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"[ticketIncome2GroupLeader] overf\")\n        mstore(add(headStart, 96), \"low.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8dd8da3065c345dba015a0a7d1ccac008e84f920fbdb2fcfb1c7817423d77cb0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"[rewardPool2GroupMember] overflo\")\n        mstore(add(headStart, 96), \"w.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"[ticketIncome2GroupMember] overf\")\n        mstore(add(headStart, 96), \"low.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"To avoid overflow, alpha <= 5 on\")\n        mstore(add(headStart, 96), \"ly\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"Number overflow occurs when calc\")\n        mstore(add(headStart, 96), \"ulate ticket price in i**_alpha.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 70)\n        mstore(add(headStart, 64), \"Number overflow occurs when calc\")\n        mstore(add(headStart, 96), \"ulate ticket price in _beta*i**_\")\n        mstore(add(headStart, 128), \"alpha.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_b98a017124e80b996a0154f558a4f6a00ad337f53ce48f54aff57606e471fad4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 94)\n        mstore(add(headStart, 64), \"Number overflow occurs when calc\")\n        mstore(add(headStart, 96), \"ulate ticket price in (_beta/_de\")\n        mstore(add(headStart, 128), \"nominator*i**_alpha)*_decimal.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 83)\n        mstore(add(headStart, 64), \"Number overflow occurs when calc\")\n        mstore(add(headStart, 96), \"ulate ticket price in _beta/_den\")\n        mstore(add(headStart, 128), \"ominator*i**_alpha.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 91)\n        mstore(add(headStart, 64), \"Number overflow occurs when calc\")\n        mstore(add(headStart, 96), \"ulate ticket price in _beta/_den\")\n        mstore(add(headStart, 128), \"ominator*i**_alpha + gamma.\")\n        tail := add(headStart, 160)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_5f6addb26863066f4fc9b23aba533f4fdd42a896e1187d8b37bf8aa1dfd5adc6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 83)\n        mstore(add(headStart, 64), \"Number overflow occurs when (fla\")\n        mstore(add(headStart, 96), \"g, extraFee) = SafeMath.tryMul(t\")\n        mstore(add(headStart, 128), \"otalRewardPool, _p)\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_dc71b2050d303ab0cccf48d4e0bfdb8bc2c6920659efc90f83709c3a3bfa2051__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 86)\n        mstore(add(headStart, 64), \"Number overflow occurs when (fla\")\n        mstore(add(headStart, 96), \"g, extraFee) = SafeMath.tryDiv(e\")\n        mstore(add(headStart, 128), \"xtraFee, _denominator)\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_9925b897b1b5e7f46ce753efc960858b0d7ed723178392dae59a70457210994d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 70)\n        mstore(add(headStart, 64), \"Number overflow occurs when (fla\")\n        mstore(add(headStart, 96), \"g, tp) = SafeMath.tryAdd(tp, ext\")\n        mstore(add(headStart, 128), \"raFee)\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_3cff605ba55f75487b824dcbd803532d720584314b3ad9db95f041ab0b3bfd0a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"[rewardPool2GroupLeader] overflo\")\n        mstore(add(headStart, 96), \"w.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"[ticketIncome2RewardPool] overfl\")\n        mstore(add(headStart, 96), \"ow.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100925760003560e01c806391096a3c1161006557806391096a3c146100e85780639b49380b146100f2578063beb19a2114610105578063e6ca2a8d1461011857600080fd5b806326d0a334146100975780632e26fb4a146100af5780633ed12ab7146100c257806384105419146100d5575b600080fd5b6305f5e1005b60405190815260200160405180910390f35b61009d6100bd3660046109e6565b61012b565b61009d6100d03660046109ff565b61019a565b61009d6100e33660046109ff565b61025f565b633b9aca0061009d565b61009d610100366004610a21565b610347565b61009d6101133660046109e6565b61086c565b61009d6101263660046109e6565b6108cb565b6000808061013a84601e61092b565b9092509050816101655760405162461bcd60e51b815260040161015c90610a64565b60405180910390fd5b610171816103e8610976565b9092509050816101935760405162461bcd60e51b815260040161015c90610a64565b9392505050565b60008080806101ac6103e860646109a9565b9093509050826101ce5760405162461bcd60e51b815260040161015c90610aa8565b6101d8868261092b565b9093509150826101fa5760405162461bcd60e51b815260040161015c90610aa8565b610206826103e8610976565b9093509150826102285760405162461bcd60e51b815260040161015c90610aa8565b6102328286610976565b9093509150826102545760405162461bcd60e51b815260040161015c90610aa8565b509150505b92915050565b60008080806102716103e8601e6109a9565b9093509050826102935760405162461bcd60e51b815260040161015c90610aea565b61029f816101f46109a9565b9093509050826102c15760405162461bcd60e51b815260040161015c90610aea565b6102cb868261092b565b9093509150826102ed5760405162461bcd60e51b815260040161015c90610aea565b6102f9826103e8610976565b90935091508261031b5760405162461bcd60e51b815260040161015c90610aea565b6103258286610976565b9093509150826102545760405162461bcd60e51b815260040161015c90610aea565b600060018060005b60028110156103dc57610362828b61092b565b9093509150826103ca576040805162461bcd60e51b8152602060048201526024810191909152600080516020610c0c83398151915260448201527f756c617465207469636b657420707269636520696e20692a2a5f616c7068612e606482015260840161015c565b806103d481610b44565b91505061034f565b506103e881600a61092b565b90925090508161045d5760405162461bcd60e51b81526020600482015260466024820152600080516020610c0c83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612a692a2a5f60648201526530b63834309760d11b608482015260a40161015c565b61046a81620f424061092b565b9092509050816104f65760405162461bcd60e51b815260206004820152605e6024820152600080516020610c0c83398151915260448201527f756c617465207469636b657420707269636520696e20285f626574612f5f646560648201527f6e6f6d696e61746f722a692a2a5f616c706861292a5f646563696d616c2e0000608482015260a40161015c565b610502816103e8610976565b9092509050816105845760405162461bcd60e51b81526020600482015260536024820152600080516020610c0c83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612f5f64656e60648201527237b6b4b730ba37b9153495152fb0b63834309760691b608482015260a40161015c565b61059181624c4b406109cb565b90925090508161061d5760405162461bcd60e51b815260206004820152605b6024820152600080516020610c0c83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612f5f64656e60648201527f6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e0000000000608482015260a40161015c565b6000808812158015610630575060008712155b1561065757600a6106418688610b5d565b111561064f57506001610682565b506000610682565b600088121580156106685750600087125b1561067e57600a86111561064f57506001610682565b5060005b801561085f5760006106958a606461092b565b9094509050836107295760405162461bcd60e51b815260206004820152605360248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20657874726146656529203d20536166654d6174682e7472794d756c28746064820152726f74616c526577617264506f6f6c2c205f702960681b608482015260a40161015c565b610735816103e8610976565b9094509050836107cc5760405162461bcd60e51b815260206004820152605660248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20657874726146656529203d20536166654d6174682e7472794469762865606482015275787472614665652c205f64656e6f6d696e61746f722960501b608482015260a40161015c565b6107d683826109cb565b90945092508361085d5760405162461bcd60e51b815260206004820152604660248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20747029203d20536166654d6174682e7472794164642874702c2065787460648201526572614665652960d01b608482015260a40161015c565b505b5098975050505050505050565b6000808061087b84606461092b565b90925090508161089d5760405162461bcd60e51b815260040161015c90610b70565b6108a9816103e8610976565b9092509050816101935760405162461bcd60e51b815260040161015c90610b70565b600080806108db846101f461092b565b9092509050816108fd5760405162461bcd60e51b815260040161015c90610bb2565b610909816103e8610976565b9092509050816101935760405162461bcd60e51b815260040161015c90610bb2565b60008083600003610942575060019050600061096f565b8383028385828161095557610955610bf5565b041461096857600080925092505061096f565b6001925090505b9250929050565b6000808260000361098c5750600090508061096f565b600183858161099d5761099d610bf5565b04915091509250929050565b600080838311156109bf5750600090508061096f565b50600193919092039150565b6000808383018481101561096857600080925092505061096f565b6000602082840312156109f857600080fd5b5035919050565b60008060408385031215610a1257600080fd5b50508035926020909101359150565b60008060008060008060c08789031215610a3a57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b60208082526024908201527f5b7469636b6574496e636f6d653247726f75704c65616465725d206f766572666040820152633637bb9760e11b606082015260800190565b60208082526022908201527f5b726577617264506f6f6c3247726f75704d656d6265725d206f766572666c6f6040820152613b9760f11b606082015260800190565b60208082526024908201527f5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666040820152633637bb9760e11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600060018201610b5657610b56610b2e565b5060010190565b8181038181111561025957610259610b2e565b60208082526022908201527f5b726577617264506f6f6c3247726f75704c65616465725d206f766572666c6f6040820152613b9760f11b606082015260800190565b60208082526023908201527f5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c60408201526237bb9760e91b606082015260800190565b634e487b7160e01b600052601260045260246000fdfe4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63a2646970667358221220ea64bc8966038257df4cafe0d8e715bd9eacef565aa7fd59866ea5b5d1e3a95b64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x92 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91096A3C GT PUSH2 0x65 JUMPI DUP1 PUSH4 0x91096A3C EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x9B49380B EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xBEB19A21 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xE6CA2A8D EQ PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x26D0A334 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x2E26FB4A EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x3ED12AB7 EQ PUSH2 0xC2 JUMPI DUP1 PUSH4 0x84105419 EQ PUSH2 0xD5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x5F5E100 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9D PUSH2 0xBD CALLDATASIZE PUSH1 0x4 PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH2 0x9D PUSH2 0xD0 CALLDATASIZE PUSH1 0x4 PUSH2 0x9FF JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST PUSH2 0x9D PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0x9FF JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH2 0x9D JUMP JUMPDEST PUSH2 0x9D PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0xA21 JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH2 0x9D PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x86C JUMP JUMPDEST PUSH2 0x9D PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x13A DUP5 PUSH1 0x1E PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x165 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x171 DUP2 PUSH2 0x3E8 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x193 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xA64 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x1AC PUSH2 0x3E8 PUSH1 0x64 PUSH2 0x9A9 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP1 POP DUP3 PUSH2 0x1CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x1D8 DUP7 DUP3 PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x1FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x206 DUP3 PUSH2 0x3E8 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x228 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x232 DUP3 DUP7 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x254 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAA8 JUMP JUMPDEST POP SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x271 PUSH2 0x3E8 PUSH1 0x1E PUSH2 0x9A9 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP1 POP DUP3 PUSH2 0x293 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x29F DUP2 PUSH2 0x1F4 PUSH2 0x9A9 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP1 POP DUP3 PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x2CB DUP7 DUP3 PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x2ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x2F9 DUP3 PUSH2 0x3E8 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x31B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x325 DUP3 DUP7 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x254 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x3DC JUMPI PUSH2 0x362 DUP3 DUP12 PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x3CA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E20692A2A5F616C7068612E PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x15C JUMP JUMPDEST DUP1 PUSH2 0x3D4 DUP2 PUSH2 0xB44 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x34F JUMP JUMPDEST POP PUSH2 0x3E8 DUP2 PUSH1 0xA PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x45D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612A692A2A5F PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x30B638343097 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x46A DUP2 PUSH3 0xF4240 PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E20285F626574612F5F6465 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E6F6D696E61746F722A692A2A5F616C706861292A5F646563696D616C2E0000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x502 DUP2 PUSH2 0x3E8 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x53 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612F5F64656E PUSH1 0x64 DUP3 ADD MSTORE PUSH19 0x37B6B4B730BA37B9153495152FB0B638343097 PUSH1 0x69 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x591 DUP2 PUSH3 0x4C4B40 PUSH2 0x9CB JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x61D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xC0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612F5F64656E PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6F6D696E61746F722A692A2A5F616C706861202B2067616D6D612E0000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x15C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP9 SLT ISZERO DUP1 ISZERO PUSH2 0x630 JUMPI POP PUSH1 0x0 DUP8 SLT ISZERO JUMPDEST ISZERO PUSH2 0x657 JUMPI PUSH1 0xA PUSH2 0x641 DUP7 DUP9 PUSH2 0xB5D JUMP JUMPDEST GT ISZERO PUSH2 0x64F JUMPI POP PUSH1 0x1 PUSH2 0x682 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x682 JUMP JUMPDEST PUSH1 0x0 DUP9 SLT ISZERO DUP1 ISZERO PUSH2 0x668 JUMPI POP PUSH1 0x0 DUP8 SLT JUMPDEST ISZERO PUSH2 0x67E JUMPI PUSH1 0xA DUP7 GT ISZERO PUSH2 0x64F JUMPI POP PUSH1 0x1 PUSH2 0x682 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP1 ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 PUSH2 0x695 DUP11 PUSH1 0x64 PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP5 POP SWAP1 POP DUP4 PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x53 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20657874726146656529203D20536166654D6174682E7472794D756C2874 PUSH1 0x64 DUP3 ADD MSTORE PUSH19 0x6F74616C526577617264506F6F6C2C205F7029 PUSH1 0x68 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x735 DUP2 PUSH2 0x3E8 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP1 POP DUP4 PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x56 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20657874726146656529203D20536166654D6174682E7472794469762865 PUSH1 0x64 DUP3 ADD MSTORE PUSH22 0x787472614665652C205F64656E6F6D696E61746F7229 PUSH1 0x50 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x7D6 DUP4 DUP3 PUSH2 0x9CB JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP DUP4 PUSH2 0x85D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20747029203D20536166654D6174682E7472794164642874702C20657874 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x726146656529 PUSH1 0xD0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x15C JUMP JUMPDEST POP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x87B DUP5 PUSH1 0x64 PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xB70 JUMP JUMPDEST PUSH2 0x8A9 DUP2 PUSH2 0x3E8 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x193 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x8DB DUP5 PUSH2 0x1F4 PUSH2 0x92B JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH2 0x909 DUP2 PUSH2 0x3E8 PUSH2 0x976 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x193 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 SUB PUSH2 0x942 JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH2 0x96F JUMP JUMPDEST DUP4 DUP4 MUL DUP4 DUP6 DUP3 DUP2 PUSH2 0x955 JUMPI PUSH2 0x955 PUSH2 0xBF5 JUMP JUMPDEST DIV EQ PUSH2 0x968 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x96F JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 SUB PUSH2 0x98C JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x99D JUMPI PUSH2 0x99D PUSH2 0xBF5 JUMP JUMPDEST DIV SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x9BF JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x96F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 ADD DUP5 DUP2 LT ISZERO PUSH2 0x968 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x96F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xA3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP5 CALLDATALOAD SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D653247726F75704C65616465725D206F76657266 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3637BB97 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B726577617264506F6F6C3247726F75704D656D6265725D206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x3B97 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D653247726F75704D656D6265725D206F76657266 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3637BB97 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xB56 JUMPI PUSH2 0xB56 PUSH2 0xB2E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x259 JUMPI PUSH2 0x259 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B726577617264506F6F6C3247726F75704C65616465725D206F766572666C6F PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x3B97 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D6532526577617264506F6F6C5D206F766572666C PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x37BB97 PUSH1 0xE9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0x4E PUSH22 0x6D626572206F766572666C6F77206F63637572732077 PUSH9 0x656E2063616C63A264 PUSH10 0x70667358221220EA64BC DUP10 PUSH7 0x38257DF4CAFE0 0xD8 0xE7 ISZERO 0xBD SWAP15 0xAC 0xEF JUMP GAS 0xA7 REVERT MSIZE DUP7 PUSH15 0xA5B5D1E3A95B64736F6C6343000812 STOP CALLER ",
							"sourceMap": "123:7174:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1296:109;421:11;1296:109;;;168:25:2;;;156:2;141:18;1296:109:1;;;;;;;4638:465;;;;;;:::i;:::-;;:::i;6541:753::-;;;;;;:::i;:::-;;:::i;5111:879::-;;;;;;:::i;:::-;;:::i;1181:107::-;356:12;1181:107;;1485:2675;;;;;;:::i;:::-;;:::i;6075:458::-;;;;;;:::i;:::-;;:::i;4168:462::-;;;;;;:::i;:::-;;:::i;4638:465::-;4715:13;;;4860:33;4876:12;469:2;4860:15;:33::i;:::-;4848:45;;-1:-1:-1;4848:45:1;-1:-1:-1;4848:45:1;4904:53;;;;-1:-1:-1;;;4904:53:1;;;;;;;:::i;:::-;;;;;;;;;4980:32;4996:1;1168:4;4980:15;:32::i;:::-;4968:44;;-1:-1:-1;4968:44:1;-1:-1:-1;4968:44:1;5023:53;;;;-1:-1:-1;;;5023:53:1;;;;;;;:::i;:::-;5094:1;4638:465;-1:-1:-1;;;4638:465:1:o;6541:753::-;6631:13;;;;6826:33;1168:4;646:3;6826:15;:33::i;:::-;6814:45;;-1:-1:-1;6814:45:1;-1:-1:-1;6814:45:1;6870:51;;;;-1:-1:-1;;;6870:51:1;;;;;;;:::i;:::-;6944:31;6960:11;6973:1;6944:15;:31::i;:::-;6932:43;;-1:-1:-1;6932:43:1;-1:-1:-1;6932:43:1;6986:51;;;;-1:-1:-1;;;6986:51:1;;;;;;;:::i;:::-;7060:32;7076:1;1168:4;7060:15;:32::i;:::-;7048:44;;-1:-1:-1;7048:44:1;-1:-1:-1;7048:44:1;7103:51;;;;-1:-1:-1;;;7103:51:1;;;;;;;:::i;:::-;7177:26;7193:1;7196:6;7177:15;:26::i;:::-;7165:38;;-1:-1:-1;7165:38:1;-1:-1:-1;7165:38:1;7214:51;;;;-1:-1:-1;;;7214:51:1;;;;;;;:::i;:::-;-1:-1:-1;7285:1:1;-1:-1:-1;;6541:753:1;;;;;:::o;5111:879::-;5204:13;;;;5404:33;1168:4;469:2;5404:15;:33::i;:::-;5392:45;;-1:-1:-1;5392:45:1;-1:-1:-1;5392:45:1;5448:53;;;;-1:-1:-1;;;5448:53:1;;;;;;;:::i;:::-;5524:22;5540:1;556:3;5524:15;:22::i;:::-;5512:34;;-1:-1:-1;5512:34:1;-1:-1:-1;5512:34:1;5557:53;;;;-1:-1:-1;;;5557:53:1;;;;;;;:::i;:::-;5633:32;5649:12;5663:1;5633:15;:32::i;:::-;5621:44;;-1:-1:-1;5621:44:1;-1:-1:-1;5621:44:1;5676:53;;;;-1:-1:-1;;;5676:53:1;;;;;;;:::i;:::-;5752:32;5768:1;1168:4;5752:15;:32::i;:::-;5740:44;;-1:-1:-1;5740:44:1;-1:-1:-1;5740:44:1;5795:53;;;;-1:-1:-1;;;5795:53:1;;;;;;;:::i;:::-;5871:26;5887:1;5890:6;5871:15;:26::i;:::-;5859:38;;-1:-1:-1;5859:38:1;-1:-1:-1;5859:38:1;5908:53;;;;-1:-1:-1;;;5908:53:1;;;;;;;:::i;1485:2675::-;1727:13;1842:4;;1830:9;1892:192;940:1;1907;:10;1892:192;;;1952:24;1968:2;1972:3;1952:15;:24::i;:::-;1939:37;;-1:-1:-1;1939:37:1;-1:-1:-1;1939:37:1;1991:81;;;;;-1:-1:-1;;;1991:81:1;;2986:2:2;1991:81:1;;;2968:21:2;3005:18;;;2998:30;;;;-1:-1:-1;;;;;;;;;;;3044:18:2;;;3037:62;3135:34;3115:18;;;3108:62;3187:19;;1991:81:1;2784:428:2;1991:81:1;1919:3;;;;:::i;:::-;;;;1892:192;;;;2109:26;2125:2;981;2109:15;:26::i;:::-;2096:39;;-1:-1:-1;2096:39:1;-1:-1:-1;2096:39:1;2146:87;;;;-1:-1:-1;;;2146:87:1;;3691:2:2;2146:87:1;;;3673:21:2;3730:2;3710:18;;;3703:30;-1:-1:-1;;;;;;;;;;;3749:18:2;;;3742:62;3840:34;3820:18;;;3813:62;-1:-1:-1;;;3891:19:2;;;3884:37;3938:19;;2146:87:1;3489:474:2;2146:87:1;2259:29;2275:2;230:5;2259:15;:29::i;:::-;2246:42;;-1:-1:-1;2246:42:1;-1:-1:-1;2246:42:1;2299:111;;;;-1:-1:-1;;;2299:111:1;;4170:2:2;2299:111:1;;;4152:21:2;4209:2;4189:18;;;4182:30;-1:-1:-1;;;;;;;;;;;4228:18:2;;;4221:62;4319:34;4299:18;;;4292:62;4391:32;4370:19;;;4363:61;4441:19;;2299:111:1;3968:498:2;2299:111:1;2436:33;2452:2;1168:4;2436:15;:33::i;:::-;2423:46;;-1:-1:-1;2423:46:1;-1:-1:-1;2423:46:1;2480:100;;;;-1:-1:-1;;;2480:100:1;;4673:2:2;2480:100:1;;;4655:21:2;4712:2;4692:18;;;4685:30;-1:-1:-1;;;;;;;;;;;4731:18:2;;;4724:62;4822:34;4802:18;;;4795:62;-1:-1:-1;;;4873:19:2;;;4866:50;4933:19;;2480:100:1;4471:487:2;2480:100:1;2614:27;2630:2;1069:9;2614:15;:27::i;:::-;2601:40;;-1:-1:-1;2601:40:1;-1:-1:-1;2601:40:1;2652:108;;;;-1:-1:-1;;;2652:108:1;;5165:2:2;2652:108:1;;;5147:21:2;5204:2;5184:18;;;5177:30;-1:-1:-1;;;;;;;;;;;5223:18:2;;;5216:62;5314:34;5294:18;;;5287:62;5386:29;5365:19;;;5358:58;5433:19;;2652:108:1;4963:495:2;2652:108:1;2860:22;2910:1;2896:10;:15;;:35;;;;;2930:1;2915:11;:16;;2896:35;2893:561;;;814:2;2950:38;2970:18;2950:17;:38;:::i;:::-;:43;2947:185;;;-1:-1:-1;3033:4:1;2893:561;;2947:185;-1:-1:-1;3111:5:1;2893:561;;;3176:1;3162:10;:15;;:34;;;;;3195:1;3181:11;:15;3162:34;3158:296;;;814:2;3215:17;:22;3212:165;;;-1:-1:-1;3278:4:1;3158:296;;;-1:-1:-1;3437:5:1;3158:296;3470:17;3466:665;;;3503:16;3557:36;3573:15;736:3;3557:15;:36::i;:::-;3538:55;;-1:-1:-1;3538:55:1;-1:-1:-1;3538:55:1;3608:100;;;;-1:-1:-1;;;3608:100:1;;5798:2:2;3608:100:1;;;5780:21:2;5837:2;5817:18;;;5810:30;5876:34;5856:18;;;5849:62;5947:34;5927:18;;;5920:62;-1:-1:-1;;;5998:19:2;;;5991:50;6058:19;;3608:100:1;5596:487:2;3608:100:1;3742:39;3758:8;1168:4;3742:15;:39::i;:::-;3723:58;;-1:-1:-1;3723:58:1;-1:-1:-1;3723:58:1;3796:103;;;;-1:-1:-1;;;3796:103:1;;6290:2:2;3796:103:1;;;6272:21:2;6329:2;6309:18;;;6302:30;6368:34;6348:18;;;6341:62;6439:34;6419:18;;;6412:62;-1:-1:-1;;;6490:19:2;;;6483:53;6553:19;;3796:103:1;6088:490:2;3796:103:1;3927:29;3943:2;3947:8;3927:15;:29::i;:::-;3914:42;;-1:-1:-1;3914:42:1;-1:-1:-1;3914:42:1;3971:87;;;;-1:-1:-1;;;3971:87:1;;6785:2:2;3971:87:1;;;6767:21:2;6824:2;6804:18;;;6797:30;6863:34;6843:18;;;6836:62;6934:34;6914:18;;;6907:62;-1:-1:-1;;;6985:19:2;;;6978:37;7032:19;;3971:87:1;6583:474:2;3971:87:1;3488:643;3466:665;-1:-1:-1;4150:2:1;1485:2675;-1:-1:-1;;;;;;;;1485:2675:1:o;6075:458::-;6149:13;;;6293:32;6309:11;646:3;6293:15;:32::i;:::-;6281:44;;-1:-1:-1;6281:44:1;-1:-1:-1;6281:44:1;6336:51;;;;-1:-1:-1;;;6336:51:1;;;;;;;:::i;:::-;6410:32;6426:1;1168:4;6410:15;:32::i;:::-;6398:44;;-1:-1:-1;6398:44:1;-1:-1:-1;6398:44:1;6453:51;;;;-1:-1:-1;;;6453:51:1;;;;;;;:::i;4168:462::-;4244:13;;;4389:33;4405:12;556:3;4389:15;:33::i;:::-;4377:45;;-1:-1:-1;4377:45:1;-1:-1:-1;4377:45:1;4433:52;;;;-1:-1:-1;;;4433:52:1;;;;;;;:::i;:::-;4508:32;4524:1;1168:4;4508:15;:32::i;:::-;4496:44;;-1:-1:-1;4496:44:1;-1:-1:-1;4496:44:1;4551:52;;;;-1:-1:-1;;;4551:52:1;;;;;;;:::i;1339:493:0:-;1400:4;1406:7;1683:1;1688;1683:6;1679:28;;-1:-1:-1;1699:4:0;;-1:-1:-1;1705:1:0;1691:16;;1679:28;1733:5;;;1737:1;1733;:5;:1;1756:5;;;;:::i;:::-;;:10;1752:33;;1776:5;1783:1;1768:17;;;;;;;1752:33;1807:4;;-1:-1:-1;1813:1:0;-1:-1:-1;1339:493:0;;;;;;:::o;1981:190::-;2042:4;2048:7;2095:1;2100;2095:6;2091:29;;-1:-1:-1;2111:5:0;;-1:-1:-1;2111:5:0;2103:17;;2091:29;2142:4;2152:1;2148;:5;;;;;:::i;:::-;;2134:20;;;;1981:190;;;;;:::o;1002:189::-;1063:4;1069:7;1120:1;1116;:5;1112:28;;;-1:-1:-1;1131:5:0;;-1:-1:-1;1131:5:0;1123:17;;1112:28;-1:-1:-1;1162:4:0;;1168:5;;;;;-1:-1:-1;1002:189:0:o;641:216::-;702:4;;763:5;;;786;;;782:28;;;801:5;808:1;793:17;;;;;;;204:180:2;263:6;316:2;304:9;295:7;291:23;287:32;284:52;;;332:1;329;322:12;284:52;-1:-1:-1;355:23:2;;204:180;-1:-1:-1;204:180:2:o;389:248::-;457:6;465;518:2;506:9;497:7;493:23;489:32;486:52;;;534:1;531;524:12;486:52;-1:-1:-1;;557:23:2;;;627:2;612:18;;;599:32;;-1:-1:-1;389:248:2:o;642:521::-;744:6;752;760;768;776;784;837:3;825:9;816:7;812:23;808:33;805:53;;;854:1;851;844:12;805:53;-1:-1:-1;;877:23:2;;;947:2;932:18;;919:32;;-1:-1:-1;998:2:2;983:18;;970:32;;1049:2;1034:18;;1021:32;;-1:-1:-1;1100:3:2;1085:19;;1072:33;;-1:-1:-1;1152:3:2;1137:19;1124:33;;-1:-1:-1;642:521:2;-1:-1:-1;642:521:2:o;1168:400::-;1370:2;1352:21;;;1409:2;1389:18;;;1382:30;1448:34;1443:2;1428:18;;1421:62;-1:-1:-1;;;1514:2:2;1499:18;;1492:34;1558:3;1543:19;;1168:400::o;1573:398::-;1775:2;1757:21;;;1814:2;1794:18;;;1787:30;1853:34;1848:2;1833:18;;1826:62;-1:-1:-1;;;1919:2:2;1904:18;;1897:32;1961:3;1946:19;;1573:398::o;1976:400::-;2178:2;2160:21;;;2217:2;2197:18;;;2190:30;2256:34;2251:2;2236:18;;2229:62;-1:-1:-1;;;2322:2:2;2307:18;;2300:34;2366:3;2351:19;;1976:400::o;3217:127::-;3278:10;3273:3;3269:20;3266:1;3259:31;3309:4;3306:1;3299:15;3333:4;3330:1;3323:15;3349:135;3388:3;3409:17;;;3406:43;;3429:18;;:::i;:::-;-1:-1:-1;3476:1:2;3465:13;;3349:135::o;5463:128::-;5530:9;;;5551:11;;;5548:37;;;5565:18;;:::i;7062:398::-;7264:2;7246:21;;;7303:2;7283:18;;;7276:30;7342:34;7337:2;7322:18;;7315:62;-1:-1:-1;;;7408:2:2;7393:18;;7386:32;7450:3;7435:19;;7062:398::o;7465:399::-;7667:2;7649:21;;;7706:2;7686:18;;;7679:30;7745:34;7740:2;7725:18;;7718:62;-1:-1:-1;;;7811:2:2;7796:18;;7789:33;7854:3;7839:19;;7465:399::o;7869:127::-;7930:10;7925:3;7921:20;7918:1;7911:31;7961:4;7958:1;7951:15;7985:4;7982:1;7975:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "633800",
								"executionCost": "701",
								"totalCost": "634501"
							},
							"external": {
								"groupCreateMinFee()": "154",
								"rewardPool2GroupLeader(uint256)": "600",
								"rewardPool2GroupMember(uint256,uint256)": "744",
								"taskCreateMinFee()": "164",
								"ticketIncome2GroupLeader(uint256)": "579",
								"ticketIncome2GroupMember(uint256,uint256)": "infinite",
								"ticketIncome2RewardPool(uint256)": "622",
								"ticketPrice(uint256,uint256,int256,int256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 123,
									"end": 7297,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 123,
									"end": 7297,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ea64bc8966038257df4cafe0d8e715bd9eacef565aa7fd59866ea5b5d1e3a95b64736f6c63430008120033",
									".code": [
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "91096A3C"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "91096A3C"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "9B49380B"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "BEB19A21"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "E6CA2A8D"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "26D0A334"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "2E26FB4A"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "3ED12AB7"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "84105419"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 7297,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1405,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1296,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 421,
											"end": 432,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 1296,
											"end": 1405,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1296,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1405,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1405,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 168,
											"end": 193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 156,
											"end": 158,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 141,
											"end": 159,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1405,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1405,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1405,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1405,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1405,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1405,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 5103,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4638,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4638,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4638,
											"end": 5103,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 5103,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4638,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4638,
											"end": 5103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 5103,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4638,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4638,
											"end": 5103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6541,
											"end": 7294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 6541,
											"end": 7294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5111,
											"end": 5990,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5111,
											"end": 5990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5111,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5111,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5111,
											"end": 5990,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5111,
											"end": 5990,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5111,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5111,
											"end": 5990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5111,
											"end": 5990,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5111,
											"end": 5990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5111,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5111,
											"end": 5990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1288,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1181,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 356,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "3B9ACA00"
										},
										{
											"begin": 1181,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1181,
											"end": 1288,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 4160,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1485,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1485,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1485,
											"end": 4160,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 4160,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1485,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1485,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 4160,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1485,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1485,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6533,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6075,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6075,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 6075,
											"end": 6533,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6533,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6075,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 6075,
											"end": 6533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6533,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 6075,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6075,
											"end": 6533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4168,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4168,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4168,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4168,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4168,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4168,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4168,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 5103,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4638,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4876,
											"end": 4888,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 469,
											"end": 471,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4860,
											"end": 4893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4893,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4860,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 4893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 4893,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 4893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4848,
											"end": 4893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4904,
											"end": 4957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4904,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4980,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 4980,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4980,
											"end": 5012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4980,
											"end": 5012,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4980,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 5012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 5012,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4968,
											"end": 5012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4968,
											"end": 5012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5023,
											"end": 5076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5094,
											"end": 5095,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 5103,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4638,
											"end": 5103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6631,
											"end": 6644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6644,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1168,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 646,
											"end": 649,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6826,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 6826,
											"end": 6859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6859,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 6826,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6814,
											"end": 6859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6814,
											"end": 6859,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6814,
											"end": 6859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6814,
											"end": 6859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6870,
											"end": 6921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6870,
											"end": 6921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 6960,
											"end": 6971,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6973,
											"end": 6974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 6944,
											"end": 6975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6975,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 6944,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6932,
											"end": 6975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6932,
											"end": 6975,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6932,
											"end": 6975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6932,
											"end": 6975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6986,
											"end": 7037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6986,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7060,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 7076,
											"end": 7077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 7060,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 7060,
											"end": 7092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7060,
											"end": 7092,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 7060,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7048,
											"end": 7092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7048,
											"end": 7092,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7048,
											"end": 7092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7048,
											"end": 7092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 7103,
											"end": 7154,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7103,
											"end": 7154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7103,
											"end": 7154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7154,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7103,
											"end": 7154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 7103,
											"end": 7154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 7103,
											"end": 7154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7154,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 7103,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 7193,
											"end": 7194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7196,
											"end": 7202,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 7177,
											"end": 7203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7203,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 7177,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7165,
											"end": 7203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7165,
											"end": 7203,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7165,
											"end": 7203,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7165,
											"end": 7203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 7214,
											"end": 7265,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7214,
											"end": 7265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7214,
											"end": 7265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7214,
											"end": 7265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 7214,
											"end": 7265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 7214,
											"end": 7265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7214,
											"end": 7265,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 7214,
											"end": 7265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7285,
											"end": 7286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 7294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 7294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5111,
											"end": 5990,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5111,
											"end": 5990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5204,
											"end": 5217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1168,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 469,
											"end": 471,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 5404,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5404,
											"end": 5437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5437,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5404,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5392,
											"end": 5437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5392,
											"end": 5437,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5392,
											"end": 5437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5392,
											"end": 5437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5448,
											"end": 5501,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5501,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5448,
											"end": 5501,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5501,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5501,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5448,
											"end": 5501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5448,
											"end": 5501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5448,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5501,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5448,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5540,
											"end": 5541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 556,
											"end": 559,
											"name": "PUSH",
											"source": 1,
											"value": "1F4"
										},
										{
											"begin": 5524,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5524,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5546,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5524,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5512,
											"end": 5546,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5512,
											"end": 5546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5512,
											"end": 5546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5557,
											"end": 5610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5557,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5649,
											"end": 5661,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5633,
											"end": 5665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5665,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5633,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5621,
											"end": 5665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5621,
											"end": 5665,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5621,
											"end": 5665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5621,
											"end": 5665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5676,
											"end": 5729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5729,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5676,
											"end": 5729,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5676,
											"end": 5729,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5729,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5729,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5676,
											"end": 5729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5676,
											"end": 5729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5676,
											"end": 5729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5729,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5676,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 5768,
											"end": 5769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 5752,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 5752,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5784,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 5752,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5740,
											"end": 5784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5740,
											"end": 5784,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5740,
											"end": 5784,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5740,
											"end": 5784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5795,
											"end": 5848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5887,
											"end": 5888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5890,
											"end": 5896,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 5871,
											"end": 5897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5897,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5871,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5897,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5859,
											"end": 5897,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5859,
											"end": 5897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5908,
											"end": 5961,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5908,
											"end": 5961,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5908,
											"end": 5961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5908,
											"end": 5961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5908,
											"end": 5961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5908,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 4160,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1485,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1846,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1842,
											"end": 1846,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 2084,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1892,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 940,
											"end": 941,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1917,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2084,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1892,
											"end": 2084,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1968,
											"end": 1970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 1975,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1952,
											"end": 1976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1976,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1952,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1939,
											"end": 1976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1991,
											"end": 2072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2072,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2072,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1991,
											"end": 2072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2072,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2986,
											"end": 2988,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1991,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1991,
											"end": 2072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3023,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3005,
											"end": 3023,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3023,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3028,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3028,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2998,
											"end": 3028,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3044,
											"end": 3062,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3044,
											"end": 3062,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3062,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3037,
											"end": 3099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3135,
											"end": 3169,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E20692A2A5F616C7068612E"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3108,
											"end": 3170,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3206,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3187,
											"end": 3206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2784,
											"end": 3212,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1991,
											"end": 2072,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1991,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1919,
											"end": 1922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1892,
											"end": 2084,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2084,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1892,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2109,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2109,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2135,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2109,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2135,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2096,
											"end": 2135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2096,
											"end": 2135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2146,
											"end": 2233,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2146,
											"end": 2233,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2146,
											"end": 2233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 3693,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2146,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2146,
											"end": 2233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3673,
											"end": 3694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3730,
											"end": 3732,
											"name": "PUSH",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3742,
											"end": 3804,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 3874,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E205F626574612A692A2A5F"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3813,
											"end": 3875,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B638343097"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3891,
											"end": 3910,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3891,
											"end": 3910,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3884,
											"end": 3921,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 3957,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 3938,
											"end": 3957,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3489,
											"end": 3963,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2233,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2146,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2275,
											"end": 2277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 230,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "F4240"
										},
										{
											"begin": 2259,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2288,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2288,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2288,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2299,
											"end": 2410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2299,
											"end": 2410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2299,
											"end": 2410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4170,
											"end": 4172,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2299,
											"end": 2410,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2299,
											"end": 2410,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4173,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4209,
											"end": 4211,
											"name": "PUSH",
											"source": 2,
											"value": "5E"
										},
										{
											"begin": 4189,
											"end": 4207,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4189,
											"end": 4207,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4189,
											"end": 4207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4182,
											"end": 4212,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4228,
											"end": 4246,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4228,
											"end": 4246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4246,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4221,
											"end": 4283,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4353,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E20285F626574612F5F6465"
										},
										{
											"begin": 4299,
											"end": 4317,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4299,
											"end": 4317,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4299,
											"end": 4317,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4292,
											"end": 4354,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4391,
											"end": 4423,
											"name": "PUSH",
											"source": 2,
											"value": "6E6F6D696E61746F722A692A2A5F616C706861292A5F646563696D616C2E0000"
										},
										{
											"begin": 4370,
											"end": 4389,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4370,
											"end": 4389,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4370,
											"end": 4389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4424,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4441,
											"end": 4460,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 4441,
											"end": 4460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3968,
											"end": 4466,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2410,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2299,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2452,
											"end": 2454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 2436,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2436,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2436,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2436,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2469,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2423,
											"end": 2469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2423,
											"end": 2469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2480,
											"end": 2580,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2580,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2580,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2480,
											"end": 2580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2580,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4673,
											"end": 4675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2580,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2480,
											"end": 2580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4655,
											"end": 4676,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4712,
											"end": 4714,
											"name": "PUSH",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4692,
											"end": 4710,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4692,
											"end": 4710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4692,
											"end": 4710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4685,
											"end": 4715,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4786,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4822,
											"end": 4856,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E205F626574612F5F64656E"
										},
										{
											"begin": 4802,
											"end": 4820,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4802,
											"end": 4820,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4802,
											"end": 4820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4795,
											"end": 4857,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B6B4B730BA37B9153495152FB0B638343097"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4873,
											"end": 4892,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4873,
											"end": 4892,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4916,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4933,
											"end": 4952,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 4933,
											"end": 4952,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4471,
											"end": 4958,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2580,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2480,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2630,
											"end": 2632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1078,
											"name": "PUSH",
											"source": 1,
											"value": "4C4B40"
										},
										{
											"begin": 2614,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2614,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2641,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2614,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2601,
											"end": 2641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2601,
											"end": 2641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2652,
											"end": 2760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2760,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2652,
											"end": 2760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2760,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5165,
											"end": 5167,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2760,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2652,
											"end": 2760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2652,
											"end": 2760,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5147,
											"end": 5168,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5206,
											"name": "PUSH",
											"source": 2,
											"value": "5B"
										},
										{
											"begin": 5184,
											"end": 5202,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5184,
											"end": 5202,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5184,
											"end": 5202,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5177,
											"end": 5207,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5223,
											"end": 5241,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5223,
											"end": 5241,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5223,
											"end": 5241,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5216,
											"end": 5278,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5348,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E205F626574612F5F64656E"
										},
										{
											"begin": 5294,
											"end": 5312,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5294,
											"end": 5312,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5294,
											"end": 5312,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5287,
											"end": 5349,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5386,
											"end": 5415,
											"name": "PUSH",
											"source": 2,
											"value": "6F6D696E61746F722A692A2A5F616C706861202B2067616D6D612E0000000000"
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5358,
											"end": 5416,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5433,
											"end": 5452,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 5433,
											"end": 5452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2652,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4963,
											"end": 5458,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2652,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2652,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2906,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2911,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2931,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2896,
											"end": 2931,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2926,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2931,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2896,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3454,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2893,
											"end": 3454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2950,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2970,
											"end": 2988,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 2967,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2950,
											"end": 2988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 2988,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2950,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 2993,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3132,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2947,
											"end": 3132,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3033,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2893,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2893,
											"end": 3454,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 3132,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2947,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3111,
											"end": 3116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2893,
											"end": 3454,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3454,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2893,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3177,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3172,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3177,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3177,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3181,
											"end": 3192,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3196,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3162,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3454,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3158,
											"end": 3454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3215,
											"end": 3232,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3237,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3377,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3212,
											"end": 3377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3278,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3158,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3158,
											"end": 3454,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3454,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 3158,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3437,
											"end": 3442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3454,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3158,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 4131,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3466,
											"end": 4131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3573,
											"end": 3588,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 736,
											"end": 739,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3557,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3557,
											"end": 3593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3593,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3557,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3593,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3538,
											"end": 3593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3538,
											"end": 3593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3608,
											"end": 3708,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3708,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3608,
											"end": 3708,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3608,
											"end": 3708,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 5800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3608,
											"end": 3708,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3608,
											"end": 3708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5801,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5837,
											"end": 5839,
											"name": "PUSH",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5817,
											"end": 5835,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5817,
											"end": 5835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5817,
											"end": 5835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5810,
											"end": 5840,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5876,
											"end": 5910,
											"name": "PUSH",
											"source": 2,
											"value": "4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61"
										},
										{
											"begin": 5856,
											"end": 5874,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5856,
											"end": 5874,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5856,
											"end": 5874,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5849,
											"end": 5911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5947,
											"end": 5981,
											"name": "PUSH",
											"source": 2,
											"value": "672C20657874726146656529203D20536166654D6174682E7472794D756C2874"
										},
										{
											"begin": 5927,
											"end": 5945,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5927,
											"end": 5945,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5927,
											"end": 5945,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5920,
											"end": 5982,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F74616C526577617264506F6F6C2C205F7029"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5998,
											"end": 6017,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5998,
											"end": 6017,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5998,
											"end": 6017,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5991,
											"end": 6041,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6058,
											"end": 6077,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 6058,
											"end": 6077,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5596,
											"end": 6083,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3708,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3608,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3758,
											"end": 3766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 3742,
											"end": 3757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3742,
											"end": 3781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3781,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3742,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3781,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3723,
											"end": 3781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3723,
											"end": 3781,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3796,
											"end": 3899,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3899,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3796,
											"end": 3899,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3796,
											"end": 3899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6292,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3796,
											"end": 3899,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3796,
											"end": 3899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6329,
											"end": 6331,
											"name": "PUSH",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 6309,
											"end": 6327,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6309,
											"end": 6327,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6309,
											"end": 6327,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6302,
											"end": 6332,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6368,
											"end": 6402,
											"name": "PUSH",
											"source": 2,
											"value": "4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61"
										},
										{
											"begin": 6348,
											"end": 6366,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6348,
											"end": 6366,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6366,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6341,
											"end": 6403,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6439,
											"end": 6473,
											"name": "PUSH",
											"source": 2,
											"value": "672C20657874726146656529203D20536166654D6174682E7472794469762865"
										},
										{
											"begin": 6419,
											"end": 6437,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 6419,
											"end": 6437,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6419,
											"end": 6437,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6412,
											"end": 6474,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "787472614665652C205F64656E6F6D696E61746F7229"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6490,
											"end": 6509,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6490,
											"end": 6509,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6490,
											"end": 6509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6483,
											"end": 6536,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6553,
											"end": 6572,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 6553,
											"end": 6572,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6088,
											"end": 6578,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3899,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3796,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 3955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3927,
											"end": 3956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3956,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3927,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3914,
											"end": 3956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3914,
											"end": 3956,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3914,
											"end": 3956,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3914,
											"end": 3956,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3971,
											"end": 4058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 4058,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3971,
											"end": 4058,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3971,
											"end": 4058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 4058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6785,
											"end": 6787,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3971,
											"end": 4058,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3971,
											"end": 4058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3971,
											"end": 4058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6767,
											"end": 6788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6824,
											"end": 6826,
											"name": "PUSH",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 6804,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6804,
											"end": 6822,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6804,
											"end": 6822,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6797,
											"end": 6827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6863,
											"end": 6897,
											"name": "PUSH",
											"source": 2,
											"value": "4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61"
										},
										{
											"begin": 6843,
											"end": 6861,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6843,
											"end": 6861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6843,
											"end": 6861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6836,
											"end": 6898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6934,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "672C20747029203D20536166654D6174682E7472794164642874702C20657874"
										},
										{
											"begin": 6914,
											"end": 6932,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 6914,
											"end": 6932,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6914,
											"end": 6932,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6907,
											"end": 6969,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726146656529"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6985,
											"end": 7004,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6985,
											"end": 7004,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6985,
											"end": 7004,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6978,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7032,
											"end": 7051,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 7032,
											"end": 7051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3971,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6583,
											"end": 7057,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3971,
											"end": 4058,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3971,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3466,
											"end": 4131,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3466,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4150,
											"end": 4152,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 4160,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1485,
											"end": 4160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6533,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6075,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6149,
											"end": 6162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6149,
											"end": 6162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6149,
											"end": 6162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6293,
											"end": 6325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6309,
											"end": 6320,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 646,
											"end": 649,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6293,
											"end": 6308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 6293,
											"end": 6325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6293,
											"end": 6325,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6293,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6325,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6281,
											"end": 6325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6281,
											"end": 6325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6336,
											"end": 6387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6410,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6426,
											"end": 6427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 6410,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6410,
											"end": 6442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6410,
											"end": 6442,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 6410,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6442,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6398,
											"end": 6442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6398,
											"end": 6442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 6453,
											"end": 6504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6453,
											"end": 6504,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6453,
											"end": 6504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6453,
											"end": 6504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6453,
											"end": 6504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 6453,
											"end": 6504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4168,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4257,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4257,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4389,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4405,
											"end": 4417,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 556,
											"end": 559,
											"name": "PUSH",
											"source": 1,
											"value": "1F4"
										},
										{
											"begin": 4389,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4389,
											"end": 4422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4389,
											"end": 4422,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4389,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4422,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4377,
											"end": 4422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4377,
											"end": 4422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 4433,
											"end": 4485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4433,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4524,
											"end": 4525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 4508,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 4508,
											"end": 4540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4540,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4508,
											"end": 4540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4496,
											"end": 4540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4551,
											"end": 4603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4551,
											"end": 4603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4551,
											"end": 4603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4603,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4551,
											"end": 4603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4551,
											"end": 4603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 4551,
											"end": 4603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1689,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1679,
											"end": 1707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1699,
											"end": 1703,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1699,
											"end": 1703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1705,
											"end": 1706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1691,
											"end": 1707,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1707,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1679,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1756,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1766,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2101,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2091,
											"end": 2120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2111,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2111,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2103,
											"end": 2120,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2120,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2091,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2152,
											"end": 2153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2148,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1191,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1002,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1063,
											"end": 1067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1121,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1117,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1121,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1140,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1112,
											"end": 1140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1131,
											"end": 1136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1131,
											"end": 1136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1123,
											"end": 1140,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1112,
											"end": 1140,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1112,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1162,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1162,
											"end": 1166,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1002,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 857,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 641,
											"end": 857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 763,
											"end": 768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 763,
											"end": 768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 763,
											"end": 768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 786,
											"end": 791,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 786,
											"end": 791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 786,
											"end": 791,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 782,
											"end": 810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 801,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 204,
											"end": 384,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 204,
											"end": 384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 263,
											"end": 269,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 318,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 304,
											"end": 313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 295,
											"end": 302,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 287,
											"end": 319,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 284,
											"end": 336,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 284,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 284,
											"end": 336,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 332,
											"end": 333,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 334,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 284,
											"end": 336,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 284,
											"end": 336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 355,
											"end": 378,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 355,
											"end": 378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 204,
											"end": 384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 204,
											"end": 384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 389,
											"end": 637,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 389,
											"end": 637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 457,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 471,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 518,
											"end": 520,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 515,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 497,
											"end": 504,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 489,
											"end": 521,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 486,
											"end": 538,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 486,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 486,
											"end": 538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 534,
											"end": 535,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 524,
											"end": 536,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 486,
											"end": 538,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 486,
											"end": 538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 557,
											"end": 580,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 557,
											"end": 580,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 627,
											"end": 629,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 612,
											"end": 630,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 599,
											"end": 631,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 599,
											"end": 631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 389,
											"end": 637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 642,
											"end": 1163,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 642,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 744,
											"end": 750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 760,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 776,
											"end": 782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 837,
											"end": 840,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 825,
											"end": 834,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 816,
											"end": 823,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 812,
											"end": 835,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 808,
											"end": 841,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 805,
											"end": 858,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 805,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 805,
											"end": 858,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 852,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 844,
											"end": 856,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 805,
											"end": 858,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 805,
											"end": 858,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 877,
											"end": 900,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 877,
											"end": 900,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 877,
											"end": 900,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 947,
											"end": 949,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 932,
											"end": 950,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 932,
											"end": 950,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 919,
											"end": 951,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 919,
											"end": 951,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 998,
											"end": 1000,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1002,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1002,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1053,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1053,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1100,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1085,
											"end": 1104,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1104,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1152,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1137,
											"end": 1156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1157,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1157,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 642,
											"end": 1163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 642,
											"end": 1163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1568,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1168,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1373,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1373,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1373,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1411,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1412,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "5B7469636B6574496E636F6D653247726F75704C65616465725D206F76657266"
										},
										{
											"begin": 1443,
											"end": 1445,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1446,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1483,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3637BB97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1492,
											"end": 1526,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1543,
											"end": 1562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1971,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1573,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1775,
											"end": 1777,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1757,
											"end": 1778,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1778,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1778,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1816,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1794,
											"end": 1812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1794,
											"end": 1812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1794,
											"end": 1812,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1787,
											"end": 1817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 1887,
											"name": "PUSH",
											"source": 2,
											"value": "5B726577617264506F6F6C3247726F75704D656D6265725D206F766572666C6F"
										},
										{
											"begin": 1848,
											"end": 1850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1833,
											"end": 1851,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1833,
											"end": 1851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1826,
											"end": 1888,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3B97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 1921,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1904,
											"end": 1922,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1929,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 1964,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1946,
											"end": 1965,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 1965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2376,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1976,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2178,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2160,
											"end": 2181,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2181,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2181,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2219,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2197,
											"end": 2215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2197,
											"end": 2215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2197,
											"end": 2215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2290,
											"name": "PUSH",
											"source": 2,
											"value": "5B7469636B6574496E636F6D653247726F75704D656D6265725D206F76657266"
										},
										{
											"begin": 2251,
											"end": 2253,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2236,
											"end": 2254,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2291,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3637BB97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2322,
											"end": 2324,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2307,
											"end": 2325,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2307,
											"end": 2325,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2300,
											"end": 2334,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2366,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2351,
											"end": 2370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2351,
											"end": 2370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3217,
											"end": 3344,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3217,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3278,
											"end": 3288,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 3273,
											"end": 3276,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3266,
											"end": 3267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3309,
											"end": 3313,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3306,
											"end": 3307,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3337,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3330,
											"end": 3331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3323,
											"end": 3338,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3484,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3349,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3426,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3409,
											"end": 3426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3409,
											"end": 3426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3429,
											"end": 3447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3476,
											"end": 3477,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3465,
											"end": 3478,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3349,
											"end": 3484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5463,
											"end": 5591,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5463,
											"end": 5591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5530,
											"end": 5539,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5530,
											"end": 5539,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5530,
											"end": 5539,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5551,
											"end": 5562,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5585,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5548,
											"end": 5585,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5565,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5565,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5565,
											"end": 5583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7460,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 7062,
											"end": 7460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7264,
											"end": 7266,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7246,
											"end": 7267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7246,
											"end": 7267,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7246,
											"end": 7267,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7303,
											"end": 7305,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 7283,
											"end": 7301,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7283,
											"end": 7301,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7283,
											"end": 7301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7276,
											"end": 7306,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7342,
											"end": 7376,
											"name": "PUSH",
											"source": 2,
											"value": "5B726577617264506F6F6C3247726F75704C65616465725D206F766572666C6F"
										},
										{
											"begin": 7337,
											"end": 7339,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7322,
											"end": 7340,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7322,
											"end": 7340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7315,
											"end": 7377,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3B97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7408,
											"end": 7410,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7386,
											"end": 7418,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7450,
											"end": 7453,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7435,
											"end": 7454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7465,
											"end": 7864,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 7465,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7667,
											"end": 7669,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7649,
											"end": 7670,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7670,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7649,
											"end": 7670,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 7708,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7686,
											"end": 7704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7686,
											"end": 7704,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7686,
											"end": 7704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7679,
											"end": 7709,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7745,
											"end": 7779,
											"name": "PUSH",
											"source": 2,
											"value": "5B7469636B6574496E636F6D6532526577617264506F6F6C5D206F766572666C"
										},
										{
											"begin": 7740,
											"end": 7742,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7725,
											"end": 7743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7725,
											"end": 7743,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7718,
											"end": 7780,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BB97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7811,
											"end": 7813,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7789,
											"end": 7822,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7854,
											"end": 7857,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7839,
											"end": 7858,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7839,
											"end": 7858,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7465,
											"end": 7864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7869,
											"end": 7996,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7869,
											"end": 7996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7940,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 7925,
											"end": 7928,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7921,
											"end": 7941,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7918,
											"end": 7919,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7911,
											"end": 7942,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 7958,
											"end": 7959,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7985,
											"end": 7989,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7982,
											"end": 7983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7975,
											"end": 7990,
											"name": "REVERT",
											"source": 2
										}
									],
									".data": {
										"3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"degen/DegenMoneyLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"groupCreateMinFee()": "26d0a334",
							"rewardPool2GroupLeader(uint256)": "beb19a21",
							"rewardPool2GroupMember(uint256,uint256)": "3ed12ab7",
							"taskCreateMinFee()": "91096a3c",
							"ticketIncome2GroupLeader(uint256)": "2e26fb4a",
							"ticketIncome2GroupMember(uint256,uint256)": "84105419",
							"ticketIncome2RewardPool(uint256)": "e6ca2a8d",
							"ticketPrice(uint256,uint256,int256,int256,uint256,uint256)": "9b49380b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"LogUint256\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"groupCreateMinFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"}],\"name\":\"rewardPool2GroupLeader\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memNum\",\"type\":\"uint256\"}],\"name\":\"rewardPool2GroupMember\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taskCreateMinFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketIncome\",\"type\":\"uint256\"}],\"name\":\"ticketIncome2GroupLeader\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketIncome\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memNum\",\"type\":\"uint256\"}],\"name\":\"ticketIncome2GroupMember\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketIncome\",\"type\":\"uint256\"}],\"name\":\"ticketIncome2RewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ith\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewardPool\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"firstGrpId\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"SecondGrpId\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"firstGrpPeopleNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondGrpPeopleNum\",\"type\":\"uint256\"}],\"name\":\"ticketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"degen/DegenMoneyLib.sol\":\"DegenMoneyLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"degen/DegenMoneyLib.sol\":{\"keccak256\":\"0x3ab8ec722b3bbaa4f45cdab53c95335cf604daf9ed3562d577f8bb5705772829\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9111fe7a28f66af4ed835c6ea705f0269bb405aba2a1db5d4389ade5e1d022c\",\"dweb:/ipfs/QmbBQ7kru92wEzJhqUcD4m21fo8EowfdHeBa3dMs28JQuu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0",
							"usedErrors": []
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"degen/DegenMoneyLib.sol": {
				"ast": {
					"absolutePath": "degen/DegenMoneyLib.sol",
					"exportedSymbols": {
						"DegenMoneyLib": [
							944
						],
						"SafeMath": [
							311
						]
					},
					"id": 945,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 945,
							"sourceUnit": 312,
							"src": "60:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DegenMoneyLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 944,
							"linearizedBaseContracts": [
								944
							],
							"name": "DegenMoneyLib",
							"nameLocation": "131:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "31c369d7029afba34b21369bcf9a6ac132fb2621c34558b914859b768d05232d",
									"id": 320,
									"name": "LogUint256",
									"nameLocation": "158:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "169:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 315,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "169:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "177:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "177:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "168:17:1"
									},
									"src": "152:34:1"
								},
								{
									"constant": true,
									"id": 325,
									"mutability": "constant",
									"name": "_decimal",
									"nameLocation": "219:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "194:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 321,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "194:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"id": 324,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 322,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "230:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "36",
											"id": 323,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "234:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6_by_1",
												"typeString": "int_const 6"
											},
											"value": "6"
										},
										"src": "230:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 332,
									"mutability": "constant",
									"name": "_taskCreateMinFee",
									"nameLocation": "336:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "311:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 326,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "311:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000_by_1",
											"typeString": "int_const 1000000000"
										},
										"id": 331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030",
											"id": 327,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "356:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000_by_1",
												"typeString": "int_const 1000"
											},
											"value": "1000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"id": 330,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 328,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "363:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "36",
												"id": 329,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "367:1:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6_by_1",
													"typeString": "int_const 6"
												},
												"value": "6"
											},
											"src": "363:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											}
										},
										"src": "356:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000_by_1",
											"typeString": "int_const 1000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 339,
									"mutability": "constant",
									"name": "_groupCreateMinFee",
									"nameLocation": "400:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "375:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 333,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "375:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000_by_1",
											"typeString": "int_const 100000000"
										},
										"id": 338,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030",
											"id": 334,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "421:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"id": 337,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 335,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "427:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "36",
												"id": 336,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "431:1:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6_by_1",
													"typeString": "int_const 6"
												},
												"value": "6"
											},
											"src": "427:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											}
										},
										"src": "421:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000_by_1",
											"typeString": "int_const 100000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 342,
									"mutability": "constant",
									"name": "_a",
									"nameLocation": "464:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "439:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 340,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "439:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 341,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "469:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 345,
									"mutability": "constant",
									"name": "_b",
									"nameLocation": "551:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "526:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 343,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "526:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "353030",
										"id": 344,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "556:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500_by_1",
											"typeString": "int_const 500"
										},
										"value": "500"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 348,
									"mutability": "constant",
									"name": "_c",
									"nameLocation": "641:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "616:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "616:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 347,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "646:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 351,
									"mutability": "constant",
									"name": "_p",
									"nameLocation": "731:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "706:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 349,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 350,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "736:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 354,
									"mutability": "constant",
									"name": "_v",
									"nameLocation": "809:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "784:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 352,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "784:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 353,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "814:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 357,
									"mutability": "constant",
									"name": "_alpha",
									"nameLocation": "931:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "906:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 355,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "906:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 356,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 360,
									"mutability": "constant",
									"name": "_beta",
									"nameLocation": "973:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "948:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 358,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "948:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 359,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "981:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 367,
									"mutability": "constant",
									"name": "_gamma",
									"nameLocation": "1060:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "1035:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 361,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1035:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_5000000_by_1",
											"typeString": "int_const 5000000"
										},
										"id": 366,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "35",
											"id": 362,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1069:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5_by_1",
												"typeString": "int_const 5"
											},
											"value": "5"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"id": 365,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 363,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1073:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "36",
												"id": 364,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1077:1:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_6_by_1",
													"typeString": "int_const 6"
												},
												"value": "6"
											},
											"src": "1073:5:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											}
										},
										"src": "1069:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000000_by_1",
											"typeString": "int_const 5000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 370,
									"mutability": "constant",
									"name": "_denominator",
									"nameLocation": "1153:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 944,
									"src": "1128:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 368,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 369,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1168:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "1245:43:1",
										"statements": [
											{
												"expression": {
													"id": 375,
													"name": "_taskCreateMinFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "1263:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 374,
												"id": 376,
												"nodeType": "Return",
												"src": "1256:24:1"
											}
										]
									},
									"functionSelector": "91096a3c",
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "taskCreateMinFee",
									"nameLocation": "1190:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1206:2:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "1238:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1230:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:15:1"
									},
									"scope": 944,
									"src": "1181:107:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1361:44:1",
										"statements": [
											{
												"expression": {
													"id": 383,
													"name": "_groupCreateMinFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 339,
													"src": "1379:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 382,
												"id": 384,
												"nodeType": "Return",
												"src": "1372:25:1"
											}
										]
									},
									"functionSelector": "26d0a334",
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "groupCreateMinFee",
									"nameLocation": "1305:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1322:2:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "1354:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1346:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1345:15:1"
									},
									"scope": 944,
									"src": "1296:109:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "1748:2412:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 404,
																"name": "_alpha",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1767:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "35",
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1777:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															"src": "1767:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f2061766f6964206f766572666c6f772c20616c706861203c3d2035206f6e6c79",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452",
																"typeString": "literal_string \"To avoid overflow, alpha <= 5 only\""
															},
															"value": "To avoid overflow, alpha <= 5 only"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452",
																"typeString": "literal_string \"To avoid overflow, alpha <= 5 only\""
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1759:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1759:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1759:58:1"
											},
											{
												"assignments": [
													411
												],
												"declarations": [
													{
														"constant": false,
														"id": 411,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "1835:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "1830:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 410,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1830:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"hexValue": "74727565",
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1842:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1830:16:1"
											},
											{
												"assignments": [
													415
												],
												"declarations": [
													{
														"constant": false,
														"id": 415,
														"mutability": "mutable",
														"name": "tp",
														"nameLocation": "1865:2:1",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "1857:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 414,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1857:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 417,
												"initialValue": {
													"hexValue": "31",
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1870:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1857:14:1"
											},
											{
												"body": {
													"id": 443,
													"nodeType": "Block",
													"src": "1924:160:1",
													"statements": [
														{
															"expression": {
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 428,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "1940:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"id": 429,
																			"name": "tp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 415,
																			"src": "1946:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 430,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "1939:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 433,
																			"name": "tp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 415,
																			"src": "1968:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 434,
																			"name": "ith",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "1972:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 431,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "1952:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1961:6:1",
																		"memberName": "tryMul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 104,
																		"src": "1952:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																		}
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1952:24:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"src": "1939:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "ExpressionStatement",
															"src": "1939:37:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 439,
																		"name": "flag",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "1999:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e20692a2a5f616c7068612e",
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2005:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa",
																			"typeString": "literal_string \"Number overflow occurs when calculate ticket price in i**_alpha.\""
																		},
																		"value": "Number overflow occurs when calculate ticket price in i**_alpha."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa",
																			"typeString": "literal_string \"Number overflow occurs when calculate ticket price in i**_alpha.\""
																		}
																	],
																	"id": 438,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1991:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1991:81:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 442,
															"nodeType": "ExpressionStatement",
															"src": "1991:81:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 422,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "1907:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 423,
														"name": "_alpha",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "1911:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1907:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 444,
												"initializationExpression": {
													"assignments": [
														419
													],
													"declarations": [
														{
															"constant": false,
															"id": 419,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1902:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 444,
															"src": "1897:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 418,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1897:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 421,
													"initialValue": {
														"hexValue": "30",
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1904:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1897:8:1"
												},
												"loopExpression": {
													"expression": {
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1919:3:1",
														"subExpression": {
															"id": 425,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "1919:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 427,
													"nodeType": "ExpressionStatement",
													"src": "1919:3:1"
												},
												"nodeType": "ForStatement",
												"src": "1892:192:1"
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 445,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "2097:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 446,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2103:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 447,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2096:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 450,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2125:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 451,
																"name": "_beta",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "2129:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 448,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2109:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2118:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "2109:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2109:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "2096:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "2096:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 456,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "2154:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e205f626574612a692a2a5f616c7068612e",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2160:72:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\""
															},
															"value": "Number overflow occurs when calculate ticket price in _beta*i**_alpha."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\""
															}
														],
														"id": 455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "2146:87:1"
											},
											{
												"expression": {
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 460,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "2247:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 461,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2253:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 462,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2246:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 465,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2275:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 466,
																"name": "_decimal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "2279:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 463,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2259:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2268:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "2259:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2259:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "2246:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "2246:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "2307:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e20285f626574612f5f64656e6f6d696e61746f722a692a2a5f616c706861292a5f646563696d616c2e",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2313:96:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b98a017124e80b996a0154f558a4f6a00ad337f53ce48f54aff57606e471fad4",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*_decimal.\""
															},
															"value": "Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*_decimal."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b98a017124e80b996a0154f558a4f6a00ad337f53ce48f54aff57606e471fad4",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*_decimal.\""
															}
														],
														"id": 470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2299:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2299:111:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "2299:111:1"
											},
											{
												"expression": {
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 475,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "2424:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 476,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2430:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 477,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2423:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 480,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2452:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 481,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "2456:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 478,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2436:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2445:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "2436:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2436:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "2423:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "2423:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 486,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "2488:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e205f626574612f5f64656e6f6d696e61746f722a692a2a5f616c7068612e",
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2494:85:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\""
															},
															"value": "Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2480:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2480:100:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "2480:100:1"
											},
											{
												"expression": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 490,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "2602:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 491,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2608:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 492,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2601:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 495,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2630:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 496,
																"name": "_gamma",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "2634:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 493,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2614:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2623:6:1",
															"memberName": "tryAdd",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "2614:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2614:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "2601:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "2601:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 501,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "2660:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e205f626574612f5f64656e6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2666:93:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\""
															},
															"value": "Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2652:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2652:108:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "2652:108:1"
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "isMonopolyPenalty",
														"nameLocation": "2865:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 615,
														"src": "2860:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 505,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2860:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"nodeType": "VariableDeclarationStatement",
												"src": "2860:22:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 508,
															"name": "firstGrpId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2896:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "30",
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2910:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2896:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 511,
															"name": "SecondGrpId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "2915:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "30",
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2930:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2915:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2896:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "firstGrpId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "3162:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3176:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3162:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 535,
																"name": "SecondGrpId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "3181:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "30",
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3195:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3181:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3162:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 558,
														"nodeType": "Block",
														"src": "3402:52:1",
														"statements": [
															{
																"expression": {
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 554,
																		"name": "isMonopolyPenalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 506,
																		"src": "3417:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "66616c7365",
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3437:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "3417:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 557,
																"nodeType": "ExpressionStatement",
																"src": "3417:25:1"
															}
														]
													},
													"id": 559,
													"nodeType": "IfStatement",
													"src": "3158:296:1",
													"trueBody": {
														"id": 553,
														"nodeType": "Block",
														"src": "3197:191:1",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 539,
																		"name": "firstGrpPeopleNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "3215:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 540,
																		"name": "_v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "3235:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3215:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 551,
																	"nodeType": "Block",
																	"src": "3317:60:1",
																	"statements": [
																		{
																			"expression": {
																				"id": 549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 547,
																					"name": "isMonopolyPenalty",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 506,
																					"src": "3336:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "66616c7365",
																					"id": 548,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3356:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "false"
																				},
																				"src": "3336:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 550,
																			"nodeType": "ExpressionStatement",
																			"src": "3336:25:1"
																		}
																	]
																},
																"id": 552,
																"nodeType": "IfStatement",
																"src": "3212:165:1",
																"trueBody": {
																	"id": 546,
																	"nodeType": "Block",
																	"src": "3239:59:1",
																	"statements": [
																		{
																			"expression": {
																				"id": 544,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 542,
																					"name": "isMonopolyPenalty",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 506,
																					"src": "3258:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "74727565",
																					"id": 543,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3278:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"src": "3258:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 545,
																			"nodeType": "ExpressionStatement",
																			"src": "3258:24:1"
																		}
																	]
																}
															}
														]
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "2893:561:1",
												"trueBody": {
													"id": 531,
													"nodeType": "Block",
													"src": "2932:211:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 515,
																		"name": "firstGrpPeopleNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "2950:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 516,
																		"name": "secondGrpPeopleNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "2970:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2950:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 518,
																	"name": "_v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "2991:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2950:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 529,
																"nodeType": "Block",
																"src": "3072:60:1",
																"statements": [
																	{
																		"expression": {
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 525,
																				"name": "isMonopolyPenalty",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "3091:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3111:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "3091:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 528,
																		"nodeType": "ExpressionStatement",
																		"src": "3091:25:1"
																	}
																]
															},
															"id": 530,
															"nodeType": "IfStatement",
															"src": "2947:185:1",
															"trueBody": {
																"id": 524,
																"nodeType": "Block",
																"src": "2994:59:1",
																"statements": [
																	{
																		"expression": {
																			"id": 522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 520,
																				"name": "isMonopolyPenalty",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "3013:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 521,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3033:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "3013:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 523,
																		"nodeType": "ExpressionStatement",
																		"src": "3013:24:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"id": 561,
													"name": "isMonopolyPenalty",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 506,
													"src": "3470:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 612,
												"nodeType": "IfStatement",
												"src": "3466:665:1",
												"trueBody": {
													"id": 611,
													"nodeType": "Block",
													"src": "3488:643:1",
													"statements": [
														{
															"assignments": [
																563
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 563,
																	"mutability": "mutable",
																	"name": "extraFee",
																	"nameLocation": "3511:8:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 611,
																	"src": "3503:16:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 562,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3503:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 565,
															"initialValue": {
																"hexValue": "30",
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3522:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3503:20:1"
														},
														{
															"expression": {
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 566,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "3539:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"id": 567,
																			"name": "extraFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 563,
																			"src": "3545:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 568,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "3538:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 571,
																			"name": "totalRewardPool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "3573:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 572,
																			"name": "_p",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 351,
																			"src": "3590:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 569,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "3557:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3566:6:1",
																		"memberName": "tryMul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 104,
																		"src": "3557:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																		}
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3557:36:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"src": "3538:55:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 575,
															"nodeType": "ExpressionStatement",
															"src": "3538:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 577,
																		"name": "flag",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "3616:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61672c20657874726146656529203d20536166654d6174682e7472794d756c28746f74616c526577617264506f6f6c2c205f7029",
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3622:85:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5f6addb26863066f4fc9b23aba533f4fdd42a896e1187d8b37bf8aa1dfd5adc6",
																			"typeString": "literal_string \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\""
																		},
																		"value": "Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5f6addb26863066f4fc9b23aba533f4fdd42a896e1187d8b37bf8aa1dfd5adc6",
																			"typeString": "literal_string \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\""
																		}
																	],
																	"id": 576,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3608:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3608:100:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 580,
															"nodeType": "ExpressionStatement",
															"src": "3608:100:1"
														},
														{
															"expression": {
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 581,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "3724:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"id": 582,
																			"name": "extraFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 563,
																			"src": "3730:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 583,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "3723:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 586,
																			"name": "extraFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 563,
																			"src": "3758:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 587,
																			"name": "_denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "3768:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 584,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "3742:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3751:6:1",
																		"memberName": "tryDiv",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 132,
																		"src": "3742:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																		}
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3742:39:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"src": "3723:58:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 590,
															"nodeType": "ExpressionStatement",
															"src": "3723:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "flag",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "3804:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61672c20657874726146656529203d20536166654d6174682e7472794469762865787472614665652c205f64656e6f6d696e61746f7229",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3810:88:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dc71b2050d303ab0cccf48d4e0bfdb8bc2c6920659efc90f83709c3a3bfa2051",
																			"typeString": "literal_string \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\""
																		},
																		"value": "Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_dc71b2050d303ab0cccf48d4e0bfdb8bc2c6920659efc90f83709c3a3bfa2051",
																			"typeString": "literal_string \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\""
																		}
																	],
																	"id": 591,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3796:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3796:103:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 595,
															"nodeType": "ExpressionStatement",
															"src": "3796:103:1"
														},
														{
															"expression": {
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 596,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "3915:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"id": 597,
																			"name": "tp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 415,
																			"src": "3921:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 598,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "3914:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 601,
																			"name": "tp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 415,
																			"src": "3943:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 602,
																			"name": "extraFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 563,
																			"src": "3947:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 599,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "3927:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3936:6:1",
																		"memberName": "tryAdd",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 34,
																		"src": "3927:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																		}
																	},
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3927:29:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"src": "3914:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 605,
															"nodeType": "ExpressionStatement",
															"src": "3914:42:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 607,
																		"name": "flag",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "3979:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61672c20747029203d20536166654d6174682e7472794164642874702c20657874726146656529",
																		"id": 608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3985:72:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9925b897b1b5e7f46ce753efc960858b0d7ed723178392dae59a70457210994d",
																			"typeString": "literal_string \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\""
																		},
																		"value": "Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9925b897b1b5e7f46ce753efc960858b0d7ed723178392dae59a70457210994d",
																			"typeString": "literal_string \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\""
																		}
																	],
																	"id": 606,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3971:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3971:87:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 610,
															"nodeType": "ExpressionStatement",
															"src": "3971:87:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 613,
													"name": "tp",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 415,
													"src": "4150:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 402,
												"id": 614,
												"nodeType": "Return",
												"src": "4143:9:1"
											}
										]
									},
									"functionSelector": "9b49380b",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketPrice",
									"nameLocation": "1494:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "ith",
												"nameLocation": "1524:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1516:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1516:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "totalRewardPool",
												"nameLocation": "1547:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1539:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "firstGrpId",
												"nameLocation": "1580:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1573:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 391,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1573:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "SecondGrpId",
												"nameLocation": "1608:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1601:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 393,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1601:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "firstGrpPeopleNum",
												"nameLocation": "1638:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1630:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "secondGrpPeopleNum",
												"nameLocation": "1674:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1666:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1505:194:1"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1735:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1727:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1727:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:15:1"
									},
									"scope": 944,
									"src": "1485:2675:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "4259:371:1",
										"statements": [
											{
												"assignments": [
													624
												],
												"declarations": [
													{
														"constant": false,
														"id": 624,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "4330:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 663,
														"src": "4325:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 623,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4325:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 626,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4337:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4325:17:1"
											},
											{
												"assignments": [
													628
												],
												"declarations": [
													{
														"constant": false,
														"id": 628,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "4361:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 663,
														"src": "4353:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 627,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4353:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"hexValue": "30",
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4365:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4353:13:1"
											},
											{
												"expression": {
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 631,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "4378:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 632,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4384:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 633,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4377:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 636,
																"name": "ticketIncome",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "4405:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 637,
																"name": "_b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "4419:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 634,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "4389:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4398:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "4389:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4389:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4377:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "4377:45:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 642,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "4441:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c6f772e",
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4447:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572",
																"typeString": "literal_string \"[ticketIncome2RewardPool] overflow.\""
															},
															"value": "[ticketIncome2RewardPool] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572",
																"typeString": "literal_string \"[ticketIncome2RewardPool] overflow.\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4433:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4433:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "4433:52:1"
											},
											{
												"expression": {
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 646,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "4497:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 647,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4503:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 648,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4496:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 651,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4524:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 652,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "4527:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 649,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "4508:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4517:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "4508:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4508:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4496:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "4496:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "4559:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c6f772e",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4565:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572",
																"typeString": "literal_string \"[ticketIncome2RewardPool] overflow.\""
															},
															"value": "[ticketIncome2RewardPool] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572",
																"typeString": "literal_string \"[ticketIncome2RewardPool] overflow.\""
															}
														],
														"id": 656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4551:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4551:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "4551:52:1"
											},
											{
												"expression": {
													"id": 661,
													"name": "m",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 628,
													"src": "4621:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 622,
												"id": 662,
												"nodeType": "Return",
												"src": "4614:8:1"
											}
										]
									},
									"functionSelector": "e6ca2a8d",
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketIncome2RewardPool",
									"nameLocation": "4177:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "ticketIncome",
												"nameLocation": "4209:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4201:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4201:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4200:22:1"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "4252:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "4244:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4244:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4243:15:1"
									},
									"scope": 944,
									"src": "4168:462:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "4730:373:1",
										"statements": [
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "4801:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 711,
														"src": "4796:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 671,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4796:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 674,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4808:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4796:17:1"
											},
											{
												"assignments": [
													676
												],
												"declarations": [
													{
														"constant": false,
														"id": 676,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "4832:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 711,
														"src": "4824:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 675,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4824:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 678,
												"initialValue": {
													"hexValue": "30",
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4836:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4824:13:1"
											},
											{
												"expression": {
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 679,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "4849:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 680,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "4855:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 681,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4848:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 684,
																"name": "ticketIncome",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "4876:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 685,
																"name": "_a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "4890:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 682,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "4860:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4869:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "4860:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4860:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4848:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "4848:45:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 690,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "4912:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704c65616465725d206f766572666c6f772e",
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4918:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1",
																"typeString": "literal_string \"[ticketIncome2GroupLeader] overflow.\""
															},
															"value": "[ticketIncome2GroupLeader] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1",
																"typeString": "literal_string \"[ticketIncome2GroupLeader] overflow.\""
															}
														],
														"id": 689,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4904:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4904:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "4904:53:1"
											},
											{
												"expression": {
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 694,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "4969:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 695,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "4975:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 696,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4968:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 699,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "4996:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 700,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "4999:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 697,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "4980:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4989:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "4980:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4968:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "4968:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "5031:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704c65616465725d206f766572666c6f772e",
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5037:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1",
																"typeString": "literal_string \"[ticketIncome2GroupLeader] overflow.\""
															},
															"value": "[ticketIncome2GroupLeader] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1",
																"typeString": "literal_string \"[ticketIncome2GroupLeader] overflow.\""
															}
														],
														"id": 704,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5023:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5023:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "5023:53:1"
											},
											{
												"expression": {
													"id": 709,
													"name": "m",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 676,
													"src": "5094:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 670,
												"id": 710,
												"nodeType": "Return",
												"src": "5087:8:1"
											}
										]
									},
									"functionSelector": "2e26fb4a",
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketIncome2GroupLeader",
									"nameLocation": "4647:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "ticketIncome",
												"nameLocation": "4680:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "4672:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4672:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4671:22:1"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "4723:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "4715:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4714:15:1"
									},
									"scope": 944,
									"src": "4638:465:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "5219:771:1",
										"statements": [
											{
												"assignments": [
													722
												],
												"declarations": [
													{
														"constant": false,
														"id": 722,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "5321:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 810,
														"src": "5316:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 721,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5316:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 724,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5328:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:17:1"
											},
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "5352:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 810,
														"src": "5344:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 725,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 728,
												"initialValue": {
													"hexValue": "30",
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5356:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:13:1"
											},
											{
												"assignments": [
													730
												],
												"declarations": [
													{
														"constant": false,
														"id": 730,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "5376:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 810,
														"src": "5368:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 729,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 732,
												"initialValue": {
													"hexValue": "30",
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5380:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5368:13:1"
											},
											{
												"expression": {
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 733,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "5393:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 734,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5399:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "5392:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 738,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "5420:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 739,
																"name": "_a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "5434:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 736,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "5404:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5413:6:1",
															"memberName": "trySub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 62,
															"src": "5404:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5404:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "5392:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "5392:45:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 744,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "5456:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666c6f772e",
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5462:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															},
															"value": "[ticketIncome2GroupMember] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															}
														],
														"id": 743,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5448:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5448:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "5448:53:1"
											},
											{
												"expression": {
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 748,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "5513:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 749,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5519:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 750,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "5512:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 753,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5540:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 754,
																"name": "_b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "5543:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 751,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "5524:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5533:6:1",
															"memberName": "trySub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 62,
															"src": "5524:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5524:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "5512:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "5512:34:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 759,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "5565:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666c6f772e",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5571:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															},
															"value": "[ticketIncome2GroupMember] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															}
														],
														"id": 758,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5557:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5557:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "5557:53:1"
											},
											{
												"expression": {
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 763,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "5622:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 764,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "5628:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 765,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "5621:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 768,
																"name": "ticketIncome",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "5649:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 769,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5663:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 766,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "5633:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5642:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "5633:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5633:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "5621:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "5621:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 774,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "5684:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666c6f772e",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5690:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															},
															"value": "[ticketIncome2GroupMember] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															}
														],
														"id": 773,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5676:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "5676:53:1"
											},
											{
												"expression": {
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 778,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "5741:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 779,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "5747:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 780,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "5740:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 783,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "5768:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 784,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "5771:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 781,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "5752:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5761:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "5752:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5752:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "5740:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "5740:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "5803:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666c6f772e",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5809:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															},
															"value": "[ticketIncome2GroupMember] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															}
														],
														"id": 788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5795:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5795:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "5795:53:1"
											},
											{
												"expression": {
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 793,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "5860:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 794,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "5866:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 795,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "5859:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 798,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "5887:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 799,
																"name": "memNum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "5890:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 796,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "5871:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5880:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "5871:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5871:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "5859:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "5859:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 804,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "5916:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666c6f772e",
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5922:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															},
															"value": "[ticketIncome2GroupMember] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															}
														],
														"id": 803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5908:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5908:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "5908:53:1"
											},
											{
												"expression": {
													"id": 808,
													"name": "m",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 726,
													"src": "5981:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 720,
												"id": 809,
												"nodeType": "Return",
												"src": "5974:8:1"
											}
										]
									},
									"functionSelector": "84105419",
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketIncome2GroupMember",
									"nameLocation": "5120:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "ticketIncome",
												"nameLocation": "5153:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "5145:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5145:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "memNum",
												"nameLocation": "5175:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "5167:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5167:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5144:38:1"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "5212:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "5204:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5203:15:1"
									},
									"scope": 944,
									"src": "5111:879:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "6164:369:1",
										"statements": [
											{
												"assignments": [
													819
												],
												"declarations": [
													{
														"constant": false,
														"id": 819,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "6234:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 858,
														"src": "6229:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 818,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6229:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6241:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6229:17:1"
											},
											{
												"assignments": [
													823
												],
												"declarations": [
													{
														"constant": false,
														"id": 823,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "6265:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 858,
														"src": "6257:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6257:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 825,
												"initialValue": {
													"hexValue": "30",
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6269:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6257:13:1"
											},
											{
												"expression": {
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 826,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "6282:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 827,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "6288:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 828,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "6281:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 831,
																"name": "totalReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "6309:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 832,
																"name": "_c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "6322:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 829,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "6293:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6302:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "6293:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6293:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "6281:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "6281:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 837,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "6344:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b726577617264506f6f6c3247726f75704c65616465725d206f766572666c6f772e",
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6350:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3cff605ba55f75487b824dcbd803532d720584314b3ad9db95f041ab0b3bfd0a",
																"typeString": "literal_string \"[rewardPool2GroupLeader] overflow.\""
															},
															"value": "[rewardPool2GroupLeader] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3cff605ba55f75487b824dcbd803532d720584314b3ad9db95f041ab0b3bfd0a",
																"typeString": "literal_string \"[rewardPool2GroupLeader] overflow.\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6336:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6336:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "6336:51:1"
											},
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 841,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "6399:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 842,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "6405:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 843,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "6398:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 846,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "6426:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 847,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "6429:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 844,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "6410:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6419:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "6410:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6410:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "6398:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "6398:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 852,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "6461:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b726577617264506f6f6c3247726f75704c65616465725d206f766572666c6f772e",
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6467:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3cff605ba55f75487b824dcbd803532d720584314b3ad9db95f041ab0b3bfd0a",
																"typeString": "literal_string \"[rewardPool2GroupLeader] overflow.\""
															},
															"value": "[rewardPool2GroupLeader] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3cff605ba55f75487b824dcbd803532d720584314b3ad9db95f041ab0b3bfd0a",
																"typeString": "literal_string \"[rewardPool2GroupLeader] overflow.\""
															}
														],
														"id": 851,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6453:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6453:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "6453:51:1"
											},
											{
												"expression": {
													"id": 856,
													"name": "m",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 823,
													"src": "6524:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 817,
												"id": 857,
												"nodeType": "Return",
												"src": "6517:8:1"
											}
										]
									},
									"functionSelector": "beb19a21",
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPool2GroupLeader",
									"nameLocation": "6084:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "totalReward",
												"nameLocation": "6115:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "6107:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6107:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6106:21:1"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "6157:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "6149:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:15:1"
									},
									"scope": 944,
									"src": "6075:458:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "6646:648:1",
										"statements": [
											{
												"assignments": [
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "6743:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "6738:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 868,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6738:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 871,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6750:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6738:17:1"
											},
											{
												"assignments": [
													873
												],
												"declarations": [
													{
														"constant": false,
														"id": 873,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "6774:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "6766:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 872,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6766:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 875,
												"initialValue": {
													"hexValue": "30",
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6778:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6766:13:1"
											},
											{
												"assignments": [
													877
												],
												"declarations": [
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "6798:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "6790:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 876,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6790:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 879,
												"initialValue": {
													"hexValue": "30",
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6802:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6790:13:1"
											},
											{
												"expression": {
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 880,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "6815:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 881,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "6821:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 882,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "6814:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 885,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "6842:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 886,
																"name": "_c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "6856:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 883,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "6826:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6835:6:1",
															"memberName": "trySub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 62,
															"src": "6826:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6826:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "6814:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "6814:45:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "6878:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b726577617264506f6f6c3247726f75704d656d6265725d206f766572666c6f772e",
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6884:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8dd8da3065c345dba015a0a7d1ccac008e84f920fbdb2fcfb1c7817423d77cb0",
																"typeString": "literal_string \"[rewardPool2GroupMember] overflow.\""
															},
															"value": "[rewardPool2GroupMember] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8dd8da3065c345dba015a0a7d1ccac008e84f920fbdb2fcfb1c7817423d77cb0",
																"typeString": "literal_string \"[rewardPool2GroupMember] overflow.\""
															}
														],
														"id": 890,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6870:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6870:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "6870:51:1"
											},
											{
												"expression": {
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 895,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "6933:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 896,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "6939:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 897,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "6932:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 900,
																"name": "totalReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 861,
																"src": "6960:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 901,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "6973:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 898,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "6944:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6953:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "6944:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6944:31:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "6932:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "6932:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 906,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "6994:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b726577617264506f6f6c3247726f75704d656d6265725d206f766572666c6f772e",
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7000:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8dd8da3065c345dba015a0a7d1ccac008e84f920fbdb2fcfb1c7817423d77cb0",
																"typeString": "literal_string \"[rewardPool2GroupMember] overflow.\""
															},
															"value": "[rewardPool2GroupMember] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8dd8da3065c345dba015a0a7d1ccac008e84f920fbdb2fcfb1c7817423d77cb0",
																"typeString": "literal_string \"[rewardPool2GroupMember] overflow.\""
															}
														],
														"id": 905,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6986:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6986:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "6986:51:1"
											},
											{
												"expression": {
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 910,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "7049:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 911,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "7055:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 912,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "7048:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 915,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "7076:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 916,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "7079:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 913,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "7060:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7069:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "7060:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7060:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "7048:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "7048:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 921,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "7111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b726577617264506f6f6c3247726f75704d656d6265725d206f766572666c6f772e",
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7117:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8dd8da3065c345dba015a0a7d1ccac008e84f920fbdb2fcfb1c7817423d77cb0",
																"typeString": "literal_string \"[rewardPool2GroupMember] overflow.\""
															},
															"value": "[rewardPool2GroupMember] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8dd8da3065c345dba015a0a7d1ccac008e84f920fbdb2fcfb1c7817423d77cb0",
																"typeString": "literal_string \"[rewardPool2GroupMember] overflow.\""
															}
														],
														"id": 920,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7103:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7103:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "7103:51:1"
											},
											{
												"expression": {
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 925,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "7166:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 926,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "7172:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 927,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "7165:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 930,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "7193:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 931,
																"name": "memNum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "7196:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 928,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "7177:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7186:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "7177:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7177:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "7165:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "7165:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 936,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "7222:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b726577617264506f6f6c3247726f75704d656d6265725d206f766572666c6f772e",
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7228:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8dd8da3065c345dba015a0a7d1ccac008e84f920fbdb2fcfb1c7817423d77cb0",
																"typeString": "literal_string \"[rewardPool2GroupMember] overflow.\""
															},
															"value": "[rewardPool2GroupMember] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8dd8da3065c345dba015a0a7d1ccac008e84f920fbdb2fcfb1c7817423d77cb0",
																"typeString": "literal_string \"[rewardPool2GroupMember] overflow.\""
															}
														],
														"id": 935,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7214:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7214:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "7214:51:1"
											},
											{
												"expression": {
													"id": 940,
													"name": "m",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 873,
													"src": "7285:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 867,
												"id": 941,
												"nodeType": "Return",
												"src": "7278:8:1"
											}
										]
									},
									"functionSelector": "3ed12ab7",
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPool2GroupMember",
									"nameLocation": "6550:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "totalReward",
												"nameLocation": "6581:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "6573:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "memNum",
												"nameLocation": "6602:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "6594:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6594:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6572:37:1"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "6639:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "6631:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6630:15:1"
									},
									"scope": 944,
									"src": "6541:753:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 945,
							"src": "123:7174:1",
							"usedErrors": []
						}
					],
					"src": "33:7268:1"
				},
				"id": 1
			}
		}
	}
}