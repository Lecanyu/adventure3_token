{
	"id": "6237d9a19db2c13e7db594fb63e1456d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"degen/DegenMoneyLib.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.6;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n\r\nlibrary DegenMoneyLib {\r\n    //****************\r\n    // PARAMS\r\n    //****************\r\n    uint256 constant private _taskCreateMinFee = 10 * 10**18;\r\n    uint256 constant private _groupCreateMinFee = 1 * 10**18;\r\n    uint256 constant private _a = 3;        // 门票金额给队长的比例（%）\r\n    uint256 constant private _b = 50;       // 门票金额投入奖池的比例（%）\r\n    uint256 constant private _c = 10;       // 队长的最终奖池收益比例（%）\r\n    uint256 constant private _p = 10;       // MonopolyPenalty比例（%）\r\n\r\n    uint256 constant private _alpha = 2;\r\n    uint256 constant private _beta = 10;               // beta = _beta / _denominator\r\n    uint256 constant private _gamma = 0.01 * 10**18;    // absolute init ticket price threshold\r\n    uint256 constant private _denominator = 100;\r\n\r\n    function taskCreateMinFee() public pure returns (uint256 money) {\r\n        return _taskCreateMinFee;\r\n    }\r\n\r\n    function groupCreateMinFee() public pure returns (uint256 money) {\r\n        return _groupCreateMinFee;\r\n    }\r\n\r\n    function ticketPrice(uint256 ith, uint256 totalRewardPool, bool isMonopolyPenalty) public pure returns (uint256 price) {\r\n        require(_alpha <= 5, \"To avoid overflow, alpha <= 5 only\");\r\n\r\n        bool flag = true;\r\n        uint256 tp = 1;\r\n        \r\n        for (uint i=0; i < _alpha; i++) {\r\n            (flag, tp) = SafeMath.tryMul(tp, ith);\r\n            require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\");\r\n        }\r\n\r\n        (flag, tp) = SafeMath.tryMul(tp, _beta);\r\n        require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\");\r\n\r\n        (flag, tp) = SafeMath.tryDiv(tp, _denominator);\r\n        require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\");\r\n\r\n        (flag, tp) = SafeMath.tryMul(tp, 10**18);\r\n        require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\");\r\n\r\n        (flag, tp) = SafeMath.tryAdd(tp, _gamma);\r\n        require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\");\r\n\r\n        if (isMonopolyPenalty){\r\n            uint256 extraFee = 0;\r\n            (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p);\r\n            require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\");\r\n            (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator);\r\n            require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\");\r\n            (flag, tp) = SafeMath.tryAdd(tp, extraFee);\r\n            require(flag, \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\");\r\n        }\r\n\r\n        return tp;\r\n    }\r\n\r\n    function ticketIncome2RewardPool(uint256 ticketIncome) public pure returns (uint256 money) {\r\n        bool flag = false;\r\n        uint256 m = 0;\r\n        (flag, m) = SafeMath.tryMul(ticketIncome, _b);\r\n        require(flag, \"[ticketIncome2RewardPool] overflow.\");\r\n        (flag, m) = SafeMath.tryDiv(m, _denominator);\r\n        require(flag, \"[ticketIncome2RewardPool] overflow.\");\r\n        return m;\r\n    }\r\n\r\n    function ticketIncome2GroupLeader(uint256 ticketIncome) public pure returns (uint256 money) {\r\n        bool flag = false;\r\n        uint256 m = 0;\r\n        (flag, m) = SafeMath.tryMul(ticketIncome, _a);\r\n        require(flag, \"[ticketIncome2GroupLeader] overflow.\");\r\n        (flag, m) = SafeMath.tryDiv(m, _denominator);\r\n        require(flag, \"[ticketIncome2GroupLeader] overflow.\");\r\n        return m;\r\n    }\r\n\r\n    function ticketIncome2GroupMember(uint256 ticketIncome, uint256 memNum) public pure returns (uint256 money) {\r\n        uint256 c = _denominator - _a - _b;\r\n\r\n        bool flag = false;\r\n        uint256 m = 0;\r\n        (flag, m) = SafeMath.tryMul(ticketIncome, c);\r\n        require(flag, \"[ticketIncome2GroupMember] overflow.\");\r\n        (flag, m) = SafeMath.tryDiv(m, _denominator);\r\n        require(flag, \"[ticketIncome2GroupMember] overflow.\");\r\n        (flag, m) = SafeMath.tryDiv(m, memNum);\r\n        require(flag, \"[ticketIncome2GroupMember] overflow.\");\r\n\r\n        return m;\r\n    }\r\n\r\n}\r\n\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xEE DUP7 0xE8 KECCAK256 DUP14 0xE7 0x4B EXTCODEHASH LOG4 0xB1 PUSH16 0x3B51DCF7FAC733127FC4F9E663FD4716 DUP12 SWAP4 DUP2 DIV PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xEE DUP7 0xE8 KECCAK256 DUP14 0xE7 0x4B EXTCODEHASH LOG4 0xB1 PUSH16 0x3B51DCF7FAC733127FC4F9E663FD4716 DUP12 SWAP4 DUP2 DIV PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"degen/DegenMoneyLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"degen/DegenMoneyLib.sol": {
				"DegenMoneyLib": {
					"abi": [
						{
							"inputs": [],
							"name": "groupCreateMinFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taskCreateMinFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ticketIncome",
									"type": "uint256"
								}
							],
							"name": "ticketIncome2GroupLeader",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ticketIncome",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memNum",
									"type": "uint256"
								}
							],
							"name": "ticketIncome2GroupMember",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ticketIncome",
									"type": "uint256"
								}
							],
							"name": "ticketIncome2RewardPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ith",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalRewardPool",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isMonopolyPenalty",
									"type": "bool"
								}
							],
							"name": "ticketPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"degen/DegenMoneyLib.sol\":123:4392  library DegenMoneyLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"degen/DegenMoneyLib.sol\":123:4392  library DegenMoneyLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x26d0a334\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2e26fb4a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x627ca922\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x84105419\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x91096a3c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe6ca2a8d\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"degen/DegenMoneyLib.sol\":1077:1186  function groupCreateMinFee() public pure returns (uint256 money) {... */\n    tag_2:\n        /* \"degen/DegenMoneyLib.sol\":324:334  1 * 10**18 */\n      0x0de0b6b3a7640000\n        /* \"degen/DegenMoneyLib.sol\":1077:1186  function groupCreateMinFee() public pure returns (uint256 money) {... */\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":168:193   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":156:158   */\n      0x20\n        /* \"#utility.yul\":141:159   */\n      add\n        /* \"degen/DegenMoneyLib.sol\":1077:1186  function groupCreateMinFee() public pure returns (uint256 money) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"degen/DegenMoneyLib.sol\":3382:3792  function ticketIncome2GroupLeader(uint256 ticketIncome) public pure returns (uint256 money) {... */\n    tag_3:\n      tag_8\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":1194:2959  function ticketPrice(uint256 ith, uint256 totalRewardPool, bool isMonopolyPenalty) public pure returns (uint256 price) {... */\n    tag_4:\n      tag_8\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":3800:4387  function ticketIncome2GroupMember(uint256 ticketIncome, uint256 memNum) public pure returns (uint256 money) {... */\n    tag_5:\n      tag_8\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":962:1069  function taskCreateMinFee() public pure returns (uint256 money) {... */\n    tag_6:\n        /* \"degen/DegenMoneyLib.sol\":260:271  10 * 10**18 */\n      0x8ac7230489e80000\n        /* \"degen/DegenMoneyLib.sol\":962:1069  function taskCreateMinFee() public pure returns (uint256 money) {... */\n      jump(tag_8)\n        /* \"degen/DegenMoneyLib.sol\":2967:3374  function ticketIncome2RewardPool(uint256 ticketIncome) public pure returns (uint256 money) {... */\n    tag_7:\n      tag_8\n      tag_31\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":3382:3792  function ticketIncome2GroupLeader(uint256 ticketIncome) public pure returns (uint256 money) {... */\n    tag_15:\n        /* \"degen/DegenMoneyLib.sol\":3459:3472  uint256 money */\n      0x00\n      dup1\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":3549:3582  SafeMath.tryMul(ticketIncome, _a) */\n      tag_36\n        /* \"degen/DegenMoneyLib.sol\":3565:3577  ticketIncome */\n      dup5\n        /* \"degen/DegenMoneyLib.sol\":371:372  3 */\n      0x03\n        /* \"degen/DegenMoneyLib.sol\":3549:3564  SafeMath.tryMul */\n      tag_37\n        /* \"degen/DegenMoneyLib.sol\":3549:3582  SafeMath.tryMul(ticketIncome, _a) */\n      jump\t// in\n    tag_36:\n        /* \"degen/DegenMoneyLib.sol\":3537:3582  (flag, m) = SafeMath.tryMul(ticketIncome, _a) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":3593:3646  require(flag, \"[ticketIncome2GroupLeader] overflow.\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"degen/DegenMoneyLib.sol\":3669:3701  SafeMath.tryDiv(m, _denominator) */\n      tag_41\n        /* \"degen/DegenMoneyLib.sol\":3685:3686  m */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":950:953  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":3669:3684  SafeMath.tryDiv */\n      tag_42\n        /* \"degen/DegenMoneyLib.sol\":3669:3701  SafeMath.tryDiv(m, _denominator) */\n      jump\t// in\n    tag_41:\n        /* \"degen/DegenMoneyLib.sol\":3657:3701  (flag, m) = SafeMath.tryDiv(m, _denominator) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":3712:3765  require(flag, \"[ticketIncome2GroupLeader] overflow.\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_43:\n        /* \"degen/DegenMoneyLib.sol\":3783:3784  m */\n      swap4\n        /* \"degen/DegenMoneyLib.sol\":3382:3792  function ticketIncome2GroupLeader(uint256 ticketIncome) public pure returns (uint256 money) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"degen/DegenMoneyLib.sol\":1194:2959  function ticketPrice(uint256 ith, uint256 totalRewardPool, bool isMonopolyPenalty) public pure returns (uint256 price) {... */\n    tag_20:\n        /* \"degen/DegenMoneyLib.sol\":1298:1311  uint256 price */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":1407:1411  true */\n      0x01\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":1395:1404  bool flag */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":1457:1649  for (uint i=0; i < _alpha; i++) {... */\n    tag_49:\n        /* \"degen/DegenMoneyLib.sol\":718:719  2 */\n      0x02\n        /* \"degen/DegenMoneyLib.sol\":1472:1473  i */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1472:1482  i < _alpha */\n      lt\n        /* \"degen/DegenMoneyLib.sol\":1457:1649  for (uint i=0; i < _alpha; i++) {... */\n      iszero\n      tag_50\n      jumpi\n        /* \"degen/DegenMoneyLib.sol\":1517:1541  SafeMath.tryMul(tp, ith) */\n      tag_52\n        /* \"degen/DegenMoneyLib.sol\":1533:1535  tp */\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":1537:1540  ith */\n      dup9\n        /* \"degen/DegenMoneyLib.sol\":1517:1532  SafeMath.tryMul */\n      tag_37\n        /* \"degen/DegenMoneyLib.sol\":1517:1541  SafeMath.tryMul(tp, ith) */\n      jump\t// in\n    tag_52:\n        /* \"degen/DegenMoneyLib.sol\":1504:1541  (flag, tp) = SafeMath.tryMul(tp, ith) */\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":1556:1637  require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\") */\n      tag_53\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2066:2068   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":1556:1637  require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2048:2069   */\n      mstore\n        /* \"#utility.yul\":2085:2103   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2078:2108   */\n      swap2\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":2124:2142   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2117:2179   */\n      mstore\n        /* \"#utility.yul\":2215:2249   */\n      0x756c617465207469636b657420707269636520696e20692a2a5f616c7068612e\n        /* \"#utility.yul\":2195:2213   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2188:2250   */\n      mstore\n        /* \"#utility.yul\":2267:2286   */\n      0x84\n      add\n        /* \"degen/DegenMoneyLib.sol\":1556:1637  require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\") */\n      tag_39\n        /* \"#utility.yul\":1864:2292   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":1556:1637  require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\") */\n    tag_53:\n        /* \"degen/DegenMoneyLib.sol\":1484:1487  i++ */\n      dup1\n      tag_56\n      dup2\n      tag_57\n      jump\t// in\n    tag_56:\n      swap2\n      pop\n      pop\n        /* \"degen/DegenMoneyLib.sol\":1457:1649  for (uint i=0; i < _alpha; i++) {... */\n      jump(tag_49)\n    tag_50:\n      pop\n        /* \"degen/DegenMoneyLib.sol\":1674:1700  SafeMath.tryMul(tp, _beta) */\n      tag_58\n        /* \"degen/DegenMoneyLib.sol\":1690:1692  tp */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":759:761  10 */\n      0x0a\n        /* \"degen/DegenMoneyLib.sol\":1674:1689  SafeMath.tryMul */\n      tag_37\n        /* \"degen/DegenMoneyLib.sol\":1674:1700  SafeMath.tryMul(tp, _beta) */\n      jump\t// in\n    tag_58:\n        /* \"degen/DegenMoneyLib.sol\":1661:1700  (flag, tp) = SafeMath.tryMul(tp, _beta) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1711:1798  require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2771:2773   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":1711:1798  require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2753:2774   */\n      mstore\n        /* \"#utility.yul\":2810:2812   */\n      0x46\n        /* \"#utility.yul\":2790:2808   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2783:2813   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":2829:2847   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2822:2884   */\n      mstore\n        /* \"#utility.yul\":2920:2954   */\n      0x756c617465207469636b657420707269636520696e205f626574612a692a2a5f\n        /* \"#utility.yul\":2900:2918   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2893:2955   */\n      mstore\n      shl(0xd1, 0x30b638343097)\n        /* \"#utility.yul\":2971:2990   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":2964:3001   */\n      mstore\n        /* \"#utility.yul\":3018:3037   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":1711:1798  require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\") */\n      tag_39\n        /* \"#utility.yul\":2569:3043   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":1711:1798  require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\") */\n    tag_59:\n        /* \"degen/DegenMoneyLib.sol\":1824:1857  SafeMath.tryDiv(tp, _denominator) */\n      tag_62\n        /* \"degen/DegenMoneyLib.sol\":1840:1842  tp */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":950:953  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":1824:1839  SafeMath.tryDiv */\n      tag_42\n        /* \"degen/DegenMoneyLib.sol\":1824:1857  SafeMath.tryDiv(tp, _denominator) */\n      jump\t// in\n    tag_62:\n        /* \"degen/DegenMoneyLib.sol\":1811:1857  (flag, tp) = SafeMath.tryDiv(tp, _denominator) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1868:1968  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3250:3252   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":1868:1968  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3232:3253   */\n      mstore\n        /* \"#utility.yul\":3289:3291   */\n      0x53\n        /* \"#utility.yul\":3269:3287   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3262:3292   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":3308:3326   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3301:3363   */\n      mstore\n        /* \"#utility.yul\":3399:3433   */\n      0x756c617465207469636b657420707269636520696e205f626574612f5f64656e\n        /* \"#utility.yul\":3379:3397   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3372:3434   */\n      mstore\n      shl(0x69, 0x37b6b4b730ba37b9153495152fb0b638343097)\n        /* \"#utility.yul\":3450:3469   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":3443:3493   */\n      mstore\n        /* \"#utility.yul\":3510:3529   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":1868:1968  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\") */\n      tag_39\n        /* \"#utility.yul\":3048:3535   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":1868:1968  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\") */\n    tag_63:\n        /* \"degen/DegenMoneyLib.sol\":1994:2021  SafeMath.tryMul(tp, 10**18) */\n      tag_66\n        /* \"degen/DegenMoneyLib.sol\":2010:2012  tp */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":2014:2020  10**18 */\n      0x0de0b6b3a7640000\n        /* \"degen/DegenMoneyLib.sol\":1994:2009  SafeMath.tryMul */\n      tag_37\n        /* \"degen/DegenMoneyLib.sol\":1994:2021  SafeMath.tryMul(tp, 10**18) */\n      jump\t// in\n    tag_66:\n        /* \"degen/DegenMoneyLib.sol\":1981:2021  (flag, tp) = SafeMath.tryMul(tp, 10**18) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":2032:2141  require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3742:3744   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":2032:2141  require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3724:3745   */\n      mstore\n        /* \"#utility.yul\":3781:3783   */\n      0x5c\n        /* \"#utility.yul\":3761:3779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3754:3784   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":3800:3818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3793:3855   */\n      mstore\n        /* \"#utility.yul\":3891:3925   */\n      0x756c617465207469636b657420707269636520696e20285f626574612f5f6465\n        /* \"#utility.yul\":3871:3889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3864:3926   */\n      mstore\n        /* \"#utility.yul\":3963:3993   */\n      0x6e6f6d696e61746f722a692a2a5f616c706861292a31302a2a31382e00000000\n        /* \"#utility.yul\":3942:3961   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":3935:3994   */\n      mstore\n        /* \"#utility.yul\":4011:4030   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":2032:2141  require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\") */\n      tag_39\n        /* \"#utility.yul\":3540:4036   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":2032:2141  require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\") */\n    tag_67:\n        /* \"degen/DegenMoneyLib.sol\":2167:2194  SafeMath.tryAdd(tp, _gamma) */\n      tag_70\n        /* \"degen/DegenMoneyLib.sol\":2183:2185  tp */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":847:860  0.01 * 10**18 */\n      0x2386f26fc10000\n        /* \"degen/DegenMoneyLib.sol\":2167:2182  SafeMath.tryAdd */\n      tag_71\n        /* \"degen/DegenMoneyLib.sol\":2167:2194  SafeMath.tryAdd(tp, _gamma) */\n      jump\t// in\n    tag_70:\n        /* \"degen/DegenMoneyLib.sol\":2154:2194  (flag, tp) = SafeMath.tryAdd(tp, _gamma) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":2205:2313  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4243:4245   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":2205:2313  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4225:4246   */\n      mstore\n        /* \"#utility.yul\":4282:4284   */\n      0x5b\n        /* \"#utility.yul\":4262:4280   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4255:4285   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":4301:4319   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4294:4356   */\n      mstore\n        /* \"#utility.yul\":4392:4426   */\n      0x756c617465207469636b657420707269636520696e205f626574612f5f64656e\n        /* \"#utility.yul\":4372:4390   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4365:4427   */\n      mstore\n        /* \"#utility.yul\":4464:4493   */\n      0x6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e0000000000\n        /* \"#utility.yul\":4443:4462   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":4436:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4530   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":2205:2313  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\") */\n      tag_39\n        /* \"#utility.yul\":4041:4536   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":2205:2313  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\") */\n    tag_72:\n        /* \"degen/DegenMoneyLib.sol\":2330:2347  isMonopolyPenalty */\n      dup4\n        /* \"degen/DegenMoneyLib.sol\":2326:2930  if (isMonopolyPenalty){... */\n      iszero\n      tag_75\n      jumpi\n        /* \"degen/DegenMoneyLib.sol\":2363:2379  uint256 extraFee */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":2417:2453  SafeMath.tryMul(totalRewardPool, _p) */\n      tag_76\n        /* \"degen/DegenMoneyLib.sol\":2433:2448  totalRewardPool */\n      dup7\n        /* \"degen/DegenMoneyLib.sol\":635:637  10 */\n      0x0a\n        /* \"degen/DegenMoneyLib.sol\":2417:2432  SafeMath.tryMul */\n      tag_37\n        /* \"degen/DegenMoneyLib.sol\":2417:2453  SafeMath.tryMul(totalRewardPool, _p) */\n      jump\t// in\n    tag_76:\n        /* \"degen/DegenMoneyLib.sol\":2398:2453  (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p) */\n      swap1\n      swap4\n      pop\n      swap1\n      pop\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":2468:2568  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4743:4745   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":2468:2568  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4725:4746   */\n      mstore\n        /* \"#utility.yul\":4782:4784   */\n      0x53\n        /* \"#utility.yul\":4762:4780   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4755:4785   */\n      mstore\n        /* \"#utility.yul\":4821:4855   */\n      0x4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61\n        /* \"#utility.yul\":4801:4819   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4794:4856   */\n      mstore\n        /* \"#utility.yul\":4892:4926   */\n      0x672c20657874726146656529203d20536166654d6174682e7472794d756c2874\n        /* \"#utility.yul\":4872:4890   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4865:4927   */\n      mstore\n      shl(0x68, 0x6f74616c526577617264506f6f6c2c205f7029)\n        /* \"#utility.yul\":4943:4962   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":4936:4986   */\n      mstore\n        /* \"#utility.yul\":5003:5022   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":2468:2568  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\") */\n      tag_39\n        /* \"#utility.yul\":4541:5028   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":2468:2568  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\") */\n    tag_77:\n        /* \"degen/DegenMoneyLib.sol\":2602:2641  SafeMath.tryDiv(extraFee, _denominator) */\n      tag_80\n        /* \"degen/DegenMoneyLib.sol\":2618:2626  extraFee */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":950:953  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":2602:2617  SafeMath.tryDiv */\n      tag_42\n        /* \"degen/DegenMoneyLib.sol\":2602:2641  SafeMath.tryDiv(extraFee, _denominator) */\n      jump\t// in\n    tag_80:\n        /* \"degen/DegenMoneyLib.sol\":2583:2641  (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator) */\n      swap1\n      swap4\n      pop\n      swap1\n      pop\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":2656:2759  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5235:5237   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":2656:2759  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5217:5238   */\n      mstore\n        /* \"#utility.yul\":5274:5276   */\n      0x56\n        /* \"#utility.yul\":5254:5272   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5247:5277   */\n      mstore\n        /* \"#utility.yul\":5313:5347   */\n      0x4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61\n        /* \"#utility.yul\":5293:5311   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5286:5348   */\n      mstore\n        /* \"#utility.yul\":5384:5418   */\n      0x672c20657874726146656529203d20536166654d6174682e7472794469762865\n        /* \"#utility.yul\":5364:5382   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5357:5419   */\n      mstore\n      shl(0x50, 0x787472614665652c205f64656e6f6d696e61746f7229)\n        /* \"#utility.yul\":5435:5454   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":5428:5481   */\n      mstore\n        /* \"#utility.yul\":5498:5517   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":2656:2759  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\") */\n      tag_39\n        /* \"#utility.yul\":5033:5523   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":2656:2759  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\") */\n    tag_81:\n        /* \"degen/DegenMoneyLib.sol\":2787:2816  SafeMath.tryAdd(tp, extraFee) */\n      tag_84\n        /* \"degen/DegenMoneyLib.sol\":2803:2805  tp */\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":2807:2815  extraFee */\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":2787:2802  SafeMath.tryAdd */\n      tag_71\n        /* \"degen/DegenMoneyLib.sol\":2787:2816  SafeMath.tryAdd(tp, extraFee) */\n      jump\t// in\n    tag_84:\n        /* \"degen/DegenMoneyLib.sol\":2774:2816  (flag, tp) = SafeMath.tryAdd(tp, extraFee) */\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":2831:2918  require(flag, \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5730:5732   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":2831:2918  require(flag, \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5712:5733   */\n      mstore\n        /* \"#utility.yul\":5769:5771   */\n      0x46\n        /* \"#utility.yul\":5749:5767   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5742:5772   */\n      mstore\n        /* \"#utility.yul\":5808:5842   */\n      0x4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61\n        /* \"#utility.yul\":5788:5806   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5781:5843   */\n      mstore\n        /* \"#utility.yul\":5879:5913   */\n      0x672c20747029203d20536166654d6174682e7472794164642874702c20657874\n        /* \"#utility.yul\":5859:5877   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5852:5914   */\n      mstore\n      shl(0xd0, 0x726146656529)\n        /* \"#utility.yul\":5930:5949   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":5923:5960   */\n      mstore\n        /* \"#utility.yul\":5977:5996   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":2831:2918  require(flag, \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\") */\n      tag_39\n        /* \"#utility.yul\":5528:6002   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":2831:2918  require(flag, \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\") */\n    tag_85:\n        /* \"degen/DegenMoneyLib.sol\":2348:2930  {... */\n      pop\n        /* \"degen/DegenMoneyLib.sol\":2326:2930  if (isMonopolyPenalty){... */\n    tag_75:\n        /* \"degen/DegenMoneyLib.sol\":2949:2951  tp */\n      swap6\n        /* \"degen/DegenMoneyLib.sol\":1194:2959  function ticketPrice(uint256 ith, uint256 totalRewardPool, bool isMonopolyPenalty) public pure returns (uint256 price) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"degen/DegenMoneyLib.sol\":3800:4387  function ticketIncome2GroupMember(uint256 ticketIncome, uint256 memNum) public pure returns (uint256 money) {... */\n    tag_25:\n        /* \"degen/DegenMoneyLib.sol\":3893:3906  uint256 money */\n      0x00\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":457:459  50 */\n      0x32\n        /* \"degen/DegenMoneyLib.sol\":3931:3948  _denominator - _a */\n      tag_89\n        /* \"degen/DegenMoneyLib.sol\":371:372  3 */\n      0x03\n        /* \"degen/DegenMoneyLib.sol\":950:953  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":3931:3948  _denominator - _a */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"degen/DegenMoneyLib.sol\":3931:3953  _denominator - _a - _b */\n      tag_91\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_91:\n        /* \"degen/DegenMoneyLib.sol\":3919:3953  uint256 c = _denominator - _a - _b */\n      swap1\n      pop\n        /* \"degen/DegenMoneyLib.sol\":3966:3975  bool flag */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":3994:4003  uint256 m */\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":4030:4062  SafeMath.tryMul(ticketIncome, c) */\n      tag_92\n        /* \"degen/DegenMoneyLib.sol\":4046:4058  ticketIncome */\n      dup7\n        /* \"degen/DegenMoneyLib.sol\":4060:4061  c */\n      dup5\n        /* \"degen/DegenMoneyLib.sol\":4030:4045  SafeMath.tryMul */\n      tag_37\n        /* \"degen/DegenMoneyLib.sol\":4030:4062  SafeMath.tryMul(ticketIncome, c) */\n      jump\t// in\n    tag_92:\n        /* \"degen/DegenMoneyLib.sol\":4018:4062  (flag, m) = SafeMath.tryMul(ticketIncome, c) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":4073:4126  require(flag, \"[ticketIncome2GroupMember] overflow.\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_95\n      jump\t// in\n    tag_93:\n        /* \"degen/DegenMoneyLib.sol\":4149:4181  SafeMath.tryDiv(m, _denominator) */\n      tag_96\n        /* \"degen/DegenMoneyLib.sol\":4165:4166  m */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":950:953  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":4149:4164  SafeMath.tryDiv */\n      tag_42\n        /* \"degen/DegenMoneyLib.sol\":4149:4181  SafeMath.tryDiv(m, _denominator) */\n      jump\t// in\n    tag_96:\n        /* \"degen/DegenMoneyLib.sol\":4137:4181  (flag, m) = SafeMath.tryDiv(m, _denominator) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":4192:4245  require(flag, \"[ticketIncome2GroupMember] overflow.\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_95\n      jump\t// in\n    tag_97:\n        /* \"degen/DegenMoneyLib.sol\":4268:4294  SafeMath.tryDiv(m, memNum) */\n      tag_99\n        /* \"degen/DegenMoneyLib.sol\":4284:4285  m */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":4287:4293  memNum */\n      dup7\n        /* \"degen/DegenMoneyLib.sol\":4268:4283  SafeMath.tryDiv */\n      tag_42\n        /* \"degen/DegenMoneyLib.sol\":4268:4294  SafeMath.tryDiv(m, memNum) */\n      jump\t// in\n    tag_99:\n        /* \"degen/DegenMoneyLib.sol\":4256:4294  (flag, m) = SafeMath.tryDiv(m, memNum) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":4305:4358  require(flag, \"[ticketIncome2GroupMember] overflow.\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_95\n      jump\t// in\n    tag_100:\n        /* \"degen/DegenMoneyLib.sol\":4378:4379  m */\n      swap3\n      pop\n      pop\n      pop\n        /* \"degen/DegenMoneyLib.sol\":3800:4387  function ticketIncome2GroupMember(uint256 ticketIncome, uint256 memNum) public pure returns (uint256 money) {... */\n    tag_88:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"degen/DegenMoneyLib.sol\":2967:3374  function ticketIncome2RewardPool(uint256 ticketIncome) public pure returns (uint256 money) {... */\n    tag_32:\n        /* \"degen/DegenMoneyLib.sol\":3043:3056  uint256 money */\n      0x00\n      dup1\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":3133:3166  SafeMath.tryMul(ticketIncome, _b) */\n      tag_104\n        /* \"degen/DegenMoneyLib.sol\":3149:3161  ticketIncome */\n      dup5\n        /* \"degen/DegenMoneyLib.sol\":457:459  50 */\n      0x32\n        /* \"degen/DegenMoneyLib.sol\":3133:3148  SafeMath.tryMul */\n      tag_37\n        /* \"degen/DegenMoneyLib.sol\":3133:3166  SafeMath.tryMul(ticketIncome, _b) */\n      jump\t// in\n    tag_104:\n        /* \"degen/DegenMoneyLib.sol\":3121:3166  (flag, m) = SafeMath.tryMul(ticketIncome, _b) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":3177:3229  require(flag, \"[ticketIncome2RewardPool] overflow.\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_107\n      jump\t// in\n    tag_105:\n        /* \"degen/DegenMoneyLib.sol\":3252:3284  SafeMath.tryDiv(m, _denominator) */\n      tag_108\n        /* \"degen/DegenMoneyLib.sol\":3268:3269  m */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":950:953  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":3252:3267  SafeMath.tryDiv */\n      tag_42\n        /* \"degen/DegenMoneyLib.sol\":3252:3284  SafeMath.tryDiv(m, _denominator) */\n      jump\t// in\n    tag_108:\n        /* \"degen/DegenMoneyLib.sol\":3240:3284  (flag, m) = SafeMath.tryDiv(m, _denominator) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":3295:3347  require(flag, \"[ticketIncome2RewardPool] overflow.\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_107\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1339:1832  function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1400:1404  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1406:1413  uint256 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1683:1684  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1688:1689  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1683:1689  a == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1679:1707  if (a == 0) return (true, 0) */\n      tag_112\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1699:1703  true */\n      0x01\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1705:1706  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1691:1707  return (true, 0) */\n      jump(tag_111)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1679:1707  if (a == 0) return (true, 0) */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1733:1738  a * b */\n      dup4\n      dup4\n      mul\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1737:1738  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1733:1734  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1733:1738  a * b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1733:1734  a */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1756:1761  c / a */\n      tag_114\n      jumpi\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1756:1766  c / a != b */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1752:1785  if (c / a != b) return (false, 0) */\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1776:1781  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1783:1784  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1768:1785  return (false, 0) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_111)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1752:1785  if (c / a != b) return (false, 0) */\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1807:1811  true */\n      0x01\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1813:1814  c */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1339:1832  function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_111:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1981:2171  function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2042:2046  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2048:2055  uint256 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2095:2096  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2095:2101  b == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2091:2120  if (b == 0) return (false, 0) */\n      tag_118\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2111:2116  false */\n      0x00\n      swap1\n      pop\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2103:2120  return (false, 0) */\n      jump(tag_111)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2091:2120  if (b == 0) return (false, 0) */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2142:2146  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2152:2153  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2148:2149  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2148:2153  a / b */\n      dup2\n      tag_120\n      jumpi\n      tag_120\n      tag_115\n      jump\t// in\n    tag_120:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2134:2154  return (true, a / b) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1981:2171  function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":641:857  function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":702:706  bool */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":763:768  a + b */\n      dup4\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":786:791  c < a */\n      dup5\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":782:810  if (c < a) return (false, 0) */\n      iszero\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":801:806  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":808:809  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":793:810  return (false, 0) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_111)\n        /* \"#utility.yul\":204:384   */\n    tag_14:\n        /* \"#utility.yul\":263:269   */\n      0x00\n        /* \"#utility.yul\":316:318   */\n      0x20\n        /* \"#utility.yul\":304:313   */\n      dup3\n        /* \"#utility.yul\":295:302   */\n      dup5\n        /* \"#utility.yul\":291:314   */\n      sub\n        /* \"#utility.yul\":287:319   */\n      slt\n        /* \"#utility.yul\":284:336   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":332:333   */\n      0x00\n        /* \"#utility.yul\":329:330   */\n      dup1\n        /* \"#utility.yul\":322:334   */\n      revert\n        /* \"#utility.yul\":284:336   */\n    tag_127:\n      pop\n        /* \"#utility.yul\":355:378   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":204:384   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":389:798   */\n    tag_19:\n        /* \"#utility.yul\":463:469   */\n      0x00\n        /* \"#utility.yul\":471:477   */\n      dup1\n        /* \"#utility.yul\":479:485   */\n      0x00\n        /* \"#utility.yul\":532:534   */\n      0x60\n        /* \"#utility.yul\":520:529   */\n      dup5\n        /* \"#utility.yul\":511:518   */\n      dup7\n        /* \"#utility.yul\":507:530   */\n      sub\n        /* \"#utility.yul\":503:535   */\n      slt\n        /* \"#utility.yul\":500:552   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":548:549   */\n      0x00\n        /* \"#utility.yul\":545:546   */\n      dup1\n        /* \"#utility.yul\":538:550   */\n      revert\n        /* \"#utility.yul\":500:552   */\n    tag_129:\n        /* \"#utility.yul\":584:593   */\n      dup4\n        /* \"#utility.yul\":571:594   */\n      calldataload\n        /* \"#utility.yul\":561:594   */\n      swap3\n      pop\n        /* \"#utility.yul\":641:643   */\n      0x20\n        /* \"#utility.yul\":630:639   */\n      dup5\n        /* \"#utility.yul\":626:644   */\n      add\n        /* \"#utility.yul\":613:645   */\n      calldataload\n        /* \"#utility.yul\":603:645   */\n      swap2\n      pop\n        /* \"#utility.yul\":695:697   */\n      0x40\n        /* \"#utility.yul\":684:693   */\n      dup5\n        /* \"#utility.yul\":680:698   */\n      add\n        /* \"#utility.yul\":667:699   */\n      calldataload\n        /* \"#utility.yul\":742:747   */\n      dup1\n        /* \"#utility.yul\":735:748   */\n      iszero\n        /* \"#utility.yul\":728:749   */\n      iszero\n        /* \"#utility.yul\":721:726   */\n      dup2\n        /* \"#utility.yul\":718:750   */\n      eq\n        /* \"#utility.yul\":708:768   */\n      tag_130\n      jumpi\n        /* \"#utility.yul\":764:765   */\n      0x00\n        /* \"#utility.yul\":761:762   */\n      dup1\n        /* \"#utility.yul\":754:766   */\n      revert\n        /* \"#utility.yul\":708:768   */\n    tag_130:\n        /* \"#utility.yul\":787:792   */\n      dup1\n        /* \"#utility.yul\":777:792   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":389:798   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":803:1051   */\n    tag_24:\n        /* \"#utility.yul\":871:877   */\n      0x00\n        /* \"#utility.yul\":879:885   */\n      dup1\n        /* \"#utility.yul\":932:934   */\n      0x40\n        /* \"#utility.yul\":920:929   */\n      dup4\n        /* \"#utility.yul\":911:918   */\n      dup6\n        /* \"#utility.yul\":907:930   */\n      sub\n        /* \"#utility.yul\":903:935   */\n      slt\n        /* \"#utility.yul\":900:952   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":948:949   */\n      0x00\n        /* \"#utility.yul\":945:946   */\n      dup1\n        /* \"#utility.yul\":938:950   */\n      revert\n        /* \"#utility.yul\":900:952   */\n    tag_132:\n      pop\n      pop\n        /* \"#utility.yul\":971:994   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1041:1043   */\n      0x20\n        /* \"#utility.yul\":1026:1044   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1013:1045   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":803:1051   */\n      jump\t// out\n        /* \"#utility.yul\":1056:1456   */\n    tag_40:\n        /* \"#utility.yul\":1258:1260   */\n      0x20\n        /* \"#utility.yul\":1240:1261   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1297:1299   */\n      0x24\n        /* \"#utility.yul\":1277:1295   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1270:1300   */\n      mstore\n        /* \"#utility.yul\":1336:1370   */\n      0x5b7469636b6574496e636f6d653247726f75704c65616465725d206f76657266\n        /* \"#utility.yul\":1331:1333   */\n      0x40\n        /* \"#utility.yul\":1316:1334   */\n      dup3\n      add\n        /* \"#utility.yul\":1309:1371   */\n      mstore\n      shl(0xe1, 0x3637bb97)\n        /* \"#utility.yul\":1402:1404   */\n      0x60\n        /* \"#utility.yul\":1387:1405   */\n      dup3\n      add\n        /* \"#utility.yul\":1380:1414   */\n      mstore\n        /* \"#utility.yul\":1446:1449   */\n      0x80\n        /* \"#utility.yul\":1431:1450   */\n      add\n      swap1\n        /* \"#utility.yul\":1056:1456   */\n      jump\t// out\n        /* \"#utility.yul\":2297:2424   */\n    tag_123:\n        /* \"#utility.yul\":2358:2368   */\n      0x4e487b71\n        /* \"#utility.yul\":2353:2356   */\n      0xe0\n        /* \"#utility.yul\":2349:2369   */\n      shl\n        /* \"#utility.yul\":2346:2347   */\n      0x00\n        /* \"#utility.yul\":2339:2370   */\n      mstore\n        /* \"#utility.yul\":2389:2393   */\n      0x11\n        /* \"#utility.yul\":2386:2387   */\n      0x04\n        /* \"#utility.yul\":2379:2394   */\n      mstore\n        /* \"#utility.yul\":2413:2417   */\n      0x24\n        /* \"#utility.yul\":2410:2411   */\n      0x00\n        /* \"#utility.yul\":2403:2418   */\n      revert\n        /* \"#utility.yul\":2429:2564   */\n    tag_57:\n        /* \"#utility.yul\":2468:2471   */\n      0x00\n        /* \"#utility.yul\":2489:2506   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":2486:2529   */\n      tag_139\n      jumpi\n        /* \"#utility.yul\":2509:2527   */\n      tag_139\n      tag_123\n      jump\t// in\n    tag_139:\n      pop\n        /* \"#utility.yul\":2556:2557   */\n      0x01\n        /* \"#utility.yul\":2545:2558   */\n      add\n      swap1\n        /* \"#utility.yul\":2429:2564   */\n      jump\t// out\n        /* \"#utility.yul\":6007:6135   */\n    tag_90:\n        /* \"#utility.yul\":6074:6083   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6095:6106   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6092:6129   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":6109:6127   */\n      tag_88\n      tag_123\n      jump\t// in\n        /* \"#utility.yul\":6140:6540   */\n    tag_95:\n        /* \"#utility.yul\":6342:6344   */\n      0x20\n        /* \"#utility.yul\":6324:6345   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6381:6383   */\n      0x24\n        /* \"#utility.yul\":6361:6379   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6354:6384   */\n      mstore\n        /* \"#utility.yul\":6420:6454   */\n      0x5b7469636b6574496e636f6d653247726f75704d656d6265725d206f76657266\n        /* \"#utility.yul\":6415:6417   */\n      0x40\n        /* \"#utility.yul\":6400:6418   */\n      dup3\n      add\n        /* \"#utility.yul\":6393:6455   */\n      mstore\n      shl(0xe1, 0x3637bb97)\n        /* \"#utility.yul\":6486:6488   */\n      0x60\n        /* \"#utility.yul\":6471:6489   */\n      dup3\n      add\n        /* \"#utility.yul\":6464:6498   */\n      mstore\n        /* \"#utility.yul\":6530:6533   */\n      0x80\n        /* \"#utility.yul\":6515:6534   */\n      add\n      swap1\n        /* \"#utility.yul\":6140:6540   */\n      jump\t// out\n        /* \"#utility.yul\":6545:6944   */\n    tag_107:\n        /* \"#utility.yul\":6747:6749   */\n      0x20\n        /* \"#utility.yul\":6729:6750   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6786:6788   */\n      0x23\n        /* \"#utility.yul\":6766:6784   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6759:6789   */\n      mstore\n        /* \"#utility.yul\":6825:6859   */\n      0x5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c\n        /* \"#utility.yul\":6820:6822   */\n      0x40\n        /* \"#utility.yul\":6805:6823   */\n      dup3\n      add\n        /* \"#utility.yul\":6798:6860   */\n      mstore\n      shl(0xe9, 0x37bb97)\n        /* \"#utility.yul\":6891:6893   */\n      0x60\n        /* \"#utility.yul\":6876:6894   */\n      dup3\n      add\n        /* \"#utility.yul\":6869:6902   */\n      mstore\n        /* \"#utility.yul\":6934:6937   */\n      0x80\n        /* \"#utility.yul\":6919:6938   */\n      add\n      swap1\n        /* \"#utility.yul\":6545:6944   */\n      jump\t// out\n        /* \"#utility.yul\":6949:7076   */\n    tag_115:\n        /* \"#utility.yul\":7010:7020   */\n      0x4e487b71\n        /* \"#utility.yul\":7005:7008   */\n      0xe0\n        /* \"#utility.yul\":7001:7021   */\n      shl\n        /* \"#utility.yul\":6998:6999   */\n      0x00\n        /* \"#utility.yul\":6991:7022   */\n      mstore\n        /* \"#utility.yul\":7041:7045   */\n      0x12\n        /* \"#utility.yul\":7038:7039   */\n      0x04\n        /* \"#utility.yul\":7031:7046   */\n      mstore\n        /* \"#utility.yul\":7065:7069   */\n      0x24\n        /* \"#utility.yul\":7062:7063   */\n      0x00\n        /* \"#utility.yul\":7055:7070   */\n      revert\n    stop\n    data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a 4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63\n\n    auxdata: 0xa264697066735822122004252f745bece115bc63c40260c054f77dfb48935d01ae56b40bf744159c362064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6109b161003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c806326d0a334146100715780632e26fb4a1461008d578063627ca922146100a057806384105419146100b357806391096a3c146100c6578063e6ca2a8d146100d4575b600080fd5b670de0b6b3a76400005b60405190815260200160405180910390f35b61007b61009b3660046107bf565b6100e7565b61007b6100ae3660046107d8565b610155565b61007b6100c1366004610816565b610618565b678ac7230489e8000061007b565b61007b6100e23660046107bf565b6106c8565b600080806100f6846003610726565b9092509050816101215760405162461bcd60e51b815260040161011890610838565b60405180910390fd5b61012c816064610771565b90925090508161014e5760405162461bcd60e51b815260040161011890610838565b9392505050565b600060018060005b60028110156101ea576101708288610726565b9093509150826101d8576040805162461bcd60e51b815260206004820152602481019190915260008051602061095c83398151915260448201527f756c617465207469636b657420707269636520696e20692a2a5f616c7068612e6064820152608401610118565b806101e281610892565b91505061015d565b506101f681600a610726565b90925090508161026b5760405162461bcd60e51b8152602060048201526046602482015260008051602061095c83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612a692a2a5f60648201526530b63834309760d11b608482015260a401610118565b610276816064610771565b9092509050816102f85760405162461bcd60e51b8152602060048201526053602482015260008051602061095c83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612f5f64656e60648201527237b6b4b730ba37b9153495152fb0b63834309760691b608482015260a401610118565b61030a81670de0b6b3a7640000610726565b9092509050816103965760405162461bcd60e51b815260206004820152605c602482015260008051602061095c83398151915260448201527f756c617465207469636b657420707269636520696e20285f626574612f5f646560648201527f6e6f6d696e61746f722a692a2a5f616c706861292a31302a2a31382e00000000608482015260a401610118565b6103a781662386f26fc100006107a4565b9092509050816104335760405162461bcd60e51b815260206004820152605b602482015260008051602061095c83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612f5f64656e60648201527f6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e0000000000608482015260a401610118565b831561060f57600061044686600a610726565b9093509050826104da5760405162461bcd60e51b815260206004820152605360248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20657874726146656529203d20536166654d6174682e7472794d756c28746064820152726f74616c526577617264506f6f6c2c205f702960681b608482015260a401610118565b6104e5816064610771565b90935090508261057c5760405162461bcd60e51b815260206004820152605660248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20657874726146656529203d20536166654d6174682e7472794469762865606482015275787472614665652c205f64656e6f6d696e61746f722960501b608482015260a401610118565b61058682826107a4565b90935091508261060d5760405162461bcd60e51b815260206004820152604660248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20747029203d20536166654d6174682e7472794164642874702c2065787460648201526572614665652960d01b608482015260a401610118565b505b95945050505050565b6000806032610629600360646108ab565b61063391906108ab565b90506000806106428684610726565b9092509050816106645760405162461bcd60e51b8152600401610118906108be565b61066f816064610771565b9092509050816106915760405162461bcd60e51b8152600401610118906108be565b61069b8186610771565b9092509050816106bd5760405162461bcd60e51b8152600401610118906108be565b925050505b92915050565b600080806106d7846032610726565b9092509050816106f95760405162461bcd60e51b815260040161011890610902565b610704816064610771565b90925090508161014e5760405162461bcd60e51b815260040161011890610902565b6000808360000361073d575060019050600061076a565b8383028385828161075057610750610945565b041461076357600080925092505061076a565b6001925090505b9250929050565b600080826000036107875750600090508061076a565b600183858161079857610798610945565b04915091509250929050565b6000808383018481101561076357600080925092505061076a565b6000602082840312156107d157600080fd5b5035919050565b6000806000606084860312156107ed57600080fd5b83359250602084013591506040840135801515811461080b57600080fd5b809150509250925092565b6000806040838503121561082957600080fd5b50508035926020909101359150565b60208082526024908201527f5b7469636b6574496e636f6d653247726f75704c65616465725d206f766572666040820152633637bb9760e11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000600182016108a4576108a461087c565b5060010190565b818103818111156106c2576106c261087c565b60208082526024908201527f5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666040820152633637bb9760e11b606082015260800190565b60208082526023908201527f5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c60408201526237bb9760e91b606082015260800190565b634e487b7160e01b600052601260045260246000fdfe4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63a264697066735822122004252f745bece115bc63c40260c054f77dfb48935d01ae56b40bf744159c362064736f6c63430008120033",
							"opcodes": "PUSH2 0x9B1 PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26D0A334 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x2E26FB4A EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x627CA922 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x84105419 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x91096A3C EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xE6CA2A8D EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BF JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST PUSH2 0x7B PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST PUSH2 0x7B PUSH2 0xC1 CALLDATASIZE PUSH1 0x4 PUSH2 0x816 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH8 0x8AC7230489E80000 PUSH2 0x7B JUMP JUMPDEST PUSH2 0x7B PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xF6 DUP5 PUSH1 0x3 PUSH2 0x726 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 PUSH1 0x64 PUSH2 0x771 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x14E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x838 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x1EA JUMPI PUSH2 0x170 DUP3 DUP9 PUSH2 0x726 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x1D8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x95C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E20692A2A5F616C7068612E PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x118 JUMP JUMPDEST DUP1 PUSH2 0x1E2 DUP2 PUSH2 0x892 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15D JUMP JUMPDEST POP PUSH2 0x1F6 DUP2 PUSH1 0xA PUSH2 0x726 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x26B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x95C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612A692A2A5F PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x30B638343097 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x276 DUP2 PUSH1 0x64 PUSH2 0x771 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x53 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x95C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612F5F64656E PUSH1 0x64 DUP3 ADD MSTORE PUSH19 0x37B6B4B730BA37B9153495152FB0B638343097 PUSH1 0x69 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x30A DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x726 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5C PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x95C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E20285F626574612F5F6465 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E6F6D696E61746F722A692A2A5F616C706861292A31302A2A31382E00000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x3A7 DUP2 PUSH7 0x2386F26FC10000 PUSH2 0x7A4 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x95C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612F5F64656E PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6F6D696E61746F722A692A2A5F616C706861202B2067616D6D612E0000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 PUSH2 0x446 DUP7 PUSH1 0xA PUSH2 0x726 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP1 POP DUP3 PUSH2 0x4DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x53 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20657874726146656529203D20536166654D6174682E7472794D756C2874 PUSH1 0x64 DUP3 ADD MSTORE PUSH19 0x6F74616C526577617264506F6F6C2C205F7029 PUSH1 0x68 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x4E5 DUP2 PUSH1 0x64 PUSH2 0x771 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP1 POP DUP3 PUSH2 0x57C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x56 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20657874726146656529203D20536166654D6174682E7472794469762865 PUSH1 0x64 DUP3 ADD MSTORE PUSH22 0x787472614665652C205F64656E6F6D696E61746F7229 PUSH1 0x50 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x586 DUP3 DUP3 PUSH2 0x7A4 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x60D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20747029203D20536166654D6174682E7472794164642874702C20657874 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x726146656529 PUSH1 0xD0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x32 PUSH2 0x629 PUSH1 0x3 PUSH1 0x64 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x633 SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x642 DUP7 DUP5 PUSH2 0x726 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x664 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x8BE JUMP JUMPDEST PUSH2 0x66F DUP2 PUSH1 0x64 PUSH2 0x771 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x8BE JUMP JUMPDEST PUSH2 0x69B DUP2 DUP7 PUSH2 0x771 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x8BE JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x6D7 DUP5 PUSH1 0x32 PUSH2 0x726 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x902 JUMP JUMPDEST PUSH2 0x704 DUP2 PUSH1 0x64 PUSH2 0x771 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x14E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x902 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 SUB PUSH2 0x73D JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH2 0x76A JUMP JUMPDEST DUP4 DUP4 MUL DUP4 DUP6 DUP3 DUP2 PUSH2 0x750 JUMPI PUSH2 0x750 PUSH2 0x945 JUMP JUMPDEST DIV EQ PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x76A JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 SUB PUSH2 0x787 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x76A JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x798 JUMPI PUSH2 0x798 PUSH2 0x945 JUMP JUMPDEST DIV SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 ADD DUP5 DUP2 LT ISZERO PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x76A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x80B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D653247726F75704C65616465725D206F76657266 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3637BB97 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x8A4 JUMPI PUSH2 0x8A4 PUSH2 0x87C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6C2 JUMPI PUSH2 0x6C2 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D653247726F75704D656D6265725D206F76657266 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3637BB97 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D6532526577617264506F6F6C5D206F766572666C PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x37BB97 PUSH1 0xE9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0x4E PUSH22 0x6D626572206F766572666C6F77206F63637572732077 PUSH9 0x656E2063616C63A264 PUSH10 0x7066735822122004252F PUSH21 0x5BECE115BC63C40260C054F77DFB48935D01AE56B4 SIGNEXTEND 0xF7 PREVRANDAO ISZERO SWAP13 CALLDATASIZE KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "123:4269:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;123:4269:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@groupCreateMinFee_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taskCreateMinFee_364": {
									"entryPoint": null,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ticketIncome2GroupLeader_638": {
									"entryPoint": 231,
									"id": 638,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ticketIncome2GroupMember_711": {
									"entryPoint": 1560,
									"id": 711,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@ticketIncome2RewardPool_590": {
									"entryPoint": 1736,
									"id": 590,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ticketPrice_542": {
									"entryPoint": 341,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@tryAdd_34": {
									"entryPoint": 1956,
									"id": 34,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryDiv_132": {
									"entryPoint": 1905,
									"id": 132,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryMul_104": {
									"entryPoint": 1830,
									"id": 104,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f6addb26863066f4fc9b23aba533f4fdd42a896e1187d8b37bf8aa1dfd5adc6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9925b897b1b5e7f46ce753efc960858b0d7ed723178392dae59a70457210994d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dc71b2050d303ab0cccf48d4e0bfdb8bc2c6920659efc90f83709c3a3bfa2051__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2172,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7078:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "123:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "133:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "145:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "156:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "141:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "141:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "133:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "175:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "186:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "168:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "168:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "92:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "103:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "114:4:2",
														"type": ""
													}
												],
												"src": "14:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "274:110:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "320:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "329:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "332:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "322:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "322:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "322:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "295:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "304:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "291:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "291:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "316:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "287:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "287:32:2"
															},
															"nodeType": "YulIf",
															"src": "284:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "368:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "355:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "240:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "251:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "263:6:2",
														"type": ""
													}
												],
												"src": "204:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "490:308:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "536:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "545:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "548:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "538:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "538:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "538:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "511:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "520:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "532:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "503:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:32:2"
															},
															"nodeType": "YulIf",
															"src": "500:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "561:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "584:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "571:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "561:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "603:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "630:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "641:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "626:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "626:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "613:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "613:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "654:45:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "684:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "695:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "680:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "680:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "667:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:32:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "658:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "752:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "761:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "764:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "754:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "754:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "754:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "721:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "742:5:2"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "735:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "735:13:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "728:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "728:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "718:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "718:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "711:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "711:40:2"
															},
															"nodeType": "YulIf",
															"src": "708:60:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "777:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "787:5:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "777:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "440:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "451:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "463:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "471:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "479:6:2",
														"type": ""
													}
												],
												"src": "389:409:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:161:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "936:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "945:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "948:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "938:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "938:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "938:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "911:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "920:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "907:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "907:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "932:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "903:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "903:32:2"
															},
															"nodeType": "YulIf",
															"src": "900:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "961:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "984:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "971:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "971:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "961:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1003:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1030:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1041:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1026:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1026:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1013:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1013:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "848:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "859:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "871:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "879:6:2",
														"type": ""
													}
												],
												"src": "803:248:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1230:226:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1247:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1258:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1240:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1240:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1240:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1281:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1292:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1277:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1277:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1297:2:2",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1270:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1270:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1270:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1320:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1331:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1316:18:2"
																	},
																	{
																		"hexValue": "5b7469636b6574496e636f6d653247726f75704c65616465725d206f76657266",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1336:34:2",
																		"type": "",
																		"value": "[ticketIncome2GroupLeader] overf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1309:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1309:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1391:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1402:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1387:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1387:18:2"
																	},
																	{
																		"hexValue": "6c6f772e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1407:6:2",
																		"type": "",
																		"value": "low."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1423:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1435:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1446:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1423:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1207:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1221:4:2",
														"type": ""
													}
												],
												"src": "1056:400:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1635:224:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1652:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1663:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1645:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1645:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1645:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1686:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1697:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1682:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1682:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1702:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1675:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1675:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1675:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1725:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1736:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1721:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1721:18:2"
																	},
																	{
																		"hexValue": "546f2061766f6964206f766572666c6f772c20616c706861203c3d2035206f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1741:34:2",
																		"type": "",
																		"value": "To avoid overflow, alpha <= 5 on"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1714:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1714:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1714:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1796:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1807:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1792:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1792:18:2"
																	},
																	{
																		"hexValue": "6c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1812:4:2",
																		"type": "",
																		"value": "ly"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1785:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1785:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1785:32:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1826:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1838:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1849:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1834:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1834:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1826:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1612:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1626:4:2",
														"type": ""
													}
												],
												"src": "1461:398:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2038:254:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2055:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2066:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2048:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2048:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2048:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2089:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2100:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2085:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2085:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2078:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2078:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2078:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2128:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2139:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2124:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2124:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2144:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2117:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2117:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2117:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2199:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2210:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:18:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e20692a2a5f616c7068612e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2215:34:2",
																		"type": "",
																		"value": "ulate ticket price in i**_alpha."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2188:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2188:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2188:62:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2259:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2271:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2282:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2267:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2267:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2259:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2015:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2029:4:2",
														"type": ""
													}
												],
												"src": "1864:428:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2329:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2346:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2353:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2358:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2349:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2349:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2339:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2339:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2386:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2389:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2379:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2379:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2379:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2410:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2413:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2403:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2403:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2403:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2297:127:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2476:88:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2507:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2509:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2509:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2509:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2492:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2503:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2499:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:6:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2489:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2489:17:2"
															},
															"nodeType": "YulIf",
															"src": "2486:43:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2538:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2549:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2556:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2545:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2545:13:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2538:3:2"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2458:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2468:3:2",
														"type": ""
													}
												],
												"src": "2429:135:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2743:300:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2760:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2771:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2753:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2753:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2794:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2805:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2790:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2790:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:2",
																		"type": "",
																		"value": "70"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2783:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2833:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2844:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2829:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2829:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2849:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2822:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2822:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2904:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2915:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2900:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2900:18:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e205f626574612a692a2a5f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2920:34:2",
																		"type": "",
																		"value": "ulate ticket price in _beta*i**_"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2893:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2893:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2893:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2975:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2986:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2971:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2971:19:2"
																	},
																	{
																		"hexValue": "616c7068612e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2992:8:2",
																		"type": "",
																		"value": "alpha."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2964:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2964:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2964:37:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3010:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3022:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3033:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3018:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3018:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3010:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2720:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2734:4:2",
														"type": ""
													}
												],
												"src": "2569:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3222:313:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3239:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3250:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3232:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3273:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3284:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3289:2:2",
																		"type": "",
																		"value": "83"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3262:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3262:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3262:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3323:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3328:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3301:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3301:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3383:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3394:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3379:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3379:18:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e205f626574612f5f64656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3399:34:2",
																		"type": "",
																		"value": "ulate ticket price in _beta/_den"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3372:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3372:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3372:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3454:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3465:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3450:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3450:19:2"
																	},
																	{
																		"hexValue": "6f6d696e61746f722a692a2a5f616c7068612e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3471:21:2",
																		"type": "",
																		"value": "ominator*i**_alpha."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3443:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3443:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3443:50:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3502:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3514:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3525:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3502:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3199:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3213:4:2",
														"type": ""
													}
												],
												"src": "3048:487:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3714:322:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3731:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3742:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3724:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3724:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3724:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3765:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3776:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3781:2:2",
																		"type": "",
																		"value": "92"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3754:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3754:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3754:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3804:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3815:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3800:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3800:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3820:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3793:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3793:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3793:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3875:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3886:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3871:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3871:18:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e20285f626574612f5f6465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3891:34:2",
																		"type": "",
																		"value": "ulate ticket price in (_beta/_de"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3864:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3864:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3864:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3946:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3957:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3942:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3942:19:2"
																	},
																	{
																		"hexValue": "6e6f6d696e61746f722a692a2a5f616c706861292a31302a2a31382e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3963:30:2",
																		"type": "",
																		"value": "nominator*i**_alpha)*10**18."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3935:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3935:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3935:59:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4003:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4015:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4026:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4011:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4011:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4003:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3691:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3705:4:2",
														"type": ""
													}
												],
												"src": "3540:496:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4215:321:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4232:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4243:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4225:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4225:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4225:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4266:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4277:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4262:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4262:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:2:2",
																		"type": "",
																		"value": "91"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4255:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4255:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4255:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4305:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4316:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4301:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4301:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4321:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4294:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4294:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4294:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4376:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4387:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4372:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4372:18:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e205f626574612f5f64656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4392:34:2",
																		"type": "",
																		"value": "ulate ticket price in _beta/_den"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4365:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4447:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4458:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4443:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4443:19:2"
																	},
																	{
																		"hexValue": "6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4464:29:2",
																		"type": "",
																		"value": "ominator*i**_alpha + gamma."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4436:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4436:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4436:58:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4526:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4192:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4206:4:2",
														"type": ""
													}
												],
												"src": "4041:495:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4715:313:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4732:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4743:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4725:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4725:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4766:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4777:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4762:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4762:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4782:2:2",
																		"type": "",
																		"value": "83"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4755:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4755:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4755:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4805:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4816:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4801:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4801:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4821:34:2",
																		"type": "",
																		"value": "Number overflow occurs when (fla"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4794:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4794:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4794:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4876:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4887:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4872:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4872:18:2"
																	},
																	{
																		"hexValue": "672c20657874726146656529203d20536166654d6174682e7472794d756c2874",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4892:34:2",
																		"type": "",
																		"value": "g, extraFee) = SafeMath.tryMul(t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4865:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4865:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4865:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4947:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4958:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4943:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4943:19:2"
																	},
																	{
																		"hexValue": "6f74616c526577617264506f6f6c2c205f7029",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4964:21:2",
																		"type": "",
																		"value": "otalRewardPool, _p)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4936:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4936:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4936:50:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4995:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5007:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5018:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4995:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f6addb26863066f4fc9b23aba533f4fdd42a896e1187d8b37bf8aa1dfd5adc6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4692:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4706:4:2",
														"type": ""
													}
												],
												"src": "4541:487:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5207:316:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5224:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5235:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5217:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5217:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5217:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5258:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5269:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5254:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5254:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5274:2:2",
																		"type": "",
																		"value": "86"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5247:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5247:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5247:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5297:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5308:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5293:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5293:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5313:34:2",
																		"type": "",
																		"value": "Number overflow occurs when (fla"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5286:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5286:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5286:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5368:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5379:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5364:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5364:18:2"
																	},
																	{
																		"hexValue": "672c20657874726146656529203d20536166654d6174682e7472794469762865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5384:34:2",
																		"type": "",
																		"value": "g, extraFee) = SafeMath.tryDiv(e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5357:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5357:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5357:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5439:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5450:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5435:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5435:19:2"
																	},
																	{
																		"hexValue": "787472614665652c205f64656e6f6d696e61746f7229",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5456:24:2",
																		"type": "",
																		"value": "xtraFee, _denominator)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5428:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5428:53:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5428:53:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5490:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5502:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5513:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5498:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5498:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5490:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc71b2050d303ab0cccf48d4e0bfdb8bc2c6920659efc90f83709c3a3bfa2051__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5184:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5198:4:2",
														"type": ""
													}
												],
												"src": "5033:490:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5702:300:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5719:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5730:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5712:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5712:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5712:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5753:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5764:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5749:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5749:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5769:2:2",
																		"type": "",
																		"value": "70"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5742:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5742:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5742:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5792:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5803:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5788:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5788:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5808:34:2",
																		"type": "",
																		"value": "Number overflow occurs when (fla"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5781:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5781:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5781:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5863:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5874:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5859:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5859:18:2"
																	},
																	{
																		"hexValue": "672c20747029203d20536166654d6174682e7472794164642874702c20657874",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5879:34:2",
																		"type": "",
																		"value": "g, tp) = SafeMath.tryAdd(tp, ext"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5852:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5852:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5852:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5934:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5945:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5930:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5930:19:2"
																	},
																	{
																		"hexValue": "726146656529",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5951:8:2",
																		"type": "",
																		"value": "raFee)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5923:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5923:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5923:37:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5969:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5981:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5992:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5977:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5977:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5969:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9925b897b1b5e7f46ce753efc960858b0d7ed723178392dae59a70457210994d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5679:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5693:4:2",
														"type": ""
													}
												],
												"src": "5528:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6056:79:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6066:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6078:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6081:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6074:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6074:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6066:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6107:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6109:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6109:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6109:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6098:4:2"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6104:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6095:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6095:11:2"
															},
															"nodeType": "YulIf",
															"src": "6092:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6038:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6041:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6047:4:2",
														"type": ""
													}
												],
												"src": "6007:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6314:226:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6331:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6342:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6324:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6324:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6324:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6365:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6376:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6361:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6361:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6381:2:2",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6354:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6354:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6354:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6404:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6415:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6400:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6400:18:2"
																	},
																	{
																		"hexValue": "5b7469636b6574496e636f6d653247726f75704d656d6265725d206f76657266",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6420:34:2",
																		"type": "",
																		"value": "[ticketIncome2GroupMember] overf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6393:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6393:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6393:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6475:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6486:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6471:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6471:18:2"
																	},
																	{
																		"hexValue": "6c6f772e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6491:6:2",
																		"type": "",
																		"value": "low."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6464:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6464:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6464:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6507:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6519:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6530:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6515:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6515:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6507:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6291:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6305:4:2",
														"type": ""
													}
												],
												"src": "6140:400:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6719:225:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6736:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6747:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6729:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6729:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6729:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6770:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6781:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6766:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6766:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6786:2:2",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6759:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6759:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6809:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6820:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6805:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6805:18:2"
																	},
																	{
																		"hexValue": "5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6825:34:2",
																		"type": "",
																		"value": "[ticketIncome2RewardPool] overfl"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6798:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6798:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6798:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6880:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6891:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6876:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6876:18:2"
																	},
																	{
																		"hexValue": "6f772e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6896:5:2",
																		"type": "",
																		"value": "ow."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6869:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6869:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6869:33:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6911:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6923:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6934:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6919:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6919:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6911:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6696:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6710:4:2",
														"type": ""
													}
												],
												"src": "6545:399:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6981:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6998:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7005:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7010:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7001:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7001:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6991:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6991:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6991:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7038:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7041:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7031:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7031:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7031:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7062:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7065:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7055:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7055:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7055:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6949:127:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"[ticketIncome2GroupLeader] overf\")\n        mstore(add(headStart, 96), \"low.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"To avoid overflow, alpha <= 5 on\")\n        mstore(add(headStart, 96), \"ly\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"Number overflow occurs when calc\")\n        mstore(add(headStart, 96), \"ulate ticket price in i**_alpha.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 70)\n        mstore(add(headStart, 64), \"Number overflow occurs when calc\")\n        mstore(add(headStart, 96), \"ulate ticket price in _beta*i**_\")\n        mstore(add(headStart, 128), \"alpha.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 83)\n        mstore(add(headStart, 64), \"Number overflow occurs when calc\")\n        mstore(add(headStart, 96), \"ulate ticket price in _beta/_den\")\n        mstore(add(headStart, 128), \"ominator*i**_alpha.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 92)\n        mstore(add(headStart, 64), \"Number overflow occurs when calc\")\n        mstore(add(headStart, 96), \"ulate ticket price in (_beta/_de\")\n        mstore(add(headStart, 128), \"nominator*i**_alpha)*10**18.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 91)\n        mstore(add(headStart, 64), \"Number overflow occurs when calc\")\n        mstore(add(headStart, 96), \"ulate ticket price in _beta/_den\")\n        mstore(add(headStart, 128), \"ominator*i**_alpha + gamma.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_5f6addb26863066f4fc9b23aba533f4fdd42a896e1187d8b37bf8aa1dfd5adc6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 83)\n        mstore(add(headStart, 64), \"Number overflow occurs when (fla\")\n        mstore(add(headStart, 96), \"g, extraFee) = SafeMath.tryMul(t\")\n        mstore(add(headStart, 128), \"otalRewardPool, _p)\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_dc71b2050d303ab0cccf48d4e0bfdb8bc2c6920659efc90f83709c3a3bfa2051__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 86)\n        mstore(add(headStart, 64), \"Number overflow occurs when (fla\")\n        mstore(add(headStart, 96), \"g, extraFee) = SafeMath.tryDiv(e\")\n        mstore(add(headStart, 128), \"xtraFee, _denominator)\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_9925b897b1b5e7f46ce753efc960858b0d7ed723178392dae59a70457210994d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 70)\n        mstore(add(headStart, 64), \"Number overflow occurs when (fla\")\n        mstore(add(headStart, 96), \"g, tp) = SafeMath.tryAdd(tp, ext\")\n        mstore(add(headStart, 128), \"raFee)\")\n        tail := add(headStart, 160)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"[ticketIncome2GroupMember] overf\")\n        mstore(add(headStart, 96), \"low.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"[ticketIncome2RewardPool] overfl\")\n        mstore(add(headStart, 96), \"ow.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c806326d0a334146100715780632e26fb4a1461008d578063627ca922146100a057806384105419146100b357806391096a3c146100c6578063e6ca2a8d146100d4575b600080fd5b670de0b6b3a76400005b60405190815260200160405180910390f35b61007b61009b3660046107bf565b6100e7565b61007b6100ae3660046107d8565b610155565b61007b6100c1366004610816565b610618565b678ac7230489e8000061007b565b61007b6100e23660046107bf565b6106c8565b600080806100f6846003610726565b9092509050816101215760405162461bcd60e51b815260040161011890610838565b60405180910390fd5b61012c816064610771565b90925090508161014e5760405162461bcd60e51b815260040161011890610838565b9392505050565b600060018060005b60028110156101ea576101708288610726565b9093509150826101d8576040805162461bcd60e51b815260206004820152602481019190915260008051602061095c83398151915260448201527f756c617465207469636b657420707269636520696e20692a2a5f616c7068612e6064820152608401610118565b806101e281610892565b91505061015d565b506101f681600a610726565b90925090508161026b5760405162461bcd60e51b8152602060048201526046602482015260008051602061095c83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612a692a2a5f60648201526530b63834309760d11b608482015260a401610118565b610276816064610771565b9092509050816102f85760405162461bcd60e51b8152602060048201526053602482015260008051602061095c83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612f5f64656e60648201527237b6b4b730ba37b9153495152fb0b63834309760691b608482015260a401610118565b61030a81670de0b6b3a7640000610726565b9092509050816103965760405162461bcd60e51b815260206004820152605c602482015260008051602061095c83398151915260448201527f756c617465207469636b657420707269636520696e20285f626574612f5f646560648201527f6e6f6d696e61746f722a692a2a5f616c706861292a31302a2a31382e00000000608482015260a401610118565b6103a781662386f26fc100006107a4565b9092509050816104335760405162461bcd60e51b815260206004820152605b602482015260008051602061095c83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612f5f64656e60648201527f6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e0000000000608482015260a401610118565b831561060f57600061044686600a610726565b9093509050826104da5760405162461bcd60e51b815260206004820152605360248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20657874726146656529203d20536166654d6174682e7472794d756c28746064820152726f74616c526577617264506f6f6c2c205f702960681b608482015260a401610118565b6104e5816064610771565b90935090508261057c5760405162461bcd60e51b815260206004820152605660248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20657874726146656529203d20536166654d6174682e7472794469762865606482015275787472614665652c205f64656e6f6d696e61746f722960501b608482015260a401610118565b61058682826107a4565b90935091508261060d5760405162461bcd60e51b815260206004820152604660248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20747029203d20536166654d6174682e7472794164642874702c2065787460648201526572614665652960d01b608482015260a401610118565b505b95945050505050565b6000806032610629600360646108ab565b61063391906108ab565b90506000806106428684610726565b9092509050816106645760405162461bcd60e51b8152600401610118906108be565b61066f816064610771565b9092509050816106915760405162461bcd60e51b8152600401610118906108be565b61069b8186610771565b9092509050816106bd5760405162461bcd60e51b8152600401610118906108be565b925050505b92915050565b600080806106d7846032610726565b9092509050816106f95760405162461bcd60e51b815260040161011890610902565b610704816064610771565b90925090508161014e5760405162461bcd60e51b815260040161011890610902565b6000808360000361073d575060019050600061076a565b8383028385828161075057610750610945565b041461076357600080925092505061076a565b6001925090505b9250929050565b600080826000036107875750600090508061076a565b600183858161079857610798610945565b04915091509250929050565b6000808383018481101561076357600080925092505061076a565b6000602082840312156107d157600080fd5b5035919050565b6000806000606084860312156107ed57600080fd5b83359250602084013591506040840135801515811461080b57600080fd5b809150509250925092565b6000806040838503121561082957600080fd5b50508035926020909101359150565b60208082526024908201527f5b7469636b6574496e636f6d653247726f75704c65616465725d206f766572666040820152633637bb9760e11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000600182016108a4576108a461087c565b5060010190565b818103818111156106c2576106c261087c565b60208082526024908201527f5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666040820152633637bb9760e11b606082015260800190565b60208082526023908201527f5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c60408201526237bb9760e91b606082015260800190565b634e487b7160e01b600052601260045260246000fdfe4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63a264697066735822122004252f745bece115bc63c40260c054f77dfb48935d01ae56b40bf744159c362064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26D0A334 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x2E26FB4A EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x627CA922 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x84105419 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x91096A3C EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xE6CA2A8D EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BF JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST PUSH2 0x7B PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST PUSH2 0x7B PUSH2 0xC1 CALLDATASIZE PUSH1 0x4 PUSH2 0x816 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH8 0x8AC7230489E80000 PUSH2 0x7B JUMP JUMPDEST PUSH2 0x7B PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xF6 DUP5 PUSH1 0x3 PUSH2 0x726 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x838 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 PUSH1 0x64 PUSH2 0x771 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x14E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x838 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x1EA JUMPI PUSH2 0x170 DUP3 DUP9 PUSH2 0x726 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x1D8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x95C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E20692A2A5F616C7068612E PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x118 JUMP JUMPDEST DUP1 PUSH2 0x1E2 DUP2 PUSH2 0x892 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15D JUMP JUMPDEST POP PUSH2 0x1F6 DUP2 PUSH1 0xA PUSH2 0x726 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x26B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x95C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612A692A2A5F PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x30B638343097 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x276 DUP2 PUSH1 0x64 PUSH2 0x771 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x2F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x53 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x95C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612F5F64656E PUSH1 0x64 DUP3 ADD MSTORE PUSH19 0x37B6B4B730BA37B9153495152FB0B638343097 PUSH1 0x69 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x30A DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x726 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x396 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5C PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x95C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E20285F626574612F5F6465 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E6F6D696E61746F722A692A2A5F616C706861292A31302A2A31382E00000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x3A7 DUP2 PUSH7 0x2386F26FC10000 PUSH2 0x7A4 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x95C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612F5F64656E PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6F6D696E61746F722A692A2A5F616C706861202B2067616D6D612E0000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 PUSH2 0x446 DUP7 PUSH1 0xA PUSH2 0x726 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP1 POP DUP3 PUSH2 0x4DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x53 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20657874726146656529203D20536166654D6174682E7472794D756C2874 PUSH1 0x64 DUP3 ADD MSTORE PUSH19 0x6F74616C526577617264506F6F6C2C205F7029 PUSH1 0x68 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x4E5 DUP2 PUSH1 0x64 PUSH2 0x771 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP1 POP DUP3 PUSH2 0x57C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x56 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20657874726146656529203D20536166654D6174682E7472794469762865 PUSH1 0x64 DUP3 ADD MSTORE PUSH22 0x787472614665652C205F64656E6F6D696E61746F7229 PUSH1 0x50 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x586 DUP3 DUP3 PUSH2 0x7A4 JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x60D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20747029203D20536166654D6174682E7472794164642874702C20657874 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x726146656529 PUSH1 0xD0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x32 PUSH2 0x629 PUSH1 0x3 PUSH1 0x64 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x633 SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x642 DUP7 DUP5 PUSH2 0x726 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x664 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x8BE JUMP JUMPDEST PUSH2 0x66F DUP2 PUSH1 0x64 PUSH2 0x771 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x8BE JUMP JUMPDEST PUSH2 0x69B DUP2 DUP7 PUSH2 0x771 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x8BE JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x6D7 DUP5 PUSH1 0x32 PUSH2 0x726 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x902 JUMP JUMPDEST PUSH2 0x704 DUP2 PUSH1 0x64 PUSH2 0x771 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x14E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x902 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 SUB PUSH2 0x73D JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH2 0x76A JUMP JUMPDEST DUP4 DUP4 MUL DUP4 DUP6 DUP3 DUP2 PUSH2 0x750 JUMPI PUSH2 0x750 PUSH2 0x945 JUMP JUMPDEST DIV EQ PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x76A JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 SUB PUSH2 0x787 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x76A JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x798 JUMPI PUSH2 0x798 PUSH2 0x945 JUMP JUMPDEST DIV SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 ADD DUP5 DUP2 LT ISZERO PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x76A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x80B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D653247726F75704C65616465725D206F76657266 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3637BB97 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x8A4 JUMPI PUSH2 0x8A4 PUSH2 0x87C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6C2 JUMPI PUSH2 0x6C2 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D653247726F75704D656D6265725D206F76657266 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3637BB97 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D6532526577617264506F6F6C5D206F766572666C PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x37BB97 PUSH1 0xE9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0x4E PUSH22 0x6D626572206F766572666C6F77206F63637572732077 PUSH9 0x656E2063616C63A264 PUSH10 0x7066735822122004252F PUSH21 0x5BECE115BC63C40260C054F77DFB48935D01AE56B4 SIGNEXTEND 0xF7 PREVRANDAO ISZERO SWAP13 CALLDATASIZE KECCAK256 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "123:4269:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1077:109;324:10;1077:109;;;168:25:2;;;156:2;141:18;1077:109:1;;;;;;;3382:410;;;;;;:::i;:::-;;:::i;1194:1765::-;;;;;;:::i;:::-;;:::i;3800:587::-;;;;;;:::i;:::-;;:::i;962:107::-;260:11;962:107;;2967:407;;;;;;:::i;:::-;;:::i;3382:410::-;3459:13;;;3549:33;3565:12;371:1;3549:15;:33::i;:::-;3537:45;;-1:-1:-1;3537:45:1;-1:-1:-1;3537:45:1;3593:53;;;;-1:-1:-1;;;3593:53:1;;;;;;;:::i;:::-;;;;;;;;;3669:32;3685:1;950:3;3669:15;:32::i;:::-;3657:44;;-1:-1:-1;3657:44:1;-1:-1:-1;3657:44:1;3712:53;;;;-1:-1:-1;;;3712:53:1;;;;;;;:::i;:::-;3783:1;3382:410;-1:-1:-1;;;3382:410:1:o;1194:1765::-;1298:13;1407:4;;1395:9;1457:192;718:1;1472;:10;1457:192;;;1517:24;1533:2;1537:3;1517:15;:24::i;:::-;1504:37;;-1:-1:-1;1504:37:1;-1:-1:-1;1504:37:1;1556:81;;;;;-1:-1:-1;;;1556:81:1;;2066:2:2;1556:81:1;;;2048:21:2;2085:18;;;2078:30;;;;-1:-1:-1;;;;;;;;;;;2124:18:2;;;2117:62;2215:34;2195:18;;;2188:62;2267:19;;1556:81:1;1864:428:2;1556:81:1;1484:3;;;;:::i;:::-;;;;1457:192;;;;1674:26;1690:2;759;1674:15;:26::i;:::-;1661:39;;-1:-1:-1;1661:39:1;-1:-1:-1;1661:39:1;1711:87;;;;-1:-1:-1;;;1711:87:1;;2771:2:2;1711:87:1;;;2753:21:2;2810:2;2790:18;;;2783:30;-1:-1:-1;;;;;;;;;;;2829:18:2;;;2822:62;2920:34;2900:18;;;2893:62;-1:-1:-1;;;2971:19:2;;;2964:37;3018:19;;1711:87:1;2569:474:2;1711:87:1;1824:33;1840:2;950:3;1824:15;:33::i;:::-;1811:46;;-1:-1:-1;1811:46:1;-1:-1:-1;1811:46:1;1868:100;;;;-1:-1:-1;;;1868:100:1;;3250:2:2;1868:100:1;;;3232:21:2;3289:2;3269:18;;;3262:30;-1:-1:-1;;;;;;;;;;;3308:18:2;;;3301:62;3399:34;3379:18;;;3372:62;-1:-1:-1;;;3450:19:2;;;3443:50;3510:19;;1868:100:1;3048:487:2;1868:100:1;1994:27;2010:2;2014:6;1994:15;:27::i;:::-;1981:40;;-1:-1:-1;1981:40:1;-1:-1:-1;1981:40:1;2032:109;;;;-1:-1:-1;;;2032:109:1;;3742:2:2;2032:109:1;;;3724:21:2;3781:2;3761:18;;;3754:30;-1:-1:-1;;;;;;;;;;;3800:18:2;;;3793:62;3891:34;3871:18;;;3864:62;3963:30;3942:19;;;3935:59;4011:19;;2032:109:1;3540:496:2;2032:109:1;2167:27;2183:2;847:13;2167:15;:27::i;:::-;2154:40;;-1:-1:-1;2154:40:1;-1:-1:-1;2154:40:1;2205:108;;;;-1:-1:-1;;;2205:108:1;;4243:2:2;2205:108:1;;;4225:21:2;4282:2;4262:18;;;4255:30;-1:-1:-1;;;;;;;;;;;4301:18:2;;;4294:62;4392:34;4372:18;;;4365:62;4464:29;4443:19;;;4436:58;4511:19;;2205:108:1;4041:495:2;2205:108:1;2330:17;2326:604;;;2363:16;2417:36;2433:15;635:2;2417:15;:36::i;:::-;2398:55;;-1:-1:-1;2398:55:1;-1:-1:-1;2398:55:1;2468:100;;;;-1:-1:-1;;;2468:100:1;;4743:2:2;2468:100:1;;;4725:21:2;4782:2;4762:18;;;4755:30;4821:34;4801:18;;;4794:62;4892:34;4872:18;;;4865:62;-1:-1:-1;;;4943:19:2;;;4936:50;5003:19;;2468:100:1;4541:487:2;2468:100:1;2602:39;2618:8;950:3;2602:15;:39::i;:::-;2583:58;;-1:-1:-1;2583:58:1;-1:-1:-1;2583:58:1;2656:103;;;;-1:-1:-1;;;2656:103:1;;5235:2:2;2656:103:1;;;5217:21:2;5274:2;5254:18;;;5247:30;5313:34;5293:18;;;5286:62;5384:34;5364:18;;;5357:62;-1:-1:-1;;;5435:19:2;;;5428:53;5498:19;;2656:103:1;5033:490:2;2656:103:1;2787:29;2803:2;2807:8;2787:15;:29::i;:::-;2774:42;;-1:-1:-1;2774:42:1;-1:-1:-1;2774:42:1;2831:87;;;;-1:-1:-1;;;2831:87:1;;5730:2:2;2831:87:1;;;5712:21:2;5769:2;5749:18;;;5742:30;5808:34;5788:18;;;5781:62;5879:34;5859:18;;;5852:62;-1:-1:-1;;;5930:19:2;;;5923:37;5977:19;;2831:87:1;5528:474:2;2831:87:1;2348:582;2326:604;2949:2;1194:1765;-1:-1:-1;;;;;1194:1765:1:o;3800:587::-;3893:13;;457:2;3931:17;371:1;950:3;3931:17;:::i;:::-;:22;;;;:::i;:::-;3919:34;;3966:9;3994;4030:32;4046:12;4060:1;4030:15;:32::i;:::-;4018:44;;-1:-1:-1;4018:44:1;-1:-1:-1;4018:44:1;4073:53;;;;-1:-1:-1;;;4073:53:1;;;;;;;:::i;:::-;4149:32;4165:1;950:3;4149:15;:32::i;:::-;4137:44;;-1:-1:-1;4137:44:1;-1:-1:-1;4137:44:1;4192:53;;;;-1:-1:-1;;;4192:53:1;;;;;;;:::i;:::-;4268:26;4284:1;4287:6;4268:15;:26::i;:::-;4256:38;;-1:-1:-1;4256:38:1;-1:-1:-1;4256:38:1;4305:53;;;;-1:-1:-1;;;4305:53:1;;;;;;;:::i;:::-;4378:1;-1:-1:-1;;;3800:587:1;;;;;:::o;2967:407::-;3043:13;;;3133:33;3149:12;457:2;3133:15;:33::i;:::-;3121:45;;-1:-1:-1;3121:45:1;-1:-1:-1;3121:45:1;3177:52;;;;-1:-1:-1;;;3177:52:1;;;;;;;:::i;:::-;3252:32;3268:1;950:3;3252:15;:32::i;:::-;3240:44;;-1:-1:-1;3240:44:1;-1:-1:-1;3240:44:1;3295:52;;;;-1:-1:-1;;;3295:52:1;;;;;;;:::i;1339:493:0:-;1400:4;1406:7;1683:1;1688;1683:6;1679:28;;-1:-1:-1;1699:4:0;;-1:-1:-1;1705:1:0;1691:16;;1679:28;1733:5;;;1737:1;1733;:5;:1;1756:5;;;;:::i;:::-;;:10;1752:33;;1776:5;1783:1;1768:17;;;;;;;1752:33;1807:4;;-1:-1:-1;1813:1:0;-1:-1:-1;1339:493:0;;;;;;:::o;1981:190::-;2042:4;2048:7;2095:1;2100;2095:6;2091:29;;-1:-1:-1;2111:5:0;;-1:-1:-1;2111:5:0;2103:17;;2091:29;2142:4;2152:1;2148;:5;;;;;:::i;:::-;;2134:20;;;;1981:190;;;;;:::o;641:216::-;702:4;;763:5;;;786;;;782:28;;;801:5;808:1;793:17;;;;;;;204:180:2;263:6;316:2;304:9;295:7;291:23;287:32;284:52;;;332:1;329;322:12;284:52;-1:-1:-1;355:23:2;;204:180;-1:-1:-1;204:180:2:o;389:409::-;463:6;471;479;532:2;520:9;511:7;507:23;503:32;500:52;;;548:1;545;538:12;500:52;584:9;571:23;561:33;;641:2;630:9;626:18;613:32;603:42;;695:2;684:9;680:18;667:32;742:5;735:13;728:21;721:5;718:32;708:60;;764:1;761;754:12;708:60;787:5;777:15;;;389:409;;;;;:::o;803:248::-;871:6;879;932:2;920:9;911:7;907:23;903:32;900:52;;;948:1;945;938:12;900:52;-1:-1:-1;;971:23:2;;;1041:2;1026:18;;;1013:32;;-1:-1:-1;803:248:2:o;1056:400::-;1258:2;1240:21;;;1297:2;1277:18;;;1270:30;1336:34;1331:2;1316:18;;1309:62;-1:-1:-1;;;1402:2:2;1387:18;;1380:34;1446:3;1431:19;;1056:400::o;2297:127::-;2358:10;2353:3;2349:20;2346:1;2339:31;2389:4;2386:1;2379:15;2413:4;2410:1;2403:15;2429:135;2468:3;2489:17;;;2486:43;;2509:18;;:::i;:::-;-1:-1:-1;2556:1:2;2545:13;;2429:135::o;6007:128::-;6074:9;;;6095:11;;;6092:37;;;6109:18;;:::i;6140:400::-;6342:2;6324:21;;;6381:2;6361:18;;;6354:30;6420:34;6415:2;6400:18;;6393:62;-1:-1:-1;;;6486:2:2;6471:18;;6464:34;6530:3;6515:19;;6140:400::o;6545:399::-;6747:2;6729:21;;;6786:2;6766:18;;;6759:30;6825:34;6820:2;6805:18;;6798:62;-1:-1:-1;;;6891:2:2;6876:18;;6869:33;6934:3;6919:19;;6545:399::o;6949:127::-;7010:10;7005:3;7001:20;6998:1;6991:31;7041:4;7038:1;7031:15;7065:4;7062:1;7055:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "496200",
								"executionCost": "561",
								"totalCost": "496761"
							},
							"external": {
								"groupCreateMinFee()": "131",
								"taskCreateMinFee()": "230",
								"ticketIncome2GroupLeader(uint256)": "556",
								"ticketIncome2GroupMember(uint256,uint256)": "infinite",
								"ticketIncome2RewardPool(uint256)": "644",
								"ticketPrice(uint256,uint256,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 123,
									"end": 4392,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 123,
									"end": 4392,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122004252f745bece115bc63c40260c054f77dfb48935d01ae56b40bf744159c362064736f6c63430008120033",
									".code": [
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH",
											"source": 1,
											"value": "26D0A334"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH",
											"source": 1,
											"value": "2E26FB4A"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH",
											"source": 1,
											"value": "627CA922"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH",
											"source": 1,
											"value": "84105419"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH",
											"source": 1,
											"value": "91096A3C"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH",
											"source": 1,
											"value": "E6CA2A8D"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 4392,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1186,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1077,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 324,
											"end": 334,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1077,
											"end": 1186,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1077,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1186,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1186,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 168,
											"end": 193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 156,
											"end": 158,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 141,
											"end": 159,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1186,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1186,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1186,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1186,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1186,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3382,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3382,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3382,
											"end": 3792,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3792,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3382,
											"end": 3792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3382,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3382,
											"end": 3792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 2959,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1194,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1194,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1194,
											"end": 2959,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1194,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1194,
											"end": 2959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 2959,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1194,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1194,
											"end": 2959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3800,
											"end": 4387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3800,
											"end": 4387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1069,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 962,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 260,
											"end": 271,
											"name": "PUSH",
											"source": 1,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 962,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 962,
											"end": 1069,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 3374,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2967,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2967,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2967,
											"end": 3374,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 3374,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2967,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2967,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 3374,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2967,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2967,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3382,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3565,
											"end": 3577,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 371,
											"end": 372,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3549,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3549,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3582,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3549,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3582,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3537,
											"end": 3582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3537,
											"end": 3582,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3593,
											"end": 3646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3593,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3685,
											"end": 3686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 950,
											"end": 953,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3669,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3669,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3701,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3669,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3701,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3712,
											"end": 3765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3712,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3784,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3382,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 2959,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1194,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1411,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1407,
											"end": 1411,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1457,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 718,
											"end": 719,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1472,
											"end": 1473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1482,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1649,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1457,
											"end": 1649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1533,
											"end": 1535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1517,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1541,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1517,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1541,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1504,
											"end": 1541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1504,
											"end": 1541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1556,
											"end": 1637,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1556,
											"end": 1637,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1637,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1556,
											"end": 1637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1556,
											"end": 1637,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1556,
											"end": 1637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2069,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2124,
											"end": 2142,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2124,
											"end": 2142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2142,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2179,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E20692A2A5F616C7068612E"
										},
										{
											"begin": 2195,
											"end": 2213,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2195,
											"end": 2213,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2195,
											"end": 2213,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2286,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2267,
											"end": 2286,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1864,
											"end": 2292,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1556,
											"end": 1637,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1556,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1487,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1484,
											"end": 1487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1484,
											"end": 1487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1487,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1484,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1487,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1457,
											"end": 1649,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1457,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1690,
											"end": 1692,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 759,
											"end": 761,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1674,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1674,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1674,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1700,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1661,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1661,
											"end": 1700,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1711,
											"end": 1798,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1711,
											"end": 1798,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1711,
											"end": 1798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1711,
											"end": 1798,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1711,
											"end": 1798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2790,
											"end": 2808,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2790,
											"end": 2808,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2808,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2829,
											"end": 2847,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2822,
											"end": 2884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2954,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E205F626574612A692A2A5F"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 2955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B638343097"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2971,
											"end": 2990,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2971,
											"end": 2990,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 2990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2964,
											"end": 3001,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3018,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 3018,
											"end": 3037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2569,
											"end": 3043,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1711,
											"end": 1798,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1711,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1840,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 950,
											"end": 953,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1824,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1824,
											"end": 1857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1857,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1824,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1857,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 1857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1811,
											"end": 1857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1868,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1868,
											"end": 1968,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1868,
											"end": 1968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1868,
											"end": 1968,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1868,
											"end": 1968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1868,
											"end": 1968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3252,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1968,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1868,
											"end": 1968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1868,
											"end": 1968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3253,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3289,
											"end": 3291,
											"name": "PUSH",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3269,
											"end": 3287,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3269,
											"end": 3287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3262,
											"end": 3292,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3308,
											"end": 3326,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3308,
											"end": 3326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3301,
											"end": 3363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3433,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E205F626574612F5F64656E"
										},
										{
											"begin": 3379,
											"end": 3397,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3379,
											"end": 3397,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3379,
											"end": 3397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3372,
											"end": 3434,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B6B4B730BA37B9153495152FB0B638343097"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3450,
											"end": 3469,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3450,
											"end": 3469,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3469,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3493,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 3510,
											"end": 3529,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3048,
											"end": 3535,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1968,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1868,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2012,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2020,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1994,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1994,
											"end": 2021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1994,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1994,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1981,
											"end": 2021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2032,
											"end": 2141,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2141,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2141,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3742,
											"end": 3744,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2141,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2032,
											"end": 2141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3724,
											"end": 3745,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3781,
											"end": 3783,
											"name": "PUSH",
											"source": 2,
											"value": "5C"
										},
										{
											"begin": 3761,
											"end": 3779,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3761,
											"end": 3779,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3779,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3784,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3800,
											"end": 3818,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3800,
											"end": 3818,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3800,
											"end": 3818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3793,
											"end": 3855,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3925,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E20285F626574612F5F6465"
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3926,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3963,
											"end": 3993,
											"name": "PUSH",
											"source": 2,
											"value": "6E6F6D696E61746F722A692A2A5F616C706861292A31302A2A31382E00000000"
										},
										{
											"begin": 3942,
											"end": 3961,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3942,
											"end": 3961,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3942,
											"end": 3961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 3994,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4011,
											"end": 4030,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 4011,
											"end": 4030,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3540,
											"end": 4036,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2032,
											"end": 2141,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2032,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2183,
											"end": 2185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 847,
											"end": 860,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 2167,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2167,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2194,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2167,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2154,
											"end": 2194,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2205,
											"end": 2313,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2205,
											"end": 2313,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2205,
											"end": 2313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2205,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2205,
											"end": 2313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4246,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4282,
											"end": 4284,
											"name": "PUSH",
											"source": 2,
											"value": "5B"
										},
										{
											"begin": 4262,
											"end": 4280,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4262,
											"end": 4280,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4262,
											"end": 4280,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4255,
											"end": 4285,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4301,
											"end": 4319,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4301,
											"end": 4319,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4301,
											"end": 4319,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4294,
											"end": 4356,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4392,
											"end": 4426,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E205F626574612F5F64656E"
										},
										{
											"begin": 4372,
											"end": 4390,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4372,
											"end": 4390,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4372,
											"end": 4390,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4427,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4464,
											"end": 4493,
											"name": "PUSH",
											"source": 2,
											"value": "6F6D696E61746F722A692A2A5F616C706861202B2067616D6D612E0000000000"
										},
										{
											"begin": 4443,
											"end": 4462,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4443,
											"end": 4462,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4443,
											"end": 4462,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4511,
											"end": 4530,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 4511,
											"end": 4530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2205,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4041,
											"end": 4536,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2205,
											"end": 2313,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2205,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2347,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2930,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2326,
											"end": 2930,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2433,
											"end": 2448,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 635,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2417,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2417,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2417,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2453,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2398,
											"end": 2453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2398,
											"end": 2453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2468,
											"end": 2568,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2568,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2568,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2468,
											"end": 2568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2468,
											"end": 2568,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2468,
											"end": 2568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4746,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4782,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4755,
											"end": 4785,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4821,
											"end": 4855,
											"name": "PUSH",
											"source": 2,
											"value": "4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61"
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4794,
											"end": 4856,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4892,
											"end": 4926,
											"name": "PUSH",
											"source": 2,
											"value": "672C20657874726146656529203D20536166654D6174682E7472794D756C2874"
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4872,
											"end": 4890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4927,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F74616C526577617264506F6F6C2C205F7029"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4943,
											"end": 4962,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4943,
											"end": 4962,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4943,
											"end": 4962,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4936,
											"end": 4986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4541,
											"end": 5028,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2568,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2468,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2618,
											"end": 2626,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 950,
											"end": 953,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2602,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2602,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2641,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2602,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2641,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2583,
											"end": 2641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2583,
											"end": 2641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2656,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2656,
											"end": 2759,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2656,
											"end": 2759,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2759,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2656,
											"end": 2759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2656,
											"end": 2759,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5235,
											"end": 5237,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2656,
											"end": 2759,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2656,
											"end": 2759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2656,
											"end": 2759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5274,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5254,
											"end": 5272,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5254,
											"end": 5272,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5247,
											"end": 5277,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5313,
											"end": 5347,
											"name": "PUSH",
											"source": 2,
											"value": "4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61"
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5293,
											"end": 5311,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5286,
											"end": 5348,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH",
											"source": 2,
											"value": "672C20657874726146656529203D20536166654D6174682E7472794469762865"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5357,
											"end": 5419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "787472614665652C205F64656E6F6D696E61746F7229"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5435,
											"end": 5454,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5435,
											"end": 5454,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5435,
											"end": 5454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5428,
											"end": 5481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5517,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 5498,
											"end": 5517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2656,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5033,
											"end": 5523,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2656,
											"end": 2759,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2656,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2803,
											"end": 2805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2787,
											"end": 2816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2816,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2787,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2816,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5730,
											"end": 5732,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5712,
											"end": 5733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5769,
											"end": 5771,
											"name": "PUSH",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5749,
											"end": 5767,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5749,
											"end": 5767,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5749,
											"end": 5767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5742,
											"end": 5772,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5808,
											"end": 5842,
											"name": "PUSH",
											"source": 2,
											"value": "4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61"
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5843,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5879,
											"end": 5913,
											"name": "PUSH",
											"source": 2,
											"value": "672C20747029203D20536166654D6174682E7472794164642874702C20657874"
										},
										{
											"begin": 5859,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5859,
											"end": 5877,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5859,
											"end": 5877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5852,
											"end": 5914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726146656529"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5930,
											"end": 5949,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5930,
											"end": 5949,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5930,
											"end": 5949,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5923,
											"end": 5960,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 5977,
											"end": 5996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5528,
											"end": 6002,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2831,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2930,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2326,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 2951,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 2959,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1194,
											"end": 2959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3893,
											"end": 3906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3931,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 371,
											"end": 372,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 950,
											"end": 953,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3931,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3931,
											"end": 3948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3948,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3931,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3931,
											"end": 3953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3931,
											"end": 3953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3953,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3931,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3966,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 4003,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4046,
											"end": 4058,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4061,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4030,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4062,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4030,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4062,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4018,
											"end": 4062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4018,
											"end": 4062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4073,
											"end": 4126,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4126,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4073,
											"end": 4126,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4073,
											"end": 4126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4126,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4073,
											"end": 4126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4073,
											"end": 4126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4073,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4126,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4073,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4165,
											"end": 4166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 950,
											"end": 953,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4149,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4149,
											"end": 4181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4149,
											"end": 4181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4181,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4137,
											"end": 4181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4137,
											"end": 4181,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4192,
											"end": 4245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4192,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4284,
											"end": 4285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4287,
											"end": 4293,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4268,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4294,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 4268,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4256,
											"end": 4294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4256,
											"end": 4294,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4256,
											"end": 4294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4256,
											"end": 4294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4305,
											"end": 4358,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4305,
											"end": 4358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4305,
											"end": 4358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4358,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4305,
											"end": 4358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4305,
											"end": 4358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4305,
											"end": 4358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4358,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4305,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4379,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 4387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 4387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 3374,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2967,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3056,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3056,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3149,
											"end": 3161,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3133,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3133,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3166,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3133,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3166,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3121,
											"end": 3166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3121,
											"end": 3166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3177,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3177,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3268,
											"end": 3269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 950,
											"end": 953,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3252,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3252,
											"end": 3284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3284,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3252,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3284,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3240,
											"end": 3284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3240,
											"end": 3284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3295,
											"end": 3347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3347,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3295,
											"end": 3347,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3295,
											"end": 3347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3347,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3295,
											"end": 3347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3295,
											"end": 3347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3295,
											"end": 3347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1689,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1679,
											"end": 1707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1699,
											"end": 1703,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1699,
											"end": 1703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1705,
											"end": 1706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1691,
											"end": 1707,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1707,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1679,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1756,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1766,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2101,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2091,
											"end": 2120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2111,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2111,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2103,
											"end": 2120,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2120,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2091,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2152,
											"end": 2153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2148,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 857,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 641,
											"end": 857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 763,
											"end": 768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 763,
											"end": 768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 763,
											"end": 768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 786,
											"end": 791,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 786,
											"end": 791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 786,
											"end": 791,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 782,
											"end": 810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 801,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 204,
											"end": 384,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 204,
											"end": 384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 263,
											"end": 269,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 318,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 304,
											"end": 313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 295,
											"end": 302,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 287,
											"end": 319,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 284,
											"end": 336,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 284,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 284,
											"end": 336,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 332,
											"end": 333,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 334,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 284,
											"end": 336,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 284,
											"end": 336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 355,
											"end": 378,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 355,
											"end": 378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 204,
											"end": 384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 204,
											"end": 384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 389,
											"end": 798,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 389,
											"end": 798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 463,
											"end": 469,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 477,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 479,
											"end": 485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 534,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 520,
											"end": 529,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 511,
											"end": 518,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 507,
											"end": 530,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 503,
											"end": 535,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 500,
											"end": 552,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 500,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 500,
											"end": 552,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 548,
											"end": 549,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 538,
											"end": 550,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 500,
											"end": 552,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 500,
											"end": 552,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 584,
											"end": 593,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 571,
											"end": 594,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 561,
											"end": 594,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 561,
											"end": 594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 643,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 630,
											"end": 639,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 626,
											"end": 644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 613,
											"end": 645,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 603,
											"end": 645,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 603,
											"end": 645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 695,
											"end": 697,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 684,
											"end": 693,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 680,
											"end": 698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 667,
											"end": 699,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 742,
											"end": 747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 748,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 728,
											"end": 749,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 721,
											"end": 726,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 718,
											"end": 750,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 708,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 708,
											"end": 768,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 764,
											"end": 765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 762,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 754,
											"end": 766,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 708,
											"end": 768,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 708,
											"end": 768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 787,
											"end": 792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 777,
											"end": 792,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 777,
											"end": 792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 777,
											"end": 792,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 389,
											"end": 798,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 389,
											"end": 798,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 389,
											"end": 798,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 389,
											"end": 798,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 389,
											"end": 798,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 389,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 803,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 803,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 871,
											"end": 877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 885,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 911,
											"end": 918,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 907,
											"end": 930,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 903,
											"end": 935,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 900,
											"end": 952,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 900,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 900,
											"end": 952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 948,
											"end": 949,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 938,
											"end": 950,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 900,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 900,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 971,
											"end": 994,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1041,
											"end": 1043,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1045,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1045,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 803,
											"end": 1051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1456,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1260,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1261,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1297,
											"end": 1299,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1277,
											"end": 1295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1295,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1295,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1300,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1336,
											"end": 1370,
											"name": "PUSH",
											"source": 2,
											"value": "5B7469636B6574496E636F6D653247726F75704C65616465725D206F76657266"
										},
										{
											"begin": 1331,
											"end": 1333,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1316,
											"end": 1334,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1371,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3637BB97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1402,
											"end": 1404,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1387,
											"end": 1405,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1387,
											"end": 1405,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1414,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1446,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1431,
											"end": 1450,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1431,
											"end": 1450,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2297,
											"end": 2424,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2297,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2368,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2349,
											"end": 2369,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2347,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2370,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2389,
											"end": 2393,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2386,
											"end": 2387,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2417,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2410,
											"end": 2411,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2418,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2564,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2429,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2471,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2486,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2486,
											"end": 2529,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2509,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2556,
											"end": 2557,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2545,
											"end": 2558,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2429,
											"end": 2564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6007,
											"end": 6135,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6007,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6083,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6095,
											"end": 6106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6095,
											"end": 6106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6095,
											"end": 6106,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6092,
											"end": 6129,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6092,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6092,
											"end": 6129,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6109,
											"end": 6127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6140,
											"end": 6540,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 6140,
											"end": 6540,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6342,
											"end": 6344,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6324,
											"end": 6345,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6324,
											"end": 6345,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6324,
											"end": 6345,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6381,
											"end": 6383,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6361,
											"end": 6379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6379,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6361,
											"end": 6379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6384,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6420,
											"end": 6454,
											"name": "PUSH",
											"source": 2,
											"value": "5B7469636B6574496E636F6D653247726F75704D656D6265725D206F76657266"
										},
										{
											"begin": 6415,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6400,
											"end": 6418,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6418,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6393,
											"end": 6455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3637BB97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6486,
											"end": 6488,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6471,
											"end": 6489,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6471,
											"end": 6489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6464,
											"end": 6498,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6530,
											"end": 6533,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6515,
											"end": 6534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6515,
											"end": 6534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6140,
											"end": 6540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6545,
											"end": 6944,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 6545,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6747,
											"end": 6749,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6729,
											"end": 6750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6750,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6729,
											"end": 6750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6786,
											"end": 6788,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6766,
											"end": 6784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6759,
											"end": 6789,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6825,
											"end": 6859,
											"name": "PUSH",
											"source": 2,
											"value": "5B7469636B6574496E636F6D6532526577617264506F6F6C5D206F766572666C"
										},
										{
											"begin": 6820,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6805,
											"end": 6823,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6798,
											"end": 6860,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BB97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6891,
											"end": 6893,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6876,
											"end": 6894,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6869,
											"end": 6902,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6934,
											"end": 6937,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6919,
											"end": 6938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6919,
											"end": 6938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6545,
											"end": 6944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6949,
											"end": 7076,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 6949,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7010,
											"end": 7020,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 7005,
											"end": 7008,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7001,
											"end": 7021,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6998,
											"end": 6999,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6991,
											"end": 7022,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7041,
											"end": 7045,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 7038,
											"end": 7039,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7031,
											"end": 7046,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7069,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7055,
											"end": 7070,
											"name": "REVERT",
											"source": 2
										}
									],
									".data": {
										"3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"degen/DegenMoneyLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"groupCreateMinFee()": "26d0a334",
							"taskCreateMinFee()": "91096a3c",
							"ticketIncome2GroupLeader(uint256)": "2e26fb4a",
							"ticketIncome2GroupMember(uint256,uint256)": "84105419",
							"ticketIncome2RewardPool(uint256)": "e6ca2a8d",
							"ticketPrice(uint256,uint256,bool)": "627ca922"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"groupCreateMinFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taskCreateMinFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketIncome\",\"type\":\"uint256\"}],\"name\":\"ticketIncome2GroupLeader\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketIncome\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memNum\",\"type\":\"uint256\"}],\"name\":\"ticketIncome2GroupMember\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketIncome\",\"type\":\"uint256\"}],\"name\":\"ticketIncome2RewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ith\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewardPool\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isMonopolyPenalty\",\"type\":\"bool\"}],\"name\":\"ticketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"degen/DegenMoneyLib.sol\":\"DegenMoneyLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"degen/DegenMoneyLib.sol\":{\"keccak256\":\"0x5f6cf7533ac792782a9d228784c9a977e439dca8acf488d381c9628737f4e9c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6fa59909133e1612a65ad6a78c50e859f1f690795251fb31a27d7ec32546f12\",\"dweb:/ipfs/QmTCjheTReFRTQtW4c5w4YVVkA8DTV5o6M7sRmrJDT7f1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0",
							"usedErrors": []
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"degen/DegenMoneyLib.sol": {
				"ast": {
					"absolutePath": "degen/DegenMoneyLib.sol",
					"exportedSymbols": {
						"DegenMoneyLib": [
							712
						],
						"SafeMath": [
							311
						]
					},
					"id": 713,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 713,
							"sourceUnit": 312,
							"src": "60:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DegenMoneyLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 712,
							"linearizedBaseContracts": [
								712
							],
							"name": "DegenMoneyLib",
							"nameLocation": "131:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 321,
									"mutability": "constant",
									"name": "_taskCreateMinFee",
									"nameLocation": "240:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 712,
									"src": "215:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 315,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "215:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"id": 320,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 316,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "260:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 319,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 317,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "265:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 318,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "269:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "265:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "260:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 328,
									"mutability": "constant",
									"name": "_groupCreateMinFee",
									"nameLocation": "303:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 712,
									"src": "278:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 322,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "278:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 327,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 323,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "324:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 326,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 324,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "328:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 325,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "332:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "328:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "324:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 331,
									"mutability": "constant",
									"name": "_a",
									"nameLocation": "366:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 712,
									"src": "341:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 329,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "341:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 330,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "371:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 334,
									"mutability": "constant",
									"name": "_b",
									"nameLocation": "452:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 712,
									"src": "427:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 332,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "427:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 333,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "457:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 337,
									"mutability": "constant",
									"name": "_c",
									"nameLocation": "541:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 712,
									"src": "516:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 335,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "516:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 336,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "546:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 340,
									"mutability": "constant",
									"name": "_p",
									"nameLocation": "630:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 712,
									"src": "605:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 338,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "605:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 339,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "635:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 343,
									"mutability": "constant",
									"name": "_alpha",
									"nameLocation": "709:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 712,
									"src": "684:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 341,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "684:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 342,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "718:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 346,
									"mutability": "constant",
									"name": "_beta",
									"nameLocation": "751:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 712,
									"src": "726:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 344,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "726:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 345,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "759:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 353,
									"mutability": "constant",
									"name": "_gamma",
									"nameLocation": "838:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 712,
									"src": "813:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 347,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "813:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"id": 352,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e3031",
											"id": 348,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "847:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_100",
												"typeString": "rational_const 1 / 100"
											},
											"value": "0.01"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 351,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 349,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "854:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 350,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "858:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "854:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "847:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 356,
									"mutability": "constant",
									"name": "_denominator",
									"nameLocation": "935:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 712,
									"src": "910:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 354,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "910:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 355,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "950:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "1026:43:1",
										"statements": [
											{
												"expression": {
													"id": 361,
													"name": "_taskCreateMinFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 321,
													"src": "1044:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 360,
												"id": 362,
												"nodeType": "Return",
												"src": "1037:24:1"
											}
										]
									},
									"functionSelector": "91096a3c",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "taskCreateMinFee",
									"nameLocation": "971:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "1019:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1011:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:15:1"
									},
									"scope": 712,
									"src": "962:107:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "1142:44:1",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_groupCreateMinFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 328,
													"src": "1160:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "1153:25:1"
											}
										]
									},
									"functionSelector": "26d0a334",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "groupCreateMinFee",
									"nameLocation": "1086:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1103:2:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "1135:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1127:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1126:15:1"
									},
									"scope": 712,
									"src": "1077:109:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "1313:1646:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "_alpha",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "1332:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "35",
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1342:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															"src": "1332:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f2061766f6964206f766572666c6f772c20616c706861203c3d2035206f6e6c79",
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1345:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452",
																"typeString": "literal_string \"To avoid overflow, alpha <= 5 only\""
															},
															"value": "To avoid overflow, alpha <= 5 only"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452",
																"typeString": "literal_string \"To avoid overflow, alpha <= 5 only\""
															}
														],
														"id": 383,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1324:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1324:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "1324:58:1"
											},
											{
												"assignments": [
													391
												],
												"declarations": [
													{
														"constant": false,
														"id": 391,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "1400:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 541,
														"src": "1395:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 390,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1395:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 393,
												"initialValue": {
													"hexValue": "74727565",
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1407:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1395:16:1"
											},
											{
												"assignments": [
													395
												],
												"declarations": [
													{
														"constant": false,
														"id": 395,
														"mutability": "mutable",
														"name": "tp",
														"nameLocation": "1430:2:1",
														"nodeType": "VariableDeclaration",
														"scope": 541,
														"src": "1422:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 394,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1422:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"hexValue": "31",
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1435:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1422:14:1"
											},
											{
												"body": {
													"id": 423,
													"nodeType": "Block",
													"src": "1489:160:1",
													"statements": [
														{
															"expression": {
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 408,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 391,
																			"src": "1505:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"id": 409,
																			"name": "tp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "1511:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 410,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "1504:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 413,
																			"name": "tp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "1533:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 414,
																			"name": "ith",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 374,
																			"src": "1537:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 411,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "1517:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1526:6:1",
																		"memberName": "tryMul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 104,
																		"src": "1517:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																		}
																	},
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1517:24:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"src": "1504:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 417,
															"nodeType": "ExpressionStatement",
															"src": "1504:37:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 419,
																		"name": "flag",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "1564:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e20692a2a5f616c7068612e",
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1570:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa",
																			"typeString": "literal_string \"Number overflow occurs when calculate ticket price in i**_alpha.\""
																		},
																		"value": "Number overflow occurs when calculate ticket price in i**_alpha."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa",
																			"typeString": "literal_string \"Number overflow occurs when calculate ticket price in i**_alpha.\""
																		}
																	],
																	"id": 418,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1556:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1556:81:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 422,
															"nodeType": "ExpressionStatement",
															"src": "1556:81:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 402,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "1472:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 403,
														"name": "_alpha",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "1476:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1472:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 424,
												"initializationExpression": {
													"assignments": [
														399
													],
													"declarations": [
														{
															"constant": false,
															"id": 399,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1467:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 424,
															"src": "1462:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 398,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1462:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 401,
													"initialValue": {
														"hexValue": "30",
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1469:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1462:8:1"
												},
												"loopExpression": {
													"expression": {
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1484:3:1",
														"subExpression": {
															"id": 405,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "1484:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 407,
													"nodeType": "ExpressionStatement",
													"src": "1484:3:1"
												},
												"nodeType": "ForStatement",
												"src": "1457:192:1"
											},
											{
												"expression": {
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 425,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "1662:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 426,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "1668:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 427,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1661:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 430,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "1690:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 431,
																"name": "_beta",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "1694:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 428,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "1674:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1683:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "1674:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1674:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "1661:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "1661:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "1719:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e205f626574612a692a2a5f616c7068612e",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1725:72:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\""
															},
															"value": "Number overflow occurs when calculate ticket price in _beta*i**_alpha."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1711:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1711:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "1711:87:1"
											},
											{
												"expression": {
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 440,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "1812:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 441,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "1818:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 442,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1811:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 445,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "1840:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 446,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "1844:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 443,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "1824:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1833:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "1824:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1824:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "1811:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "1811:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 451,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "1876:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e205f626574612f5f64656e6f6d696e61746f722a692a2a5f616c7068612e",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1882:85:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\""
															},
															"value": "Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\""
															}
														],
														"id": 450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1868:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1868:100:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "1868:100:1"
											},
											{
												"expression": {
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 455,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "1982:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 456,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "1988:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 457,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1981:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 460,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "2010:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2014:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2018:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "2014:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"id": 458,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "1994:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2003:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "1994:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1994:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "1981:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "1981:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2040:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e20285f626574612f5f64656e6f6d696e61746f722a692a2a5f616c706861292a31302a2a31382e",
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2046:94:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\""
															},
															"value": "Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2032:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2032:109:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "2032:109:1"
											},
											{
												"expression": {
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 472,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "2155:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 473,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "2161:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 474,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2154:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 477,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "2183:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 478,
																"name": "_gamma",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "2187:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 475,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2167:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2176:6:1",
															"memberName": "tryAdd",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "2167:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2167:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "2154:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "2154:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 483,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2213:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e205f626574612f5f64656e6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2219:93:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\""
															},
															"value": "Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\""
															}
														],
														"id": 482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2205:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2205:108:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "2205:108:1"
											},
											{
												"condition": {
													"id": 487,
													"name": "isMonopolyPenalty",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 378,
													"src": "2330:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 538,
												"nodeType": "IfStatement",
												"src": "2326:604:1",
												"trueBody": {
													"id": 537,
													"nodeType": "Block",
													"src": "2348:582:1",
													"statements": [
														{
															"assignments": [
																489
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 489,
																	"mutability": "mutable",
																	"name": "extraFee",
																	"nameLocation": "2371:8:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 537,
																	"src": "2363:16:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 488,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2363:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 491,
															"initialValue": {
																"hexValue": "30",
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2382:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2363:20:1"
														},
														{
															"expression": {
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 492,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 391,
																			"src": "2399:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"id": 493,
																			"name": "extraFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 489,
																			"src": "2405:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 494,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "2398:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 497,
																			"name": "totalRewardPool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 376,
																			"src": "2433:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 498,
																			"name": "_p",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "2450:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 495,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "2417:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2426:6:1",
																		"memberName": "tryMul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 104,
																		"src": "2417:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																		}
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2417:36:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"src": "2398:55:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 501,
															"nodeType": "ExpressionStatement",
															"src": "2398:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 503,
																		"name": "flag",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2476:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61672c20657874726146656529203d20536166654d6174682e7472794d756c28746f74616c526577617264506f6f6c2c205f7029",
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2482:85:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5f6addb26863066f4fc9b23aba533f4fdd42a896e1187d8b37bf8aa1dfd5adc6",
																			"typeString": "literal_string \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\""
																		},
																		"value": "Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5f6addb26863066f4fc9b23aba533f4fdd42a896e1187d8b37bf8aa1dfd5adc6",
																			"typeString": "literal_string \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\""
																		}
																	],
																	"id": 502,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2468:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2468:100:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 506,
															"nodeType": "ExpressionStatement",
															"src": "2468:100:1"
														},
														{
															"expression": {
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 507,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 391,
																			"src": "2584:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"id": 508,
																			"name": "extraFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 489,
																			"src": "2590:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 509,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "2583:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 512,
																			"name": "extraFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 489,
																			"src": "2618:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 513,
																			"name": "_denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 356,
																			"src": "2628:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 510,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "2602:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2611:6:1",
																		"memberName": "tryDiv",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 132,
																		"src": "2602:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																		}
																	},
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2602:39:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"src": "2583:58:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 516,
															"nodeType": "ExpressionStatement",
															"src": "2583:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 518,
																		"name": "flag",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2664:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61672c20657874726146656529203d20536166654d6174682e7472794469762865787472614665652c205f64656e6f6d696e61746f7229",
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2670:88:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dc71b2050d303ab0cccf48d4e0bfdb8bc2c6920659efc90f83709c3a3bfa2051",
																			"typeString": "literal_string \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\""
																		},
																		"value": "Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_dc71b2050d303ab0cccf48d4e0bfdb8bc2c6920659efc90f83709c3a3bfa2051",
																			"typeString": "literal_string \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\""
																		}
																	],
																	"id": 517,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2656:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2656:103:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 521,
															"nodeType": "ExpressionStatement",
															"src": "2656:103:1"
														},
														{
															"expression": {
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 522,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 391,
																			"src": "2775:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"id": 523,
																			"name": "tp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "2781:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 524,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "2774:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 527,
																			"name": "tp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "2803:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 528,
																			"name": "extraFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 489,
																			"src": "2807:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 525,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "2787:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2796:6:1",
																		"memberName": "tryAdd",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 34,
																		"src": "2787:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																		}
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2787:29:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"src": "2774:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 531,
															"nodeType": "ExpressionStatement",
															"src": "2774:42:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 533,
																		"name": "flag",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2839:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61672c20747029203d20536166654d6174682e7472794164642874702c20657874726146656529",
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2845:72:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9925b897b1b5e7f46ce753efc960858b0d7ed723178392dae59a70457210994d",
																			"typeString": "literal_string \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\""
																		},
																		"value": "Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9925b897b1b5e7f46ce753efc960858b0d7ed723178392dae59a70457210994d",
																			"typeString": "literal_string \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\""
																		}
																	],
																	"id": 532,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2831:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2831:87:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 536,
															"nodeType": "ExpressionStatement",
															"src": "2831:87:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 539,
													"name": "tp",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 395,
													"src": "2949:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 382,
												"id": 540,
												"nodeType": "Return",
												"src": "2942:9:1"
											}
										]
									},
									"functionSelector": "627ca922",
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketPrice",
									"nameLocation": "1203:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "ith",
												"nameLocation": "1223:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1215:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "totalRewardPool",
												"nameLocation": "1236:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1228:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "isMonopolyPenalty",
												"nameLocation": "1258:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1253:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 377,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1253:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1214:62:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1306:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1298:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:1"
									},
									"scope": 712,
									"src": "1194:1765:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "3058:316:1",
										"statements": [
											{
												"assignments": [
													550
												],
												"declarations": [
													{
														"constant": false,
														"id": 550,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "3074:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "3069:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 549,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3069:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 552,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3081:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3069:17:1"
											},
											{
												"assignments": [
													554
												],
												"declarations": [
													{
														"constant": false,
														"id": 554,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "3105:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "3097:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 553,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3097:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"hexValue": "30",
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3109:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3097:13:1"
											},
											{
												"expression": {
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 557,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "3122:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 558,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "3128:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 559,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "3121:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 562,
																"name": "ticketIncome",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "3149:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 563,
																"name": "_b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "3163:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 560,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "3133:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3142:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "3133:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3133:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "3121:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "3121:45:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 568,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3185:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c6f772e",
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3191:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572",
																"typeString": "literal_string \"[ticketIncome2RewardPool] overflow.\""
															},
															"value": "[ticketIncome2RewardPool] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572",
																"typeString": "literal_string \"[ticketIncome2RewardPool] overflow.\""
															}
														],
														"id": 567,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3177:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3177:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "3177:52:1"
											},
											{
												"expression": {
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 572,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "3241:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 573,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "3247:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 574,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "3240:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 577,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "3268:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 578,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "3271:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 575,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "3252:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3261:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "3252:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3252:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "3240:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "3240:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 583,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3303:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c6f772e",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3309:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572",
																"typeString": "literal_string \"[ticketIncome2RewardPool] overflow.\""
															},
															"value": "[ticketIncome2RewardPool] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572",
																"typeString": "literal_string \"[ticketIncome2RewardPool] overflow.\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3295:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3295:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "3295:52:1"
											},
											{
												"expression": {
													"id": 587,
													"name": "m",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 554,
													"src": "3365:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 548,
												"id": 588,
												"nodeType": "Return",
												"src": "3358:8:1"
											}
										]
									},
									"functionSelector": "e6ca2a8d",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketIncome2RewardPool",
									"nameLocation": "2976:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "ticketIncome",
												"nameLocation": "3008:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3000:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:22:1"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "3051:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3043:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3043:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3042:15:1"
									},
									"scope": 712,
									"src": "2967:407:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "3474:318:1",
										"statements": [
											{
												"assignments": [
													598
												],
												"declarations": [
													{
														"constant": false,
														"id": 598,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "3490:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 637,
														"src": "3485:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 597,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3485:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 600,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3497:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3485:17:1"
											},
											{
												"assignments": [
													602
												],
												"declarations": [
													{
														"constant": false,
														"id": 602,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "3521:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 637,
														"src": "3513:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 601,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3513:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 604,
												"initialValue": {
													"hexValue": "30",
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3525:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3513:13:1"
											},
											{
												"expression": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 605,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "3538:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 606,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "3544:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 607,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "3537:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 610,
																"name": "ticketIncome",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "3565:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 611,
																"name": "_a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "3579:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 608,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "3549:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3558:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "3549:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3549:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "3537:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "3537:45:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "3601:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704c65616465725d206f766572666c6f772e",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3607:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1",
																"typeString": "literal_string \"[ticketIncome2GroupLeader] overflow.\""
															},
															"value": "[ticketIncome2GroupLeader] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1",
																"typeString": "literal_string \"[ticketIncome2GroupLeader] overflow.\""
															}
														],
														"id": 615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3593:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3593:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "3593:53:1"
											},
											{
												"expression": {
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 620,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "3658:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 621,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "3664:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 622,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "3657:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 625,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "3685:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 626,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "3688:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 623,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "3669:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3678:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "3669:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3669:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "3657:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "3657:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 631,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "3720:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704c65616465725d206f766572666c6f772e",
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3726:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1",
																"typeString": "literal_string \"[ticketIncome2GroupLeader] overflow.\""
															},
															"value": "[ticketIncome2GroupLeader] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1",
																"typeString": "literal_string \"[ticketIncome2GroupLeader] overflow.\""
															}
														],
														"id": 630,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3712:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3712:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "3712:53:1"
											},
											{
												"expression": {
													"id": 635,
													"name": "m",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 602,
													"src": "3783:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 596,
												"id": 636,
												"nodeType": "Return",
												"src": "3776:8:1"
											}
										]
									},
									"functionSelector": "2e26fb4a",
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketIncome2GroupLeader",
									"nameLocation": "3391:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "ticketIncome",
												"nameLocation": "3424:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3416:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3416:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3415:22:1"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "3467:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3459:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3459:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3458:15:1"
									},
									"scope": 712,
									"src": "3382:410:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "3908:479:1",
										"statements": [
											{
												"assignments": [
													648
												],
												"declarations": [
													{
														"constant": false,
														"id": 648,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3927:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 710,
														"src": "3919:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 647,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3919:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 654,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"id": 649,
															"name": "_denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "3931:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 650,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3946:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3931:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 652,
														"name": "_b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "3951:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3931:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3919:34:1"
											},
											{
												"assignments": [
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "3971:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 710,
														"src": "3966:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 655,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3966:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 658,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3978:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3966:17:1"
											},
											{
												"assignments": [
													660
												],
												"declarations": [
													{
														"constant": false,
														"id": 660,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "4002:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 710,
														"src": "3994:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 659,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3994:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 662,
												"initialValue": {
													"hexValue": "30",
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4006:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3994:13:1"
											},
											{
												"expression": {
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 663,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "4019:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 664,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "4025:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 665,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4018:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 668,
																"name": "ticketIncome",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "4046:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 669,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "4060:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 666,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "4030:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4039:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "4030:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4030:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4018:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "4018:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 674,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "4081:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666c6f772e",
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4087:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															},
															"value": "[ticketIncome2GroupMember] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															}
														],
														"id": 673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4073:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4073:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "4073:53:1"
											},
											{
												"expression": {
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 678,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "4138:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 679,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "4144:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 680,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4137:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 683,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "4165:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 684,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "4168:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 681,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "4149:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4158:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "4149:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4149:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4137:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "4137:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 689,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "4200:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666c6f772e",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4206:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															},
															"value": "[ticketIncome2GroupMember] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															}
														],
														"id": 688,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4192:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "4192:53:1"
											},
											{
												"expression": {
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 693,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "4257:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 694,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "4263:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 695,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4256:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 698,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "4284:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 699,
																"name": "memNum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "4287:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 696,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "4268:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4277:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "4268:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4268:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4256:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "4256:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "4313:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666c6f772e",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															},
															"value": "[ticketIncome2GroupMember] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															}
														],
														"id": 703,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4305:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4305:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "4305:53:1"
											},
											{
												"expression": {
													"id": 708,
													"name": "m",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 660,
													"src": "4378:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 646,
												"id": 709,
												"nodeType": "Return",
												"src": "4371:8:1"
											}
										]
									},
									"functionSelector": "84105419",
									"id": 711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketIncome2GroupMember",
									"nameLocation": "3809:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "ticketIncome",
												"nameLocation": "3842:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "3834:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3834:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "memNum",
												"nameLocation": "3864:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "3856:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3856:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3833:38:1"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "3901:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "3893:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3892:15:1"
									},
									"scope": 712,
									"src": "3800:587:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 713,
							"src": "123:4269:1",
							"usedErrors": []
						}
					],
					"src": "33:4363:1"
				},
				"id": 1
			}
		}
	}
}