{
	"id": "17756a3800f90c6361d039f96d2fa27e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"degen/DegenTicketPrice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.6;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n\r\nlibrary DegenTicketPrice {\r\n    uint256 constant private _alpha = 2;\r\n    uint256 constant private _beta = 100;               // beta = _beta / _denominator\r\n    uint256 constant private _gamma = 0.01 * 10**18;    // absolute init ticket price threshold\r\n    uint256 constant private _denominator = 1000;\r\n\r\n    function ticketPrice(uint256 ith) public pure returns (uint256 result) {\r\n        require(_alpha <= 5, \"To avoid overflow, alpha <= 5 only\");\r\n\r\n        bool flag = true;\r\n        uint256 tp = 1;\r\n        \r\n        for (uint i=0; i < _alpha; i++) {\r\n            (flag, tp) = SafeMath.tryMul(tp, ith);\r\n            require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\");\r\n        }\r\n\r\n        (flag, tp) = SafeMath.tryMul(tp, _beta);\r\n        require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\");\r\n\r\n        (flag, tp) = SafeMath.tryDiv(tp, _denominator);\r\n        require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\");\r\n\r\n        (flag, tp) = SafeMath.tryMul(tp, 10**18);\r\n        require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\");\r\n\r\n        (flag, tp) = SafeMath.tryAdd(tp, _gamma);\r\n        require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\");\r\n\r\n        return tp;\r\n    }\r\n}\r\n\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"degen/DegenTicketPrice.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"degen/DegenTicketPrice.sol": {
				"DegenTicketPrice": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ith",
									"type": "uint256"
								}
							],
							"name": "ticketPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"degen/DegenTicketPrice.sol\":123:1539  library DegenTicketPrice {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"degen/DegenTicketPrice.sol\":123:1539  library DegenTicketPrice {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0d93e609\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"degen/DegenTicketPrice.sol\":435:1536  function ticketPrice(uint256 ith) public pure returns (uint256 result) {... */\n    tag_2:\n      tag_3\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_4\n      swap2\n      swap1\n      tag_5\n      jump\t// in\n    tag_4:\n      tag_6\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_6:\n        /* \"degen/DegenTicketPrice.sol\":490:504  uint256 result */\n      0x00\n        /* \"degen/DegenTicketPrice.sol\":535:536  5 */\n      0x05\n        /* \"degen/DegenTicketPrice.sol\":189:190  2 */\n      0x02\n        /* \"degen/DegenTicketPrice.sol\":525:536  _alpha <= 5 */\n      gt\n      iszero\n        /* \"degen/DegenTicketPrice.sol\":517:575  require(_alpha <= 5, \"To avoid overflow, alpha <= 5 only\") */\n      tag_10\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_11\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_10:\n        /* \"degen/DegenTicketPrice.sol\":588:597  bool flag */\n      0x00\n        /* \"degen/DegenTicketPrice.sol\":600:604  true */\n      0x01\n        /* \"degen/DegenTicketPrice.sol\":588:604  bool flag = true */\n      swap1\n      pop\n        /* \"degen/DegenTicketPrice.sol\":615:625  uint256 tp */\n      0x00\n        /* \"degen/DegenTicketPrice.sol\":628:629  1 */\n      0x01\n        /* \"degen/DegenTicketPrice.sol\":615:629  uint256 tp = 1 */\n      swap1\n      pop\n        /* \"degen/DegenTicketPrice.sol\":655:661  uint i */\n      0x00\n        /* \"degen/DegenTicketPrice.sol\":650:842  for (uint i=0; i < _alpha; i++) {... */\n    tag_13:\n        /* \"degen/DegenTicketPrice.sol\":189:190  2 */\n      0x02\n        /* \"degen/DegenTicketPrice.sol\":665:666  i */\n      dup2\n        /* \"degen/DegenTicketPrice.sol\":665:675  i < _alpha */\n      lt\n        /* \"degen/DegenTicketPrice.sol\":650:842  for (uint i=0; i < _alpha; i++) {... */\n      iszero\n      tag_14\n      jumpi\n        /* \"degen/DegenTicketPrice.sol\":710:734  SafeMath.tryMul(tp, ith) */\n      tag_16\n        /* \"degen/DegenTicketPrice.sol\":726:728  tp */\n      dup3\n        /* \"degen/DegenTicketPrice.sol\":730:733  ith */\n      dup7\n        /* \"degen/DegenTicketPrice.sol\":710:725  SafeMath.tryMul */\n      tag_17\n        /* \"degen/DegenTicketPrice.sol\":710:734  SafeMath.tryMul(tp, ith) */\n      jump\t// in\n    tag_16:\n        /* \"degen/DegenTicketPrice.sol\":697:734  (flag, tp) = SafeMath.tryMul(tp, ith) */\n      dup1\n      swap4\n      pop\n      dup2\n      swap5\n      pop\n      pop\n      pop\n        /* \"degen/DegenTicketPrice.sol\":757:761  flag */\n      dup3\n        /* \"degen/DegenTicketPrice.sol\":749:830  require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\") */\n      tag_18\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_18:\n        /* \"degen/DegenTicketPrice.sol\":677:680  i++ */\n      dup1\n      dup1\n      tag_21\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      swap2\n      pop\n      pop\n        /* \"degen/DegenTicketPrice.sol\":650:842  for (uint i=0; i < _alpha; i++) {... */\n      jump(tag_13)\n    tag_14:\n      pop\n        /* \"degen/DegenTicketPrice.sol\":867:893  SafeMath.tryMul(tp, _beta) */\n      tag_23\n        /* \"degen/DegenTicketPrice.sol\":883:885  tp */\n      dup2\n        /* \"degen/DegenTicketPrice.sol\":230:233  100 */\n      0x64\n        /* \"degen/DegenTicketPrice.sol\":867:882  SafeMath.tryMul */\n      tag_17\n        /* \"degen/DegenTicketPrice.sol\":867:893  SafeMath.tryMul(tp, _beta) */\n      jump\t// in\n    tag_23:\n        /* \"degen/DegenTicketPrice.sol\":854:893  (flag, tp) = SafeMath.tryMul(tp, _beta) */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"degen/DegenTicketPrice.sol\":912:916  flag */\n      dup2\n        /* \"degen/DegenTicketPrice.sol\":904:991  require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\") */\n      tag_24\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_24:\n        /* \"degen/DegenTicketPrice.sol\":1017:1050  SafeMath.tryDiv(tp, _denominator) */\n      tag_27\n        /* \"degen/DegenTicketPrice.sol\":1033:1035  tp */\n      dup2\n        /* \"degen/DegenTicketPrice.sol\":422:426  1000 */\n      0x03e8\n        /* \"degen/DegenTicketPrice.sol\":1017:1032  SafeMath.tryDiv */\n      tag_28\n        /* \"degen/DegenTicketPrice.sol\":1017:1050  SafeMath.tryDiv(tp, _denominator) */\n      jump\t// in\n    tag_27:\n        /* \"degen/DegenTicketPrice.sol\":1004:1050  (flag, tp) = SafeMath.tryDiv(tp, _denominator) */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"degen/DegenTicketPrice.sol\":1069:1073  flag */\n      dup2\n        /* \"degen/DegenTicketPrice.sol\":1061:1161  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"degen/DegenTicketPrice.sol\":1187:1214  SafeMath.tryMul(tp, 10**18) */\n      tag_32\n        /* \"degen/DegenTicketPrice.sol\":1203:1205  tp */\n      dup2\n        /* \"degen/DegenTicketPrice.sol\":1207:1213  10**18 */\n      0x0de0b6b3a7640000\n        /* \"degen/DegenTicketPrice.sol\":1187:1202  SafeMath.tryMul */\n      tag_17\n        /* \"degen/DegenTicketPrice.sol\":1187:1214  SafeMath.tryMul(tp, 10**18) */\n      jump\t// in\n    tag_32:\n        /* \"degen/DegenTicketPrice.sol\":1174:1214  (flag, tp) = SafeMath.tryMul(tp, 10**18) */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"degen/DegenTicketPrice.sol\":1233:1237  flag */\n      dup2\n        /* \"degen/DegenTicketPrice.sol\":1225:1334  require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"degen/DegenTicketPrice.sol\":1360:1387  SafeMath.tryAdd(tp, _gamma) */\n      tag_36\n        /* \"degen/DegenTicketPrice.sol\":1376:1378  tp */\n      dup2\n        /* \"degen/DegenTicketPrice.sol\":319:332  0.01 * 10**18 */\n      0x2386f26fc10000\n        /* \"degen/DegenTicketPrice.sol\":1360:1375  SafeMath.tryAdd */\n      tag_37\n        /* \"degen/DegenTicketPrice.sol\":1360:1387  SafeMath.tryAdd(tp, _gamma) */\n      jump\t// in\n    tag_36:\n        /* \"degen/DegenTicketPrice.sol\":1347:1387  (flag, tp) = SafeMath.tryAdd(tp, _gamma) */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"degen/DegenTicketPrice.sol\":1406:1410  flag */\n      dup2\n        /* \"degen/DegenTicketPrice.sol\":1398:1506  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"degen/DegenTicketPrice.sol\":1526:1528  tp */\n      dup1\n        /* \"degen/DegenTicketPrice.sol\":1519:1528  return tp */\n      swap3\n      pop\n      pop\n      pop\n        /* \"degen/DegenTicketPrice.sol\":435:1536  function ticketPrice(uint256 ith) public pure returns (uint256 result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1339:1832  function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1400:1404  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1406:1413  uint256 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1688:1689  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1683:1684  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1683:1689  a == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1679:1707  if (a == 0) return (true, 0) */\n      tag_42\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1699:1703  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1705:1706  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1691:1707  return (true, 0) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_41)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1679:1707  if (a == 0) return (true, 0) */\n    tag_42:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1721:1730  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1737:1738  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1733:1734  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1733:1738  a * b */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1721:1738  uint256 c = a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1765:1766  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1760:1761  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1756:1757  c */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1756:1761  c / a */\n      dup2\n      tag_43\n      jumpi\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n    tag_43:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1756:1766  c / a != b */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1752:1785  if (c / a != b) return (false, 0) */\n      tag_46\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1776:1781  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1783:1784  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1768:1785  return (false, 0) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_41)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1752:1785  if (c / a != b) return (false, 0) */\n    tag_46:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1807:1811  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1813:1814  c */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1799:1815  return (true, c) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1339:1832  function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_41:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1981:2171  function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2042:2046  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2048:2055  uint256 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2095:2096  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2095:2101  b == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2091:2120  if (b == 0) return (false, 0) */\n      tag_48\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2111:2116  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2118:2119  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2103:2120  return (false, 0) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_47)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2091:2120  if (b == 0) return (false, 0) */\n    tag_48:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2142:2146  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2152:2153  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2148:2149  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2148:2153  a / b */\n      dup2\n      tag_49\n      jumpi\n      tag_50\n      tag_45\n      jump\t// in\n    tag_50:\n    tag_49:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2134:2154  return (true, a / b) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1981:2171  function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_47:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":641:857  function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":702:706  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":708:715  uint256 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":751:760  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":767:768  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":763:764  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":763:768  a + b */\n      add\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":751:768  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":790:791  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":786:787  c */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":786:791  c < a */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":782:810  if (c < a) return (false, 0) */\n      iszero\n      tag_52\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":801:806  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":808:809  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":793:810  return (false, 0) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_51)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":782:810  if (c < a) return (false, 0) */\n    tag_52:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":832:836  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":838:839  c */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":824:840  return (true, c) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":641:857  function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_51:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_54:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_56:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_57:\n        /* \"#utility.yul\":490:514   */\n      tag_80\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_56\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_81:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_58:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_83\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_57\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_5:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_86\n      tag_54\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":766:885   */\n    tag_85:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_87\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_58\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_59:\n        /* \"#utility.yul\":1120:1144   */\n      tag_89\n        /* \"#utility.yul\":1138:1143   */\n      dup2\n        /* \"#utility.yul\":1120:1144   */\n      tag_56\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1115:1118   */\n      dup3\n        /* \"#utility.yul\":1108:1145   */\n      mstore\n        /* \"#utility.yul\":1025:1151   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1395   */\n    tag_8:\n        /* \"#utility.yul\":1258:1262   */\n      0x00\n        /* \"#utility.yul\":1296:1298   */\n      0x20\n        /* \"#utility.yul\":1285:1294   */\n      dup3\n        /* \"#utility.yul\":1281:1299   */\n      add\n        /* \"#utility.yul\":1273:1299   */\n      swap1\n      pop\n        /* \"#utility.yul\":1309:1388   */\n      tag_91\n        /* \"#utility.yul\":1385:1386   */\n      0x00\n        /* \"#utility.yul\":1374:1383   */\n      dup4\n        /* \"#utility.yul\":1370:1387   */\n      add\n        /* \"#utility.yul\":1361:1367   */\n      dup5\n        /* \"#utility.yul\":1309:1388   */\n      tag_59\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1157:1395   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1401:1570   */\n    tag_60:\n        /* \"#utility.yul\":1485:1496   */\n      0x00\n        /* \"#utility.yul\":1519:1525   */\n      dup3\n        /* \"#utility.yul\":1514:1517   */\n      dup3\n        /* \"#utility.yul\":1507:1526   */\n      mstore\n        /* \"#utility.yul\":1559:1563   */\n      0x20\n        /* \"#utility.yul\":1554:1557   */\n      dup3\n        /* \"#utility.yul\":1550:1564   */\n      add\n        /* \"#utility.yul\":1535:1564   */\n      swap1\n      pop\n        /* \"#utility.yul\":1401:1570   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1576:1797   */\n    tag_61:\n        /* \"#utility.yul\":1716:1750   */\n      0x546f2061766f6964206f766572666c6f772c20616c706861203c3d2035206f6e\n        /* \"#utility.yul\":1712:1713   */\n      0x00\n        /* \"#utility.yul\":1704:1710   */\n      dup3\n        /* \"#utility.yul\":1700:1714   */\n      add\n        /* \"#utility.yul\":1693:1751   */\n      mstore\n        /* \"#utility.yul\":1785:1789   */\n      0x6c79000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1780:1782   */\n      0x20\n        /* \"#utility.yul\":1772:1778   */\n      dup3\n        /* \"#utility.yul\":1768:1783   */\n      add\n        /* \"#utility.yul\":1761:1790   */\n      mstore\n        /* \"#utility.yul\":1576:1797   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:2169   */\n    tag_62:\n        /* \"#utility.yul\":1945:1948   */\n      0x00\n        /* \"#utility.yul\":1966:2033   */\n      tag_95\n        /* \"#utility.yul\":2030:2032   */\n      0x22\n        /* \"#utility.yul\":2025:2028   */\n      dup4\n        /* \"#utility.yul\":1966:2033   */\n      tag_60\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1959:2033   */\n      swap2\n      pop\n        /* \"#utility.yul\":2042:2135   */\n      tag_96\n        /* \"#utility.yul\":2131:2134   */\n      dup3\n        /* \"#utility.yul\":2042:2135   */\n      tag_61\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2160:2162   */\n      0x40\n        /* \"#utility.yul\":2155:2158   */\n      dup3\n        /* \"#utility.yul\":2151:2163   */\n      add\n        /* \"#utility.yul\":2144:2163   */\n      swap1\n      pop\n        /* \"#utility.yul\":1803:2169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2175:2594   */\n    tag_12:\n        /* \"#utility.yul\":2341:2345   */\n      0x00\n        /* \"#utility.yul\":2379:2381   */\n      0x20\n        /* \"#utility.yul\":2368:2377   */\n      dup3\n        /* \"#utility.yul\":2364:2382   */\n      add\n        /* \"#utility.yul\":2356:2382   */\n      swap1\n      pop\n        /* \"#utility.yul\":2428:2437   */\n      dup2\n        /* \"#utility.yul\":2422:2426   */\n      dup2\n        /* \"#utility.yul\":2418:2438   */\n      sub\n        /* \"#utility.yul\":2414:2415   */\n      0x00\n        /* \"#utility.yul\":2403:2412   */\n      dup4\n        /* \"#utility.yul\":2399:2416   */\n      add\n        /* \"#utility.yul\":2392:2439   */\n      mstore\n        /* \"#utility.yul\":2456:2587   */\n      tag_98\n        /* \"#utility.yul\":2582:2586   */\n      dup2\n        /* \"#utility.yul\":2456:2587   */\n      tag_62\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2448:2587   */\n      swap1\n      pop\n        /* \"#utility.yul\":2175:2594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2600:2851   */\n    tag_63:\n        /* \"#utility.yul\":2740:2774   */\n      0x4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63\n        /* \"#utility.yul\":2736:2737   */\n      0x00\n        /* \"#utility.yul\":2728:2734   */\n      dup3\n        /* \"#utility.yul\":2724:2738   */\n      add\n        /* \"#utility.yul\":2717:2775   */\n      mstore\n        /* \"#utility.yul\":2809:2843   */\n      0x756c617465207469636b657420707269636520696e20692a2a5f616c7068612e\n        /* \"#utility.yul\":2804:2806   */\n      0x20\n        /* \"#utility.yul\":2796:2802   */\n      dup3\n        /* \"#utility.yul\":2792:2807   */\n      add\n        /* \"#utility.yul\":2785:2844   */\n      mstore\n        /* \"#utility.yul\":2600:2851   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2857:3223   */\n    tag_64:\n        /* \"#utility.yul\":2999:3002   */\n      0x00\n        /* \"#utility.yul\":3020:3087   */\n      tag_101\n        /* \"#utility.yul\":3084:3086   */\n      0x40\n        /* \"#utility.yul\":3079:3082   */\n      dup4\n        /* \"#utility.yul\":3020:3087   */\n      tag_60\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3013:3087   */\n      swap2\n      pop\n        /* \"#utility.yul\":3096:3189   */\n      tag_102\n        /* \"#utility.yul\":3185:3188   */\n      dup3\n        /* \"#utility.yul\":3096:3189   */\n      tag_63\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3214:3216   */\n      0x40\n        /* \"#utility.yul\":3209:3212   */\n      dup3\n        /* \"#utility.yul\":3205:3217   */\n      add\n        /* \"#utility.yul\":3198:3217   */\n      swap1\n      pop\n        /* \"#utility.yul\":2857:3223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3229:3648   */\n    tag_20:\n        /* \"#utility.yul\":3395:3399   */\n      0x00\n        /* \"#utility.yul\":3433:3435   */\n      0x20\n        /* \"#utility.yul\":3422:3431   */\n      dup3\n        /* \"#utility.yul\":3418:3436   */\n      add\n        /* \"#utility.yul\":3410:3436   */\n      swap1\n      pop\n        /* \"#utility.yul\":3482:3491   */\n      dup2\n        /* \"#utility.yul\":3476:3480   */\n      dup2\n        /* \"#utility.yul\":3472:3492   */\n      sub\n        /* \"#utility.yul\":3468:3469   */\n      0x00\n        /* \"#utility.yul\":3457:3466   */\n      dup4\n        /* \"#utility.yul\":3453:3470   */\n      add\n        /* \"#utility.yul\":3446:3493   */\n      mstore\n        /* \"#utility.yul\":3510:3641   */\n      tag_104\n        /* \"#utility.yul\":3636:3640   */\n      dup2\n        /* \"#utility.yul\":3510:3641   */\n      tag_64\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":3502:3641   */\n      swap1\n      pop\n        /* \"#utility.yul\":3229:3648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3654:3834   */\n    tag_65:\n        /* \"#utility.yul\":3702:3779   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3699:3700   */\n      0x00\n        /* \"#utility.yul\":3692:3780   */\n      mstore\n        /* \"#utility.yul\":3799:3803   */\n      0x11\n        /* \"#utility.yul\":3796:3797   */\n      0x04\n        /* \"#utility.yul\":3789:3804   */\n      mstore\n        /* \"#utility.yul\":3823:3827   */\n      0x24\n        /* \"#utility.yul\":3820:3821   */\n      0x00\n        /* \"#utility.yul\":3813:3828   */\n      revert\n        /* \"#utility.yul\":3840:4073   */\n    tag_22:\n        /* \"#utility.yul\":3879:3882   */\n      0x00\n        /* \"#utility.yul\":3902:3926   */\n      tag_107\n        /* \"#utility.yul\":3920:3925   */\n      dup3\n        /* \"#utility.yul\":3902:3926   */\n      tag_56\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3893:3926   */\n      swap2\n      pop\n        /* \"#utility.yul\":3948:4014   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3941:3946   */\n      dup3\n        /* \"#utility.yul\":3938:4015   */\n      sub\n        /* \"#utility.yul\":3935:4038   */\n      tag_108\n      jumpi\n        /* \"#utility.yul\":4018:4036   */\n      tag_109\n      tag_65\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3935:4038   */\n    tag_108:\n        /* \"#utility.yul\":4065:4066   */\n      0x01\n        /* \"#utility.yul\":4058:4063   */\n      dup3\n        /* \"#utility.yul\":4054:4067   */\n      add\n        /* \"#utility.yul\":4047:4067   */\n      swap1\n      pop\n        /* \"#utility.yul\":3840:4073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4079:4373   */\n    tag_66:\n        /* \"#utility.yul\":4219:4253   */\n      0x4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63\n        /* \"#utility.yul\":4215:4216   */\n      0x00\n        /* \"#utility.yul\":4207:4213   */\n      dup3\n        /* \"#utility.yul\":4203:4217   */\n      add\n        /* \"#utility.yul\":4196:4254   */\n      mstore\n        /* \"#utility.yul\":4288:4322   */\n      0x756c617465207469636b657420707269636520696e205f626574612a692a2a5f\n        /* \"#utility.yul\":4283:4285   */\n      0x20\n        /* \"#utility.yul\":4275:4281   */\n      dup3\n        /* \"#utility.yul\":4271:4286   */\n      add\n        /* \"#utility.yul\":4264:4323   */\n      mstore\n        /* \"#utility.yul\":4357:4365   */\n      0x616c7068612e0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4352:4354   */\n      0x40\n        /* \"#utility.yul\":4344:4350   */\n      dup3\n        /* \"#utility.yul\":4340:4355   */\n      add\n        /* \"#utility.yul\":4333:4366   */\n      mstore\n        /* \"#utility.yul\":4079:4373   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4379:4745   */\n    tag_67:\n        /* \"#utility.yul\":4521:4524   */\n      0x00\n        /* \"#utility.yul\":4542:4609   */\n      tag_112\n        /* \"#utility.yul\":4606:4608   */\n      0x46\n        /* \"#utility.yul\":4601:4604   */\n      dup4\n        /* \"#utility.yul\":4542:4609   */\n      tag_60\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":4535:4609   */\n      swap2\n      pop\n        /* \"#utility.yul\":4618:4711   */\n      tag_113\n        /* \"#utility.yul\":4707:4710   */\n      dup3\n        /* \"#utility.yul\":4618:4711   */\n      tag_66\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":4736:4738   */\n      0x60\n        /* \"#utility.yul\":4731:4734   */\n      dup3\n        /* \"#utility.yul\":4727:4739   */\n      add\n        /* \"#utility.yul\":4720:4739   */\n      swap1\n      pop\n        /* \"#utility.yul\":4379:4745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4751:5170   */\n    tag_26:\n        /* \"#utility.yul\":4917:4921   */\n      0x00\n        /* \"#utility.yul\":4955:4957   */\n      0x20\n        /* \"#utility.yul\":4944:4953   */\n      dup3\n        /* \"#utility.yul\":4940:4958   */\n      add\n        /* \"#utility.yul\":4932:4958   */\n      swap1\n      pop\n        /* \"#utility.yul\":5004:5013   */\n      dup2\n        /* \"#utility.yul\":4998:5002   */\n      dup2\n        /* \"#utility.yul\":4994:5014   */\n      sub\n        /* \"#utility.yul\":4990:4991   */\n      0x00\n        /* \"#utility.yul\":4979:4988   */\n      dup4\n        /* \"#utility.yul\":4975:4992   */\n      add\n        /* \"#utility.yul\":4968:5015   */\n      mstore\n        /* \"#utility.yul\":5032:5163   */\n      tag_115\n        /* \"#utility.yul\":5158:5162   */\n      dup2\n        /* \"#utility.yul\":5032:5163   */\n      tag_67\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":5024:5163   */\n      swap1\n      pop\n        /* \"#utility.yul\":4751:5170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5176:5483   */\n    tag_68:\n        /* \"#utility.yul\":5316:5350   */\n      0x4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63\n        /* \"#utility.yul\":5312:5313   */\n      0x00\n        /* \"#utility.yul\":5304:5310   */\n      dup3\n        /* \"#utility.yul\":5300:5314   */\n      add\n        /* \"#utility.yul\":5293:5351   */\n      mstore\n        /* \"#utility.yul\":5385:5419   */\n      0x756c617465207469636b657420707269636520696e205f626574612f5f64656e\n        /* \"#utility.yul\":5380:5382   */\n      0x20\n        /* \"#utility.yul\":5372:5378   */\n      dup3\n        /* \"#utility.yul\":5368:5383   */\n      add\n        /* \"#utility.yul\":5361:5420   */\n      mstore\n        /* \"#utility.yul\":5454:5475   */\n      0x6f6d696e61746f722a692a2a5f616c7068612e00000000000000000000000000\n        /* \"#utility.yul\":5449:5451   */\n      0x40\n        /* \"#utility.yul\":5441:5447   */\n      dup3\n        /* \"#utility.yul\":5437:5452   */\n      add\n        /* \"#utility.yul\":5430:5476   */\n      mstore\n        /* \"#utility.yul\":5176:5483   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5489:5855   */\n    tag_69:\n        /* \"#utility.yul\":5631:5634   */\n      0x00\n        /* \"#utility.yul\":5652:5719   */\n      tag_118\n        /* \"#utility.yul\":5716:5718   */\n      0x53\n        /* \"#utility.yul\":5711:5714   */\n      dup4\n        /* \"#utility.yul\":5652:5719   */\n      tag_60\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":5645:5719   */\n      swap2\n      pop\n        /* \"#utility.yul\":5728:5821   */\n      tag_119\n        /* \"#utility.yul\":5817:5820   */\n      dup3\n        /* \"#utility.yul\":5728:5821   */\n      tag_68\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":5846:5848   */\n      0x60\n        /* \"#utility.yul\":5841:5844   */\n      dup3\n        /* \"#utility.yul\":5837:5849   */\n      add\n        /* \"#utility.yul\":5830:5849   */\n      swap1\n      pop\n        /* \"#utility.yul\":5489:5855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5861:6280   */\n    tag_31:\n        /* \"#utility.yul\":6027:6031   */\n      0x00\n        /* \"#utility.yul\":6065:6067   */\n      0x20\n        /* \"#utility.yul\":6054:6063   */\n      dup3\n        /* \"#utility.yul\":6050:6068   */\n      add\n        /* \"#utility.yul\":6042:6068   */\n      swap1\n      pop\n        /* \"#utility.yul\":6114:6123   */\n      dup2\n        /* \"#utility.yul\":6108:6112   */\n      dup2\n        /* \"#utility.yul\":6104:6124   */\n      sub\n        /* \"#utility.yul\":6100:6101   */\n      0x00\n        /* \"#utility.yul\":6089:6098   */\n      dup4\n        /* \"#utility.yul\":6085:6102   */\n      add\n        /* \"#utility.yul\":6078:6125   */\n      mstore\n        /* \"#utility.yul\":6142:6273   */\n      tag_121\n        /* \"#utility.yul\":6268:6272   */\n      dup2\n        /* \"#utility.yul\":6142:6273   */\n      tag_69\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":6134:6273   */\n      swap1\n      pop\n        /* \"#utility.yul\":5861:6280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6286:6602   */\n    tag_70:\n        /* \"#utility.yul\":6426:6460   */\n      0x4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63\n        /* \"#utility.yul\":6422:6423   */\n      0x00\n        /* \"#utility.yul\":6414:6420   */\n      dup3\n        /* \"#utility.yul\":6410:6424   */\n      add\n        /* \"#utility.yul\":6403:6461   */\n      mstore\n        /* \"#utility.yul\":6495:6529   */\n      0x756c617465207469636b657420707269636520696e20285f626574612f5f6465\n        /* \"#utility.yul\":6490:6492   */\n      0x20\n        /* \"#utility.yul\":6482:6488   */\n      dup3\n        /* \"#utility.yul\":6478:6493   */\n      add\n        /* \"#utility.yul\":6471:6530   */\n      mstore\n        /* \"#utility.yul\":6564:6594   */\n      0x6e6f6d696e61746f722a692a2a5f616c706861292a31302a2a31382e00000000\n        /* \"#utility.yul\":6559:6561   */\n      0x40\n        /* \"#utility.yul\":6551:6557   */\n      dup3\n        /* \"#utility.yul\":6547:6562   */\n      add\n        /* \"#utility.yul\":6540:6595   */\n      mstore\n        /* \"#utility.yul\":6286:6602   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6608:6974   */\n    tag_71:\n        /* \"#utility.yul\":6750:6753   */\n      0x00\n        /* \"#utility.yul\":6771:6838   */\n      tag_124\n        /* \"#utility.yul\":6835:6837   */\n      0x5c\n        /* \"#utility.yul\":6830:6833   */\n      dup4\n        /* \"#utility.yul\":6771:6838   */\n      tag_60\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":6764:6838   */\n      swap2\n      pop\n        /* \"#utility.yul\":6847:6940   */\n      tag_125\n        /* \"#utility.yul\":6936:6939   */\n      dup3\n        /* \"#utility.yul\":6847:6940   */\n      tag_70\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":6965:6967   */\n      0x60\n        /* \"#utility.yul\":6960:6963   */\n      dup3\n        /* \"#utility.yul\":6956:6968   */\n      add\n        /* \"#utility.yul\":6949:6968   */\n      swap1\n      pop\n        /* \"#utility.yul\":6608:6974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7399   */\n    tag_35:\n        /* \"#utility.yul\":7146:7150   */\n      0x00\n        /* \"#utility.yul\":7184:7186   */\n      0x20\n        /* \"#utility.yul\":7173:7182   */\n      dup3\n        /* \"#utility.yul\":7169:7187   */\n      add\n        /* \"#utility.yul\":7161:7187   */\n      swap1\n      pop\n        /* \"#utility.yul\":7233:7242   */\n      dup2\n        /* \"#utility.yul\":7227:7231   */\n      dup2\n        /* \"#utility.yul\":7223:7243   */\n      sub\n        /* \"#utility.yul\":7219:7220   */\n      0x00\n        /* \"#utility.yul\":7208:7217   */\n      dup4\n        /* \"#utility.yul\":7204:7221   */\n      add\n        /* \"#utility.yul\":7197:7244   */\n      mstore\n        /* \"#utility.yul\":7261:7392   */\n      tag_127\n        /* \"#utility.yul\":7387:7391   */\n      dup2\n        /* \"#utility.yul\":7261:7392   */\n      tag_71\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":7253:7392   */\n      swap1\n      pop\n        /* \"#utility.yul\":6980:7399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7405:7720   */\n    tag_72:\n        /* \"#utility.yul\":7545:7579   */\n      0x4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63\n        /* \"#utility.yul\":7541:7542   */\n      0x00\n        /* \"#utility.yul\":7533:7539   */\n      dup3\n        /* \"#utility.yul\":7529:7543   */\n      add\n        /* \"#utility.yul\":7522:7580   */\n      mstore\n        /* \"#utility.yul\":7614:7648   */\n      0x756c617465207469636b657420707269636520696e205f626574612f5f64656e\n        /* \"#utility.yul\":7609:7611   */\n      0x20\n        /* \"#utility.yul\":7601:7607   */\n      dup3\n        /* \"#utility.yul\":7597:7612   */\n      add\n        /* \"#utility.yul\":7590:7649   */\n      mstore\n        /* \"#utility.yul\":7683:7712   */\n      0x6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e0000000000\n        /* \"#utility.yul\":7678:7680   */\n      0x40\n        /* \"#utility.yul\":7670:7676   */\n      dup3\n        /* \"#utility.yul\":7666:7681   */\n      add\n        /* \"#utility.yul\":7659:7713   */\n      mstore\n        /* \"#utility.yul\":7405:7720   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7726:8092   */\n    tag_73:\n        /* \"#utility.yul\":7868:7871   */\n      0x00\n        /* \"#utility.yul\":7889:7956   */\n      tag_130\n        /* \"#utility.yul\":7953:7955   */\n      0x5b\n        /* \"#utility.yul\":7948:7951   */\n      dup4\n        /* \"#utility.yul\":7889:7956   */\n      tag_60\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":7882:7956   */\n      swap2\n      pop\n        /* \"#utility.yul\":7965:8058   */\n      tag_131\n        /* \"#utility.yul\":8054:8057   */\n      dup3\n        /* \"#utility.yul\":7965:8058   */\n      tag_72\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":8083:8085   */\n      0x60\n        /* \"#utility.yul\":8078:8081   */\n      dup3\n        /* \"#utility.yul\":8074:8086   */\n      add\n        /* \"#utility.yul\":8067:8086   */\n      swap1\n      pop\n        /* \"#utility.yul\":7726:8092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8098:8517   */\n    tag_40:\n        /* \"#utility.yul\":8264:8268   */\n      0x00\n        /* \"#utility.yul\":8302:8304   */\n      0x20\n        /* \"#utility.yul\":8291:8300   */\n      dup3\n        /* \"#utility.yul\":8287:8305   */\n      add\n        /* \"#utility.yul\":8279:8305   */\n      swap1\n      pop\n        /* \"#utility.yul\":8351:8360   */\n      dup2\n        /* \"#utility.yul\":8345:8349   */\n      dup2\n        /* \"#utility.yul\":8341:8361   */\n      sub\n        /* \"#utility.yul\":8337:8338   */\n      0x00\n        /* \"#utility.yul\":8326:8335   */\n      dup4\n        /* \"#utility.yul\":8322:8339   */\n      add\n        /* \"#utility.yul\":8315:8362   */\n      mstore\n        /* \"#utility.yul\":8379:8510   */\n      tag_133\n        /* \"#utility.yul\":8505:8509   */\n      dup2\n        /* \"#utility.yul\":8379:8510   */\n      tag_73\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":8371:8510   */\n      swap1\n      pop\n        /* \"#utility.yul\":8098:8517   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8523:8703   */\n    tag_45:\n        /* \"#utility.yul\":8571:8648   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8568:8569   */\n      0x00\n        /* \"#utility.yul\":8561:8649   */\n      mstore\n        /* \"#utility.yul\":8668:8672   */\n      0x12\n        /* \"#utility.yul\":8665:8666   */\n      0x04\n        /* \"#utility.yul\":8658:8673   */\n      mstore\n        /* \"#utility.yul\":8692:8696   */\n      0x24\n        /* \"#utility.yul\":8689:8690   */\n      0x00\n        /* \"#utility.yul\":8682:8697   */\n      revert\n\n    auxdata: 0xa2646970667358221220e9a8139cdcbdb6ceaab2fd96b2ab5291f02e031b434b8e5adb0bb54dc1b173bc64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6108ce610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80630d93e6091461003a575b600080fd5b610054600480360381019061004f9190610386565b61006a565b60405161006191906103c2565b60405180910390f35b60006005600211156100b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100a890610460565b60405180910390fd5b60006001905060006001905060005b600281101561012e576100d38286610293565b80935081945050508261011b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610112906104f2565b60405180910390fd5b808061012690610541565b9150506100c0565b5061013a816064610293565b809250819350505081610182576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017990610621565b60405180910390fd5b61018e816103e86102e6565b8092508193505050816101d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cd906106d9565b60405180910390fd5b6101e881670de0b6b3a7640000610293565b809250819350505081610230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022790610791565b60405180910390fd5b61024181662386f26fc1000061031c565b809250819350505081610289576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028090610849565b60405180910390fd5b8092505050919050565b600080600084036102ab5760016000915091506102df565b60008385029050838582816102c3576102c2610869565b5b04146102d65760008092509250506102df565b60018192509250505b9250929050565b600080600083036102fd5760008091509150610315565b600183858161030f5761030e610869565b5b04915091505b9250929050565b600080600083850190508481101561033b576000809250925050610344565b60018192509250505b9250929050565b600080fd5b6000819050919050565b61036381610350565b811461036e57600080fd5b50565b6000813590506103808161035a565b92915050565b60006020828403121561039c5761039b61034b565b5b60006103aa84828501610371565b91505092915050565b6103bc81610350565b82525050565b60006020820190506103d760008301846103b3565b92915050565b600082825260208201905092915050565b7f546f2061766f6964206f766572666c6f772c20616c706861203c3d2035206f6e60008201527f6c79000000000000000000000000000000000000000000000000000000000000602082015250565b600061044a6022836103dd565b9150610455826103ee565b604082019050919050565b600060208201905081810360008301526104798161043d565b9050919050565b7f4e756d626572206f766572666c6f77206f6363757273207768656e2063616c6360008201527f756c617465207469636b657420707269636520696e20692a2a5f616c7068612e602082015250565b60006104dc6040836103dd565b91506104e782610480565b604082019050919050565b6000602082019050818103600083015261050b816104cf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061054c82610350565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361057e5761057d610512565b5b600182019050919050565b7f4e756d626572206f766572666c6f77206f6363757273207768656e2063616c6360008201527f756c617465207469636b657420707269636520696e205f626574612a692a2a5f60208201527f616c7068612e0000000000000000000000000000000000000000000000000000604082015250565b600061060b6046836103dd565b915061061682610589565b606082019050919050565b6000602082019050818103600083015261063a816105fe565b9050919050565b7f4e756d626572206f766572666c6f77206f6363757273207768656e2063616c6360008201527f756c617465207469636b657420707269636520696e205f626574612f5f64656e60208201527f6f6d696e61746f722a692a2a5f616c7068612e00000000000000000000000000604082015250565b60006106c36053836103dd565b91506106ce82610641565b606082019050919050565b600060208201905081810360008301526106f2816106b6565b9050919050565b7f4e756d626572206f766572666c6f77206f6363757273207768656e2063616c6360008201527f756c617465207469636b657420707269636520696e20285f626574612f5f646560208201527f6e6f6d696e61746f722a692a2a5f616c706861292a31302a2a31382e00000000604082015250565b600061077b605c836103dd565b9150610786826106f9565b606082019050919050565b600060208201905081810360008301526107aa8161076e565b9050919050565b7f4e756d626572206f766572666c6f77206f6363757273207768656e2063616c6360008201527f756c617465207469636b657420707269636520696e205f626574612f5f64656e60208201527f6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e0000000000604082015250565b6000610833605b836103dd565b915061083e826107b1565b606082019050919050565b6000602082019050818103600083015261086281610826565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220e9a8139cdcbdb6ceaab2fd96b2ab5291f02e031b434b8e5adb0bb54dc1b173bc64736f6c63430008120033",
							"opcodes": "PUSH2 0x8CE PUSH2 0x53 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD93E609 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x2 GT ISZERO PUSH2 0xB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8 SWAP1 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x12E JUMPI PUSH2 0xD3 DUP3 DUP7 PUSH2 0x293 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP DUP3 PUSH2 0x11B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x126 SWAP1 PUSH2 0x541 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC0 JUMP JUMPDEST POP PUSH2 0x13A DUP2 PUSH1 0x64 PUSH2 0x293 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH2 0x182 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179 SWAP1 PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x3E8 PUSH2 0x2E6 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH2 0x1D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E8 DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x293 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH2 0x230 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x227 SWAP1 PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x241 DUP2 PUSH7 0x2386F26FC10000 PUSH2 0x31C JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH2 0x289 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x280 SWAP1 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 SUB PUSH2 0x2AB JUMPI PUSH1 0x1 PUSH1 0x0 SWAP2 POP SWAP2 POP PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x0 DUP4 DUP6 MUL SWAP1 POP DUP4 DUP6 DUP3 DUP2 PUSH2 0x2C3 JUMPI PUSH2 0x2C2 PUSH2 0x869 JUMP JUMPDEST JUMPDEST DIV EQ PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SUB PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x315 JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x30F JUMPI PUSH2 0x30E PUSH2 0x869 JUMP JUMPDEST JUMPDEST DIV SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP6 ADD SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x363 DUP2 PUSH2 0x350 JUMP JUMPDEST DUP2 EQ PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x380 DUP2 PUSH2 0x35A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39C JUMPI PUSH2 0x39B PUSH2 0x34B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AA DUP5 DUP3 DUP6 ADD PUSH2 0x371 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3BC DUP2 PUSH2 0x350 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F2061766F6964206F766572666C6F772C20616C706861203C3D2035206F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C79000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44A PUSH1 0x22 DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x455 DUP3 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x479 DUP2 PUSH2 0x43D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2063616C63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E20692A2A5F616C7068612E PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC PUSH1 0x40 DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x4E7 DUP3 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x50B DUP2 PUSH2 0x4CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x54C DUP3 PUSH2 0x350 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x57E JUMPI PUSH2 0x57D PUSH2 0x512 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2063616C63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612A692A2A5F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x616C7068612E0000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60B PUSH1 0x46 DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x616 DUP3 PUSH2 0x589 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x63A DUP2 PUSH2 0x5FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2063616C63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612F5F64656E PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F6D696E61746F722A692A2A5F616C7068612E00000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C3 PUSH1 0x53 DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x6CE DUP3 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6F2 DUP2 PUSH2 0x6B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2063616C63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E20285F626574612F5F6465 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6E6F6D696E61746F722A692A2A5F616C706861292A31302A2A31382E00000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77B PUSH1 0x5C DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x786 DUP3 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7AA DUP2 PUSH2 0x76E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2063616C63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612F5F64656E PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F6D696E61746F722A692A2A5F616C706861202B2067616D6D612E0000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x833 PUSH1 0x5B DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x83E DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x862 DUP2 PUSH2 0x826 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0xA8 SGT SWAP13 0xDC 0xBD 0xB6 0xCE 0xAA 0xB2 REVERT SWAP7 0xB2 0xAB MSTORE SWAP2 CREATE 0x2E SUB SHL NUMBER 0x4B DUP15 GAS 0xDB SIGNEXTEND 0xB5 0x4D 0xC1 0xB1 PUSH20 0xBC64736F6C634300081200330000000000000000 ",
							"sourceMap": "123:1416:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ticketPrice_444": {
									"entryPoint": 106,
									"id": 444,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tryAdd_34": {
									"entryPoint": 796,
									"id": 34,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryDiv_132": {
									"entryPoint": 742,
									"id": 132,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryMul_104": {
									"entryPoint": 659,
									"id": 104,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack_library": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": 962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1298,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 843,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa": {
									"entryPoint": 1152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883": {
									"entryPoint": 1785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452": {
									"entryPoint": 1006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81": {
									"entryPoint": 1601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8706:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													}
												],
												"src": "545:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:2"
															},
															"nodeType": "YulIf",
															"src": "766:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:2",
														"type": ""
													}
												],
												"src": "690:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1098:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1115:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1138:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1120:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1120:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1108:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1108:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1108:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1086:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1093:3:2",
														"type": ""
													}
												],
												"src": "1025:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1263:132:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1273:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1285:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1296:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1281:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1281:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1273:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1361:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1374:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1385:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1370:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1370:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "1309:51:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:79:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1309:79:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1235:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1247:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1258:4:2",
														"type": ""
													}
												],
												"src": "1157:238:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1497:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1514:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1519:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1507:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1507:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1535:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1554:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1559:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1550:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1550:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1535:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1469:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1474:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1485:11:2",
														"type": ""
													}
												],
												"src": "1401:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1682:115:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1704:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1712:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1700:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1700:14:2"
																	},
																	{
																		"hexValue": "546f2061766f6964206f766572666c6f772c20616c706861203c3d2035206f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1716:34:2",
																		"type": "",
																		"value": "To avoid overflow, alpha <= 5 on"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1693:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1693:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1772:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1780:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1768:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1768:15:2"
																	},
																	{
																		"hexValue": "6c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1785:4:2",
																		"type": "",
																		"value": "ly"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1761:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:29:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1761:29:2"
														}
													]
												},
												"name": "store_literal_in_memory_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1674:6:2",
														"type": ""
													}
												],
												"src": "1576:221:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1949:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1959:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2025:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2030:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1966:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1959:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2131:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452",
																	"nodeType": "YulIdentifier",
																	"src": "2042:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2042:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2144:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2155:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2160:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2151:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2151:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2144:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1937:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1945:3:2",
														"type": ""
													}
												],
												"src": "1803:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2346:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2356:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2368:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2379:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2364:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2364:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2356:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2403:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2414:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2399:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2399:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2422:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2428:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2418:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2418:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2392:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2392:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2392:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2448:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2582:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2456:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2456:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2448:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2326:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2341:4:2",
														"type": ""
													}
												],
												"src": "2175:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2706:145:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2728:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2736:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2724:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2724:14:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2740:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2717:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2717:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2717:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2796:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2804:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2792:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2792:15:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e20692a2a5f616c7068612e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2809:34:2",
																		"type": "",
																		"value": "ulate ticket price in i**_alpha."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2785:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2785:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2785:59:2"
														}
													]
												},
												"name": "store_literal_in_memory_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2698:6:2",
														"type": ""
													}
												],
												"src": "2600:251:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3003:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3013:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3079:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3084:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3020:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3020:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3013:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3185:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa",
																	"nodeType": "YulIdentifier",
																	"src": "3096:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3096:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3096:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3198:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3209:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3214:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3205:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3205:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3198:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2991:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2999:3:2",
														"type": ""
													}
												],
												"src": "2857:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3400:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3410:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3422:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3433:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3418:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3418:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3410:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3457:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3468:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3453:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3453:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3476:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3482:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3472:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3446:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3446:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3446:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3502:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3636:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3510:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3502:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3380:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3395:4:2",
														"type": ""
													}
												],
												"src": "3229:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3682:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3699:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3702:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3692:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3692:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3692:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3796:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3799:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3789:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3789:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3789:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3820:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3823:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3813:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3813:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3813:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3654:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3883:190:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3893:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3920:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3902:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3902:24:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3893:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4016:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4018:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4018:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4018:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3941:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3948:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3938:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3938:77:2"
															},
															"nodeType": "YulIf",
															"src": "3935:103:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4047:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4058:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4065:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4054:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4054:13:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4047:3:2"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3869:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3879:3:2",
														"type": ""
													}
												],
												"src": "3840:233:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4185:188:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4207:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4215:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4203:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4203:14:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4219:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4196:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4275:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4283:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4271:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4271:15:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e205f626574612a692a2a5f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4288:34:2",
																		"type": "",
																		"value": "ulate ticket price in _beta*i**_"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4264:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4264:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4264:59:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4344:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4352:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4340:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4340:15:2"
																	},
																	{
																		"hexValue": "616c7068612e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4357:8:2",
																		"type": "",
																		"value": "alpha."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4333:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4333:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4333:33:2"
														}
													]
												},
												"name": "store_literal_in_memory_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4177:6:2",
														"type": ""
													}
												],
												"src": "4079:294:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4525:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4535:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4601:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4606:2:2",
																		"type": "",
																		"value": "70"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4542:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4542:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4535:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4707:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4",
																	"nodeType": "YulIdentifier",
																	"src": "4618:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4618:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4618:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4720:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4731:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4736:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4727:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4720:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4513:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4521:3:2",
														"type": ""
													}
												],
												"src": "4379:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4922:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4932:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4944:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4955:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4940:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4940:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4932:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4979:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4990:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4975:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4975:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4998:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5004:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4994:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4994:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4968:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4968:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5024:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5158:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5032:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5032:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5024:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4902:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4917:4:2",
														"type": ""
													}
												],
												"src": "4751:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5282:201:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5304:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5312:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5300:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5300:14:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5316:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5293:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5293:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5293:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5372:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5380:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5368:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5368:15:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e205f626574612f5f64656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5385:34:2",
																		"type": "",
																		"value": "ulate ticket price in _beta/_den"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5361:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5361:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5361:59:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5441:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5449:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5437:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5437:15:2"
																	},
																	{
																		"hexValue": "6f6d696e61746f722a692a2a5f616c7068612e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5454:21:2",
																		"type": "",
																		"value": "ominator*i**_alpha."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5430:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5430:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5430:46:2"
														}
													]
												},
												"name": "store_literal_in_memory_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5274:6:2",
														"type": ""
													}
												],
												"src": "5176:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5635:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5645:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5711:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5716:2:2",
																		"type": "",
																		"value": "83"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5652:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5652:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5645:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5817:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81",
																	"nodeType": "YulIdentifier",
																	"src": "5728:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5728:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5728:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5830:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5841:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5846:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5837:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5837:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5830:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5623:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5631:3:2",
														"type": ""
													}
												],
												"src": "5489:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6032:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6042:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6054:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6065:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6050:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6050:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6042:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6089:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6100:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6085:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6085:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6108:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6114:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6104:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6104:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6078:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6078:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6078:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6134:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6268:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6142:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6142:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6134:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6012:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6027:4:2",
														"type": ""
													}
												],
												"src": "5861:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6392:210:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6414:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6422:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6410:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6410:14:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6426:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6403:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6403:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6403:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6482:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6490:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6478:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6478:15:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e20285f626574612f5f6465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6495:34:2",
																		"type": "",
																		"value": "ulate ticket price in (_beta/_de"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6471:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6471:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6471:59:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6551:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6559:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6547:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6547:15:2"
																	},
																	{
																		"hexValue": "6e6f6d696e61746f722a692a2a5f616c706861292a31302a2a31382e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6564:30:2",
																		"type": "",
																		"value": "nominator*i**_alpha)*10**18."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6540:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6540:55:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6540:55:2"
														}
													]
												},
												"name": "store_literal_in_memory_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6384:6:2",
														"type": ""
													}
												],
												"src": "6286:316:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6754:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6764:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6830:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6835:2:2",
																		"type": "",
																		"value": "92"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6771:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6771:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6764:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6936:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883",
																	"nodeType": "YulIdentifier",
																	"src": "6847:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6847:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6847:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6949:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6960:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6965:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6956:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6949:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6742:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6750:3:2",
														"type": ""
													}
												],
												"src": "6608:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7151:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7161:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7173:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7184:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7169:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7169:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7161:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7208:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7219:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7204:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7204:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7227:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7233:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7223:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7223:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7197:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7197:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7197:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7253:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7387:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7261:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7261:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7253:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7131:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7146:4:2",
														"type": ""
													}
												],
												"src": "6980:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7511:209:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7533:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7541:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7529:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7529:14:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7545:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7522:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7522:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7522:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7601:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7609:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7597:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7597:15:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e205f626574612f5f64656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7614:34:2",
																		"type": "",
																		"value": "ulate ticket price in _beta/_den"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7590:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7590:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7590:59:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7670:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7678:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7666:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7666:15:2"
																	},
																	{
																		"hexValue": "6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7683:29:2",
																		"type": "",
																		"value": "ominator*i**_alpha + gamma."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7659:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7659:54:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7659:54:2"
														}
													]
												},
												"name": "store_literal_in_memory_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7503:6:2",
														"type": ""
													}
												],
												"src": "7405:315:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7872:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7882:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7948:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7953:2:2",
																		"type": "",
																		"value": "91"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7889:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7889:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7882:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8054:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb",
																	"nodeType": "YulIdentifier",
																	"src": "7965:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7965:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7965:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8067:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8078:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8083:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8074:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8074:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8067:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7860:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7868:3:2",
														"type": ""
													}
												],
												"src": "7726:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8269:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8279:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8291:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8302:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8287:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8287:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8279:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8326:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8337:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8322:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8322:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8345:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8351:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8341:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8341:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8315:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8315:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8315:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8371:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8505:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8379:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8379:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8371:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8249:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8264:4:2",
														"type": ""
													}
												],
												"src": "8098:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8551:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8568:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8571:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8561:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8561:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8561:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8665:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8668:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8658:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8658:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8658:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8689:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8692:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8682:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8682:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8682:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "8523:180:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452(memPtr) {\n\n        mstore(add(memPtr, 0), \"To avoid overflow, alpha <= 5 on\")\n\n        mstore(add(memPtr, 32), \"ly\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Number overflow occurs when calc\")\n\n        mstore(add(memPtr, 32), \"ulate ticket price in i**_alpha.\")\n\n    }\n\n    function abi_encode_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 64)\n        store_literal_in_memory_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Number overflow occurs when calc\")\n\n        mstore(add(memPtr, 32), \"ulate ticket price in _beta*i**_\")\n\n        mstore(add(memPtr, 64), \"alpha.\")\n\n    }\n\n    function abi_encode_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 70)\n        store_literal_in_memory_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81(memPtr) {\n\n        mstore(add(memPtr, 0), \"Number overflow occurs when calc\")\n\n        mstore(add(memPtr, 32), \"ulate ticket price in _beta/_den\")\n\n        mstore(add(memPtr, 64), \"ominator*i**_alpha.\")\n\n    }\n\n    function abi_encode_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 83)\n        store_literal_in_memory_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883(memPtr) {\n\n        mstore(add(memPtr, 0), \"Number overflow occurs when calc\")\n\n        mstore(add(memPtr, 32), \"ulate ticket price in (_beta/_de\")\n\n        mstore(add(memPtr, 64), \"nominator*i**_alpha)*10**18.\")\n\n    }\n\n    function abi_encode_t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 92)\n        store_literal_in_memory_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Number overflow occurs when calc\")\n\n        mstore(add(memPtr, 32), \"ulate ticket price in _beta/_den\")\n\n        mstore(add(memPtr, 64), \"ominator*i**_alpha + gamma.\")\n\n    }\n\n    function abi_encode_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 91)\n        store_literal_in_memory_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80630d93e6091461003a575b600080fd5b610054600480360381019061004f9190610386565b61006a565b60405161006191906103c2565b60405180910390f35b60006005600211156100b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100a890610460565b60405180910390fd5b60006001905060006001905060005b600281101561012e576100d38286610293565b80935081945050508261011b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610112906104f2565b60405180910390fd5b808061012690610541565b9150506100c0565b5061013a816064610293565b809250819350505081610182576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017990610621565b60405180910390fd5b61018e816103e86102e6565b8092508193505050816101d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cd906106d9565b60405180910390fd5b6101e881670de0b6b3a7640000610293565b809250819350505081610230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022790610791565b60405180910390fd5b61024181662386f26fc1000061031c565b809250819350505081610289576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028090610849565b60405180910390fd5b8092505050919050565b600080600084036102ab5760016000915091506102df565b60008385029050838582816102c3576102c2610869565b5b04146102d65760008092509250506102df565b60018192509250505b9250929050565b600080600083036102fd5760008091509150610315565b600183858161030f5761030e610869565b5b04915091505b9250929050565b600080600083850190508481101561033b576000809250925050610344565b60018192509250505b9250929050565b600080fd5b6000819050919050565b61036381610350565b811461036e57600080fd5b50565b6000813590506103808161035a565b92915050565b60006020828403121561039c5761039b61034b565b5b60006103aa84828501610371565b91505092915050565b6103bc81610350565b82525050565b60006020820190506103d760008301846103b3565b92915050565b600082825260208201905092915050565b7f546f2061766f6964206f766572666c6f772c20616c706861203c3d2035206f6e60008201527f6c79000000000000000000000000000000000000000000000000000000000000602082015250565b600061044a6022836103dd565b9150610455826103ee565b604082019050919050565b600060208201905081810360008301526104798161043d565b9050919050565b7f4e756d626572206f766572666c6f77206f6363757273207768656e2063616c6360008201527f756c617465207469636b657420707269636520696e20692a2a5f616c7068612e602082015250565b60006104dc6040836103dd565b91506104e782610480565b604082019050919050565b6000602082019050818103600083015261050b816104cf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061054c82610350565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361057e5761057d610512565b5b600182019050919050565b7f4e756d626572206f766572666c6f77206f6363757273207768656e2063616c6360008201527f756c617465207469636b657420707269636520696e205f626574612a692a2a5f60208201527f616c7068612e0000000000000000000000000000000000000000000000000000604082015250565b600061060b6046836103dd565b915061061682610589565b606082019050919050565b6000602082019050818103600083015261063a816105fe565b9050919050565b7f4e756d626572206f766572666c6f77206f6363757273207768656e2063616c6360008201527f756c617465207469636b657420707269636520696e205f626574612f5f64656e60208201527f6f6d696e61746f722a692a2a5f616c7068612e00000000000000000000000000604082015250565b60006106c36053836103dd565b91506106ce82610641565b606082019050919050565b600060208201905081810360008301526106f2816106b6565b9050919050565b7f4e756d626572206f766572666c6f77206f6363757273207768656e2063616c6360008201527f756c617465207469636b657420707269636520696e20285f626574612f5f646560208201527f6e6f6d696e61746f722a692a2a5f616c706861292a31302a2a31382e00000000604082015250565b600061077b605c836103dd565b9150610786826106f9565b606082019050919050565b600060208201905081810360008301526107aa8161076e565b9050919050565b7f4e756d626572206f766572666c6f77206f6363757273207768656e2063616c6360008201527f756c617465207469636b657420707269636520696e205f626574612f5f64656e60208201527f6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e0000000000604082015250565b6000610833605b836103dd565b915061083e826107b1565b606082019050919050565b6000602082019050818103600083015261086281610826565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220e9a8139cdcbdb6ceaab2fd96b2ab5291f02e031b434b8e5adb0bb54dc1b173bc64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD93E609 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x386 JUMP JUMPDEST PUSH2 0x6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x2 GT ISZERO PUSH2 0xB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8 SWAP1 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x12E JUMPI PUSH2 0xD3 DUP3 DUP7 PUSH2 0x293 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP DUP3 PUSH2 0x11B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x126 SWAP1 PUSH2 0x541 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC0 JUMP JUMPDEST POP PUSH2 0x13A DUP2 PUSH1 0x64 PUSH2 0x293 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH2 0x182 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x179 SWAP1 PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x3E8 PUSH2 0x2E6 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH2 0x1D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CD SWAP1 PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E8 DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x293 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH2 0x230 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x227 SWAP1 PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x241 DUP2 PUSH7 0x2386F26FC10000 PUSH2 0x31C JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP DUP2 PUSH2 0x289 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x280 SWAP1 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 SUB PUSH2 0x2AB JUMPI PUSH1 0x1 PUSH1 0x0 SWAP2 POP SWAP2 POP PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x0 DUP4 DUP6 MUL SWAP1 POP DUP4 DUP6 DUP3 DUP2 PUSH2 0x2C3 JUMPI PUSH2 0x2C2 PUSH2 0x869 JUMP JUMPDEST JUMPDEST DIV EQ PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SUB PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x315 JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x30F JUMPI PUSH2 0x30E PUSH2 0x869 JUMP JUMPDEST JUMPDEST DIV SWAP2 POP SWAP2 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP6 ADD SWAP1 POP DUP5 DUP2 LT ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x363 DUP2 PUSH2 0x350 JUMP JUMPDEST DUP2 EQ PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x380 DUP2 PUSH2 0x35A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39C JUMPI PUSH2 0x39B PUSH2 0x34B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3AA DUP5 DUP3 DUP6 ADD PUSH2 0x371 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3BC DUP2 PUSH2 0x350 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F2061766F6964206F766572666C6F772C20616C706861203C3D2035206F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C79000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44A PUSH1 0x22 DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x455 DUP3 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x479 DUP2 PUSH2 0x43D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2063616C63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E20692A2A5F616C7068612E PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC PUSH1 0x40 DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x4E7 DUP3 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x50B DUP2 PUSH2 0x4CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x54C DUP3 PUSH2 0x350 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x57E JUMPI PUSH2 0x57D PUSH2 0x512 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2063616C63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612A692A2A5F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x616C7068612E0000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60B PUSH1 0x46 DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x616 DUP3 PUSH2 0x589 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x63A DUP2 PUSH2 0x5FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2063616C63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612F5F64656E PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F6D696E61746F722A692A2A5F616C7068612E00000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C3 PUSH1 0x53 DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x6CE DUP3 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6F2 DUP2 PUSH2 0x6B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2063616C63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E20285F626574612F5F6465 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6E6F6D696E61746F722A692A2A5F616C706861292A31302A2A31382E00000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77B PUSH1 0x5C DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x786 DUP3 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7AA DUP2 PUSH2 0x76E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2063616C63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612F5F64656E PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F6D696E61746F722A692A2A5F616C706861202B2067616D6D612E0000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x833 PUSH1 0x5B DUP4 PUSH2 0x3DD JUMP JUMPDEST SWAP2 POP PUSH2 0x83E DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x862 DUP2 PUSH2 0x826 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0xA8 SGT SWAP13 0xDC 0xBD 0xB6 0xCE 0xAA 0xB2 REVERT SWAP7 0xB2 0xAB MSTORE SWAP2 CREATE 0x2E SUB SHL NUMBER 0x4B DUP15 GAS 0xDB SIGNEXTEND 0xB5 0x4D 0xC1 0xB1 PUSH20 0xBC64736F6C634300081200330000000000000000 ",
							"sourceMap": "123:1416:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;435:1101;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;490:14;535:1;189;525:11;;517:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;588:9;600:4;588:16;;615:10;628:1;615:14;;655:6;650:192;189:1;665;:10;650:192;;;710:24;726:2;730:3;710:15;:24::i;:::-;697:37;;;;;;;;757:4;749:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;677:3;;;;;:::i;:::-;;;;650:192;;;;867:26;883:2;230:3;867:15;:26::i;:::-;854:39;;;;;;;;912:4;904:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1017:33;1033:2;422:4;1017:15;:33::i;:::-;1004:46;;;;;;;;1069:4;1061:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;1187:27;1203:2;1207:6;1187:15;:27::i;:::-;1174:40;;;;;;;;1233:4;1225:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;1360:27;1376:2;319:13;1360:15;:27::i;:::-;1347:40;;;;;;;;1406:4;1398:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;1526:2;1519:9;;;;435:1101;;;:::o;1339:493:0:-;1400:4;1406:7;1688:1;1683;:6;1679:28;;1699:4;1705:1;1691:16;;;;;;1679:28;1721:9;1737:1;1733;:5;1721:17;;1765:1;1760;1756;:5;;;;;:::i;:::-;;;:10;1752:33;;1776:5;1783:1;1768:17;;;;;;;1752:33;1807:4;1813:1;1799:16;;;;;1339:493;;;;;;:::o;1981:190::-;2042:4;2048:7;2100:1;2095;:6;2091:29;;2111:5;2118:1;2103:17;;;;;;2091:29;2142:4;2152:1;2148;:5;;;;;:::i;:::-;;;2134:20;;;;1981:190;;;;;;:::o;641:216::-;702:4;708:7;751:9;767:1;763;:5;751:17;;790:1;786;:5;782:28;;;801:5;808:1;793:17;;;;;;;782:28;832:4;838:1;824:16;;;;;641:216;;;;;;:::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1120:24;1138:5;1120:24;:::i;:::-;1115:3;1108:37;1025:126;;:::o;1157:238::-;1258:4;1296:2;1285:9;1281:18;1273:26;;1309:79;1385:1;1374:9;1370:17;1361:6;1309:79;:::i;:::-;1157:238;;;;:::o;1401:169::-;1485:11;1519:6;1514:3;1507:19;1559:4;1554:3;1550:14;1535:29;;1401:169;;;;:::o;1576:221::-;1716:34;1712:1;1704:6;1700:14;1693:58;1785:4;1780:2;1772:6;1768:15;1761:29;1576:221;:::o;1803:366::-;1945:3;1966:67;2030:2;2025:3;1966:67;:::i;:::-;1959:74;;2042:93;2131:3;2042:93;:::i;:::-;2160:2;2155:3;2151:12;2144:19;;1803:366;;;:::o;2175:419::-;2341:4;2379:2;2368:9;2364:18;2356:26;;2428:9;2422:4;2418:20;2414:1;2403:9;2399:17;2392:47;2456:131;2582:4;2456:131;:::i;:::-;2448:139;;2175:419;;;:::o;2600:251::-;2740:34;2736:1;2728:6;2724:14;2717:58;2809:34;2804:2;2796:6;2792:15;2785:59;2600:251;:::o;2857:366::-;2999:3;3020:67;3084:2;3079:3;3020:67;:::i;:::-;3013:74;;3096:93;3185:3;3096:93;:::i;:::-;3214:2;3209:3;3205:12;3198:19;;2857:366;;;:::o;3229:419::-;3395:4;3433:2;3422:9;3418:18;3410:26;;3482:9;3476:4;3472:20;3468:1;3457:9;3453:17;3446:47;3510:131;3636:4;3510:131;:::i;:::-;3502:139;;3229:419;;;:::o;3654:180::-;3702:77;3699:1;3692:88;3799:4;3796:1;3789:15;3823:4;3820:1;3813:15;3840:233;3879:3;3902:24;3920:5;3902:24;:::i;:::-;3893:33;;3948:66;3941:5;3938:77;3935:103;;4018:18;;:::i;:::-;3935:103;4065:1;4058:5;4054:13;4047:20;;3840:233;;;:::o;4079:294::-;4219:34;4215:1;4207:6;4203:14;4196:58;4288:34;4283:2;4275:6;4271:15;4264:59;4357:8;4352:2;4344:6;4340:15;4333:33;4079:294;:::o;4379:366::-;4521:3;4542:67;4606:2;4601:3;4542:67;:::i;:::-;4535:74;;4618:93;4707:3;4618:93;:::i;:::-;4736:2;4731:3;4727:12;4720:19;;4379:366;;;:::o;4751:419::-;4917:4;4955:2;4944:9;4940:18;4932:26;;5004:9;4998:4;4994:20;4990:1;4979:9;4975:17;4968:47;5032:131;5158:4;5032:131;:::i;:::-;5024:139;;4751:419;;;:::o;5176:307::-;5316:34;5312:1;5304:6;5300:14;5293:58;5385:34;5380:2;5372:6;5368:15;5361:59;5454:21;5449:2;5441:6;5437:15;5430:46;5176:307;:::o;5489:366::-;5631:3;5652:67;5716:2;5711:3;5652:67;:::i;:::-;5645:74;;5728:93;5817:3;5728:93;:::i;:::-;5846:2;5841:3;5837:12;5830:19;;5489:366;;;:::o;5861:419::-;6027:4;6065:2;6054:9;6050:18;6042:26;;6114:9;6108:4;6104:20;6100:1;6089:9;6085:17;6078:47;6142:131;6268:4;6142:131;:::i;:::-;6134:139;;5861:419;;;:::o;6286:316::-;6426:34;6422:1;6414:6;6410:14;6403:58;6495:34;6490:2;6482:6;6478:15;6471:59;6564:30;6559:2;6551:6;6547:15;6540:55;6286:316;:::o;6608:366::-;6750:3;6771:67;6835:2;6830:3;6771:67;:::i;:::-;6764:74;;6847:93;6936:3;6847:93;:::i;:::-;6965:2;6960:3;6956:12;6949:19;;6608:366;;;:::o;6980:419::-;7146:4;7184:2;7173:9;7169:18;7161:26;;7233:9;7227:4;7223:20;7219:1;7208:9;7204:17;7197:47;7261:131;7387:4;7261:131;:::i;:::-;7253:139;;6980:419;;;:::o;7405:315::-;7545:34;7541:1;7533:6;7529:14;7522:58;7614:34;7609:2;7601:6;7597:15;7590:59;7683:29;7678:2;7670:6;7666:15;7659:54;7405:315;:::o;7726:366::-;7868:3;7889:67;7953:2;7948:3;7889:67;:::i;:::-;7882:74;;7965:93;8054:3;7965:93;:::i;:::-;8083:2;8078:3;8074:12;8067:19;;7726:366;;;:::o;8098:419::-;8264:4;8302:2;8291:9;8287:18;8279:26;;8351:9;8345:4;8341:20;8337:1;8326:9;8322:17;8315:47;8379:131;8505:4;8379:131;:::i;:::-;8371:139;;8098:419;;;:::o;8523:180::-;8571:77;8568:1;8561:88;8668:4;8665:1;8658:15;8692:4;8689:1;8682:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "450800",
								"executionCost": "511",
								"totalCost": "451311"
							},
							"external": {
								"ticketPrice(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 123,
									"end": 1539,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 123,
									"end": 1539,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e9a8139cdcbdb6ceaab2fd96b2ab5291f02e031b434b8e5adb0bb54dc1b173bc64736f6c63430008120033",
									".code": [
										{
											"begin": 123,
											"end": 1539,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "PUSH",
											"source": 1,
											"value": "D93E609"
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 1539,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 435,
											"end": 1536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 435,
											"end": 1536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 435,
											"end": 1536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 535,
											"end": 536,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 189,
											"end": 190,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 525,
											"end": 536,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 525,
											"end": 536,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 517,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 517,
											"end": 575,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 517,
											"end": 575,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 575,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 517,
											"end": 575,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 517,
											"end": 575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 517,
											"end": 575,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 517,
											"end": 575,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 517,
											"end": 575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 517,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 517,
											"end": 575,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 517,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 517,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 517,
											"end": 575,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 517,
											"end": 575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 575,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 575,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 517,
											"end": 575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 517,
											"end": 575,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 517,
											"end": 575,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 517,
											"end": 575,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 517,
											"end": 575,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 517,
											"end": 575,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 517,
											"end": 575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 588,
											"end": 597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 588,
											"end": 604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 588,
											"end": 604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 615,
											"end": 629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 615,
											"end": 629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 842,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 650,
											"end": 842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 189,
											"end": 190,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 665,
											"end": 666,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 650,
											"end": 842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 650,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 650,
											"end": 842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 710,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 726,
											"end": 728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 730,
											"end": 733,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 710,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 710,
											"end": 734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 710,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 710,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 697,
											"end": 734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 697,
											"end": 734,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 697,
											"end": 734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 697,
											"end": 734,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 697,
											"end": 734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 697,
											"end": 734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 697,
											"end": 734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 757,
											"end": 761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 749,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 749,
											"end": 830,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 749,
											"end": 830,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 830,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 749,
											"end": 830,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 749,
											"end": 830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 749,
											"end": 830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 749,
											"end": 830,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 749,
											"end": 830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 749,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 749,
											"end": 830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 749,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 749,
											"end": 830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 749,
											"end": 830,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 749,
											"end": 830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 830,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 830,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 749,
											"end": 830,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 749,
											"end": 830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 749,
											"end": 830,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 749,
											"end": 830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 749,
											"end": 830,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 749,
											"end": 830,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 749,
											"end": 830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 677,
											"end": 680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 677,
											"end": 680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 680,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 677,
											"end": 680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 677,
											"end": 680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 677,
											"end": 680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 650,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 650,
											"end": 842,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 650,
											"end": 842,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 650,
											"end": 842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 650,
											"end": 842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 867,
											"end": 893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 883,
											"end": 885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 230,
											"end": 233,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 867,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 867,
											"end": 893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 867,
											"end": 893,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 867,
											"end": 893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 854,
											"end": 893,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 854,
											"end": 893,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 854,
											"end": 893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 854,
											"end": 893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 854,
											"end": 893,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 854,
											"end": 893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 854,
											"end": 893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 854,
											"end": 893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 912,
											"end": 916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 904,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 904,
											"end": 991,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 904,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 991,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 904,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 904,
											"end": 991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 904,
											"end": 991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 904,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 904,
											"end": 991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 904,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 904,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 904,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 904,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 904,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 904,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 904,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 991,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 904,
											"end": 991,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 904,
											"end": 991,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 904,
											"end": 991,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 904,
											"end": 991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 904,
											"end": 991,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 904,
											"end": 991,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 904,
											"end": 991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1033,
											"end": 1035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 422,
											"end": 426,
											"name": "PUSH",
											"source": 1,
											"value": "3E8"
										},
										{
											"begin": 1017,
											"end": 1032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1017,
											"end": 1050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1050,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1017,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1050,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1050,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1050,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1073,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1061,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1061,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1203,
											"end": 1205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1213,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1187,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1187,
											"end": 1214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1214,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1187,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1214,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1214,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1237,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1225,
											"end": 1334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1225,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1376,
											"end": 1378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 319,
											"end": 332,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 1360,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1360,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1387,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1360,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1387,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1387,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1387,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1406,
											"end": 1410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1398,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1528,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 435,
											"end": 1536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1689,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1679,
											"end": 1707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1703,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1705,
											"end": 1706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1691,
											"end": 1707,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1707,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1679,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1721,
											"end": 1730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1721,
											"end": 1738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1721,
											"end": 1738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1765,
											"end": 1766,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1761,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1756,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1766,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1815,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1815,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2101,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2091,
											"end": 2120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2111,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2103,
											"end": 2120,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2120,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2091,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2152,
											"end": 2153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2148,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 857,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 641,
											"end": 857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 751,
											"end": 760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 763,
											"end": 764,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 763,
											"end": 768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 751,
											"end": 768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 751,
											"end": 768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 790,
											"end": 791,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 786,
											"end": 787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 786,
											"end": 791,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 782,
											"end": 810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 801,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 782,
											"end": 810,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 832,
											"end": 836,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 838,
											"end": 839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 824,
											"end": 840,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 824,
											"end": 840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 824,
											"end": 840,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 824,
											"end": 840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 824,
											"end": 840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 857,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 641,
											"end": 857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 641,
											"end": 857,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 641,
											"end": 857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 857,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 641,
											"end": 857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 641,
											"end": 857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1138,
											"end": 1143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1120,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1144,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1120,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1145,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1395,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1157,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1294,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1383,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1309,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1309,
											"end": 1388,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1309,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1395,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1395,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1570,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1401,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1485,
											"end": 1496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1525,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1526,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1559,
											"end": 1563,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1554,
											"end": 1557,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1550,
											"end": 1564,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1570,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1570,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1401,
											"end": 1570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1797,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1576,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1750,
											"name": "PUSH",
											"source": 2,
											"value": "546F2061766F6964206F766572666C6F772C20616C706861203C3D2035206F6E"
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1700,
											"end": 1714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1693,
											"end": 1751,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1789,
											"name": "PUSH",
											"source": 2,
											"value": "6C79000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1780,
											"end": 1782,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1772,
											"end": 1778,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1783,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1790,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 2169,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1803,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 2030,
											"end": 2032,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2025,
											"end": 2028,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1966,
											"end": 2033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 2033,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1966,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 2033,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 2033,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2042,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2042,
											"end": 2135,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 2042,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2160,
											"end": 2162,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2155,
											"end": 2158,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2163,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 2169,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 2169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 2169,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 2169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2594,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2175,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2341,
											"end": 2345,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2381,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2377,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2382,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2428,
											"end": 2437,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2438,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2414,
											"end": 2415,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2412,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2399,
											"end": 2416,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2392,
											"end": 2439,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2582,
											"end": 2586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2456,
											"end": 2587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2456,
											"end": 2587,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2456,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2587,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2175,
											"end": 2594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2851,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2600,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2740,
											"end": 2774,
											"name": "PUSH",
											"source": 2,
											"value": "4E756D626572206F766572666C6F77206F6363757273207768656E2063616C63"
										},
										{
											"begin": 2736,
											"end": 2737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2738,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2775,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2843,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E20692A2A5F616C7068612E"
										},
										{
											"begin": 2804,
											"end": 2806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2802,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2792,
											"end": 2807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 3223,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2857,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2999,
											"end": 3002,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3084,
											"end": 3086,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3020,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3087,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3020,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3087,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3087,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3185,
											"end": 3188,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3096,
											"end": 3189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3096,
											"end": 3189,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3096,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3214,
											"end": 3216,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3209,
											"end": 3212,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3217,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3198,
											"end": 3217,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3198,
											"end": 3217,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 3223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 3223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 3223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2857,
											"end": 3223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3229,
											"end": 3648,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3229,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3395,
											"end": 3399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3435,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3422,
											"end": 3431,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3491,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3476,
											"end": 3480,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3492,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3470,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3493,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3636,
											"end": 3640,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3510,
											"end": 3641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3641,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3510,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 3641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 3641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3229,
											"end": 3648,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3229,
											"end": 3648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3229,
											"end": 3648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3229,
											"end": 3648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3834,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3654,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3702,
											"end": 3779,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3699,
											"end": 3700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3780,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3803,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3796,
											"end": 3797,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3789,
											"end": 3804,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3827,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3820,
											"end": 3821,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3813,
											"end": 3828,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 4073,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3840,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3879,
											"end": 3882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3902,
											"end": 3926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 3926,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3902,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3893,
											"end": 3926,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3893,
											"end": 3926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3948,
											"end": 4014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3946,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3938,
											"end": 4015,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3935,
											"end": 4038,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4018,
											"end": 4036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3935,
											"end": 4038,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3935,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 4073,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 4073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 4073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3840,
											"end": 4073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4079,
											"end": 4373,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4079,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4253,
											"name": "PUSH",
											"source": 2,
											"value": "4E756D626572206F766572666C6F77206F6363757273207768656E2063616C63"
										},
										{
											"begin": 4215,
											"end": 4216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4207,
											"end": 4213,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4203,
											"end": 4217,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4196,
											"end": 4254,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4288,
											"end": 4322,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E205F626574612A692A2A5F"
										},
										{
											"begin": 4283,
											"end": 4285,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4275,
											"end": 4281,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4286,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4264,
											"end": 4323,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4357,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "616C7068612E0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4352,
											"end": 4354,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4344,
											"end": 4350,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4340,
											"end": 4355,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4333,
											"end": 4366,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4079,
											"end": 4373,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4079,
											"end": 4373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4379,
											"end": 4745,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4379,
											"end": 4745,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4542,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4606,
											"end": 4608,
											"name": "PUSH",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4601,
											"end": 4604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4542,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4542,
											"end": 4609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4542,
											"end": 4609,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4542,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4535,
											"end": 4609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4535,
											"end": 4609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4707,
											"end": 4710,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4618,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4618,
											"end": 4711,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4618,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4736,
											"end": 4738,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4731,
											"end": 4734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4739,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4720,
											"end": 4739,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4720,
											"end": 4739,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4379,
											"end": 4745,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4379,
											"end": 4745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4379,
											"end": 4745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4379,
											"end": 4745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4751,
											"end": 5170,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4751,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4917,
											"end": 4921,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4957,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4944,
											"end": 4953,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4940,
											"end": 4958,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5004,
											"end": 5013,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4998,
											"end": 5002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4994,
											"end": 5014,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4991,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4979,
											"end": 4988,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4975,
											"end": 4992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4968,
											"end": 5015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5158,
											"end": 5162,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5032,
											"end": 5163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5163,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5032,
											"end": 5163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4751,
											"end": 5170,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4751,
											"end": 5170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4751,
											"end": 5170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4751,
											"end": 5170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5176,
											"end": 5483,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5176,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5316,
											"end": 5350,
											"name": "PUSH",
											"source": 2,
											"value": "4E756D626572206F766572666C6F77206F6363757273207768656E2063616C63"
										},
										{
											"begin": 5312,
											"end": 5313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5310,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5293,
											"end": 5351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5385,
											"end": 5419,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E205F626574612F5F64656E"
										},
										{
											"begin": 5380,
											"end": 5382,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5372,
											"end": 5378,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5361,
											"end": 5420,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "6F6D696E61746F722A692A2A5F616C7068612E00000000000000000000000000"
										},
										{
											"begin": 5449,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5437,
											"end": 5452,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 5476,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5176,
											"end": 5483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5176,
											"end": 5483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5855,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5489,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5631,
											"end": 5634,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5716,
											"end": 5718,
											"name": "PUSH",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5711,
											"end": 5714,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5652,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5652,
											"end": 5719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5652,
											"end": 5719,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5652,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5645,
											"end": 5719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5645,
											"end": 5719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5728,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5817,
											"end": 5820,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5728,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5728,
											"end": 5821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5728,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5728,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5846,
											"end": 5848,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5841,
											"end": 5844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5837,
											"end": 5849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5849,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5855,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5855,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5855,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5489,
											"end": 5855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5861,
											"end": 6280,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5861,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6027,
											"end": 6031,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6054,
											"end": 6063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6042,
											"end": 6068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6042,
											"end": 6068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6114,
											"end": 6123,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6108,
											"end": 6112,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6104,
											"end": 6124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6100,
											"end": 6101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6098,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6085,
											"end": 6102,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6125,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6142,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6268,
											"end": 6272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6142,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 6142,
											"end": 6273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6142,
											"end": 6273,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 6142,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6134,
											"end": 6273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5861,
											"end": 6280,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5861,
											"end": 6280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5861,
											"end": 6280,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5861,
											"end": 6280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6286,
											"end": 6602,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 6286,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6460,
											"name": "PUSH",
											"source": 2,
											"value": "4E756D626572206F766572666C6F77206F6363757273207768656E2063616C63"
										},
										{
											"begin": 6422,
											"end": 6423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6420,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6410,
											"end": 6424,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6403,
											"end": 6461,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6529,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E20285F626574612F5F6465"
										},
										{
											"begin": 6490,
											"end": 6492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6482,
											"end": 6488,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6478,
											"end": 6493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6471,
											"end": 6530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6564,
											"end": 6594,
											"name": "PUSH",
											"source": 2,
											"value": "6E6F6D696E61746F722A692A2A5F616C706861292A31302A2A31382E00000000"
										},
										{
											"begin": 6559,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6551,
											"end": 6557,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6540,
											"end": 6595,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6286,
											"end": 6602,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6286,
											"end": 6602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6974,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 6608,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 6753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6771,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6835,
											"end": 6837,
											"name": "PUSH",
											"source": 2,
											"value": "5C"
										},
										{
											"begin": 6830,
											"end": 6833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6771,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6771,
											"end": 6838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6771,
											"end": 6838,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6771,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6764,
											"end": 6838,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6764,
											"end": 6838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6936,
											"end": 6939,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 6847,
											"end": 6940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6847,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 6967,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6960,
											"end": 6963,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6956,
											"end": 6968,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6949,
											"end": 6968,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6949,
											"end": 6968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6974,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6974,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6980,
											"end": 7399,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 6980,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7146,
											"end": 7150,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7184,
											"end": 7186,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7173,
											"end": 7182,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7169,
											"end": 7187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7161,
											"end": 7187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7161,
											"end": 7187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7233,
											"end": 7242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7227,
											"end": 7231,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7243,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7220,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7208,
											"end": 7217,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7204,
											"end": 7221,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7197,
											"end": 7244,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7261,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7387,
											"end": 7391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7261,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 7261,
											"end": 7392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7261,
											"end": 7392,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7261,
											"end": 7392,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7392,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7392,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6980,
											"end": 7399,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6980,
											"end": 7399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6980,
											"end": 7399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6980,
											"end": 7399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7405,
											"end": 7720,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 7405,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7579,
											"name": "PUSH",
											"source": 2,
											"value": "4E756D626572206F766572666C6F77206F6363757273207768656E2063616C63"
										},
										{
											"begin": 7541,
											"end": 7542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7533,
											"end": 7539,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7529,
											"end": 7543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7522,
											"end": 7580,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7614,
											"end": 7648,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E205F626574612F5F64656E"
										},
										{
											"begin": 7609,
											"end": 7611,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7601,
											"end": 7607,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7597,
											"end": 7612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7590,
											"end": 7649,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7683,
											"end": 7712,
											"name": "PUSH",
											"source": 2,
											"value": "6F6D696E61746F722A692A2A5F616C706861202B2067616D6D612E0000000000"
										},
										{
											"begin": 7678,
											"end": 7680,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7676,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7666,
											"end": 7681,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7659,
											"end": 7713,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7405,
											"end": 7720,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7405,
											"end": 7720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7726,
											"end": 8092,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7726,
											"end": 8092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7868,
											"end": 7871,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 7953,
											"end": 7955,
											"name": "PUSH",
											"source": 2,
											"value": "5B"
										},
										{
											"begin": 7948,
											"end": 7951,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7889,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7889,
											"end": 7956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7889,
											"end": 7956,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 7889,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7882,
											"end": 7956,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7882,
											"end": 7956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 8054,
											"end": 8057,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 7965,
											"end": 8058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8058,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 7965,
											"end": 8058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8083,
											"end": 8085,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8078,
											"end": 8081,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8074,
											"end": 8086,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8067,
											"end": 8086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8067,
											"end": 8086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7726,
											"end": 8092,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7726,
											"end": 8092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7726,
											"end": 8092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7726,
											"end": 8092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8517,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8264,
											"end": 8268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8302,
											"end": 8304,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8291,
											"end": 8300,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8287,
											"end": 8305,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8279,
											"end": 8305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8351,
											"end": 8360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8345,
											"end": 8349,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8341,
											"end": 8361,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8337,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8326,
											"end": 8335,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8322,
											"end": 8339,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8315,
											"end": 8362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8379,
											"end": 8510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 8505,
											"end": 8509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8379,
											"end": 8510,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 8379,
											"end": 8510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8379,
											"end": 8510,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 8379,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8371,
											"end": 8510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8371,
											"end": 8510,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8523,
											"end": 8703,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 8523,
											"end": 8703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8648,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8568,
											"end": 8569,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8561,
											"end": 8649,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8668,
											"end": 8672,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 8665,
											"end": 8666,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8658,
											"end": 8673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8692,
											"end": 8696,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 8689,
											"end": 8690,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8682,
											"end": 8697,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"degen/DegenTicketPrice.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ticketPrice(uint256)": "0d93e609"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ith\",\"type\":\"uint256\"}],\"name\":\"ticketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"degen/DegenTicketPrice.sol\":\"DegenTicketPrice\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"degen/DegenTicketPrice.sol\":{\"keccak256\":\"0x5651d1a0b3b779ade1ae838dbdc42eeebfca8e0b2aea38deec091c7c13e24027\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://367f64e7bb77ecac378c4dff3eb23128f87f871c371b4e4a30ba77d020e67520\",\"dweb:/ipfs/QmNfeyyuoQ2siyQzyc5D6TUSKduWLTXgdCwgJczEVu5EGJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0",
							"usedErrors": []
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"degen/DegenTicketPrice.sol": {
				"ast": {
					"absolutePath": "degen/DegenTicketPrice.sol",
					"exportedSymbols": {
						"DegenTicketPrice": [
							445
						],
						"SafeMath": [
							311
						]
					},
					"id": 446,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 446,
							"sourceUnit": 312,
							"src": "60:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DegenTicketPrice",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 445,
							"linearizedBaseContracts": [
								445
							],
							"name": "DegenTicketPrice",
							"nameLocation": "131:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 317,
									"mutability": "constant",
									"name": "_alpha",
									"nameLocation": "180:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "155:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 315,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "155:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 316,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "189:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 320,
									"mutability": "constant",
									"name": "_beta",
									"nameLocation": "222:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "197:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 318,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "197:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 319,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "230:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 327,
									"mutability": "constant",
									"name": "_gamma",
									"nameLocation": "310:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "285:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 321,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "285:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"id": 326,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e3031",
											"id": 322,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "319:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_100",
												"typeString": "rational_const 1 / 100"
											},
											"value": "0.01"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 325,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 323,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "326:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 324,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "330:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "326:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "319:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 330,
									"mutability": "constant",
									"name": "_denominator",
									"nameLocation": "407:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 445,
									"src": "382:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 328,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "382:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 329,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "422:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "506:1030:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 338,
																"name": "_alpha",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "525:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "35",
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "535:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															"src": "525:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f2061766f6964206f766572666c6f772c20616c706861203c3d2035206f6e6c79",
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "538:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452",
																"typeString": "literal_string \"To avoid overflow, alpha <= 5 only\""
															},
															"value": "To avoid overflow, alpha <= 5 only"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452",
																"typeString": "literal_string \"To avoid overflow, alpha <= 5 only\""
															}
														],
														"id": 337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "517:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "517:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "517:58:1"
											},
											{
												"assignments": [
													345
												],
												"declarations": [
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "593:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 443,
														"src": "588:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 344,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "588:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 347,
												"initialValue": {
													"hexValue": "74727565",
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "600:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "588:16:1"
											},
											{
												"assignments": [
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "tp",
														"nameLocation": "623:2:1",
														"nodeType": "VariableDeclaration",
														"scope": 443,
														"src": "615:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "615:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 351,
												"initialValue": {
													"hexValue": "31",
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "628:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "615:14:1"
											},
											{
												"body": {
													"id": 377,
													"nodeType": "Block",
													"src": "682:160:1",
													"statements": [
														{
															"expression": {
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 362,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 345,
																			"src": "698:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"id": 363,
																			"name": "tp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 349,
																			"src": "704:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 364,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "697:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 367,
																			"name": "tp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 349,
																			"src": "726:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 368,
																			"name": "ith",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 332,
																			"src": "730:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 365,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "710:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "719:6:1",
																		"memberName": "tryMul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 104,
																		"src": "710:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																		}
																	},
																	"id": 369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "710:24:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"src": "697:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "ExpressionStatement",
															"src": "697:37:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 373,
																		"name": "flag",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "757:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e20692a2a5f616c7068612e",
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "763:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa",
																			"typeString": "literal_string \"Number overflow occurs when calculate ticket price in i**_alpha.\""
																		},
																		"value": "Number overflow occurs when calculate ticket price in i**_alpha."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa",
																			"typeString": "literal_string \"Number overflow occurs when calculate ticket price in i**_alpha.\""
																		}
																	],
																	"id": 372,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "749:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "749:81:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 376,
															"nodeType": "ExpressionStatement",
															"src": "749:81:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 356,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "665:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 357,
														"name": "_alpha",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "669:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "665:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 378,
												"initializationExpression": {
													"assignments": [
														353
													],
													"declarations": [
														{
															"constant": false,
															"id": 353,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "660:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 378,
															"src": "655:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 352,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "655:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 355,
													"initialValue": {
														"hexValue": "30",
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "662:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "655:8:1"
												},
												"loopExpression": {
													"expression": {
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "677:3:1",
														"subExpression": {
															"id": 359,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "677:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 361,
													"nodeType": "ExpressionStatement",
													"src": "677:3:1"
												},
												"nodeType": "ForStatement",
												"src": "650:192:1"
											},
											{
												"expression": {
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 379,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "855:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 380,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "861:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 381,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "854:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 384,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "883:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 385,
																"name": "_beta",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 320,
																"src": "887:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 382,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "867:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "876:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "867:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "867:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "854:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "854:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 390,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "912:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e205f626574612a692a2a5f616c7068612e",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "918:72:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\""
															},
															"value": "Number overflow occurs when calculate ticket price in _beta*i**_alpha."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\""
															}
														],
														"id": 389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "904:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "904:87:1"
											},
											{
												"expression": {
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 394,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "1005:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 395,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1011:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 396,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1004:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 399,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1033:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 400,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "1037:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 397,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "1017:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1026:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "1017:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1017:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "1004:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "1004:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 405,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "1069:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e205f626574612f5f64656e6f6d696e61746f722a692a2a5f616c7068612e",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1075:85:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\""
															},
															"value": "Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\""
															}
														],
														"id": 404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1061:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1061:100:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "1061:100:1"
											},
											{
												"expression": {
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 409,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "1175:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 410,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1181:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 411,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1174:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 414,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1203:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1207:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1211:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "1207:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"id": 412,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "1187:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1196:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "1187:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1187:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "1174:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "1174:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "1233:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e20285f626574612f5f64656e6f6d696e61746f722a692a2a5f616c706861292a31302a2a31382e",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1239:94:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\""
															},
															"value": "Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\""
															}
														],
														"id": 421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1225:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1225:109:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "1225:109:1"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 426,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "1348:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 427,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1354:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 428,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1347:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 431,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1376:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 432,
																"name": "_gamma",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "1380:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 429,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "1360:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1369:6:1",
															"memberName": "tryAdd",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "1360:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1360:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "1347:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "1347:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 437,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "1406:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e205f626574612f5f64656e6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e",
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1412:93:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\""
															},
															"value": "Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\""
															}
														],
														"id": 436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1398:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1398:108:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "1398:108:1"
											},
											{
												"expression": {
													"id": 441,
													"name": "tp",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "1526:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 336,
												"id": 442,
												"nodeType": "Return",
												"src": "1519:9:1"
											}
										]
									},
									"functionSelector": "0d93e609",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketPrice",
									"nameLocation": "444:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "ith",
												"nameLocation": "464:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "456:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:13:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "498:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "490:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:16:1"
									},
									"scope": 445,
									"src": "435:1101:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 446,
							"src": "123:1416:1",
							"usedErrors": []
						}
					],
					"src": "33:1510:1"
				},
				"id": 1
			}
		}
	}
}