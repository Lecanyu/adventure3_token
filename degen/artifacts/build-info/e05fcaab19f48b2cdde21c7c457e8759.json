{
	"id": "e05fcaab19f48b2cdde21c7c457e8759",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"degen/DegenMoneyLib.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.6;\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n\r\nlibrary DegenMoneyLib {\r\n    //****************\r\n    // PARAMS\r\n    //****************\r\n    uint256 constant private _taskCreateMinFee = 10 * 10**18;\r\n    uint256 constant private _groupCreateMinFee = 1 * 10**18;\r\n    uint256 constant private _a = 3;        // 门票金额给队长的比例（%）\r\n    uint256 constant private _b = 50;       // 门票金额投入奖池的比例（%）\r\n    uint256 constant private _c = 10;       // 队长的最终奖池收益比例（%）\r\n    uint256 constant private _p = 10;       // MonopolyPenalty比例（%）\r\n    uint256 constant private _v = 10;       // 第一名队伍比第二名队伍人数多_v时，触发MonopolyPenalty\r\n\r\n    uint256 constant private _alpha = 2;\r\n    uint256 constant private _beta = 10;               // beta = _beta / _denominator\r\n    uint256 constant private _gamma = 0.01 * 10**18;    // absolute init ticket price threshold\r\n    uint256 constant private _denominator = 100;\r\n\r\n    function taskCreateMinFee() public pure returns (uint256 money) {\r\n        return _taskCreateMinFee;\r\n    }\r\n\r\n    function groupCreateMinFee() public pure returns (uint256 money) {\r\n        return _groupCreateMinFee;\r\n    }\r\n\r\n    function ticketPrice(\r\n        uint256 ith, \r\n        uint256 totalRewardPool,\r\n        int256 firstGrpId,\r\n        int256 SecondGrpId,\r\n        uint256 firstGrpPeopleNum,\r\n        uint256 secondGrpPeopleNum\r\n    ) \r\n    public pure returns (uint256 price) \r\n    {\r\n        require(_alpha <= 5, \"To avoid overflow, alpha <= 5 only\");\r\n\r\n        bool flag = true;\r\n        uint256 tp = 1;\r\n        \r\n        for (uint i=0; i < _alpha; i++) {\r\n            (flag, tp) = SafeMath.tryMul(tp, ith);\r\n            require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\");\r\n        }\r\n\r\n        (flag, tp) = SafeMath.tryMul(tp, _beta);\r\n        require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\");\r\n\r\n        (flag, tp) = SafeMath.tryDiv(tp, _denominator);\r\n        require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\");\r\n\r\n        (flag, tp) = SafeMath.tryMul(tp, 10**18);\r\n        require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\");\r\n\r\n        (flag, tp) = SafeMath.tryAdd(tp, _gamma);\r\n        require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\");\r\n\r\n        bool isMonopolyPenalty;\r\n        if(firstGrpId >= 0 && SecondGrpId >= 0){\r\n            if(firstGrpPeopleNum - secondGrpPeopleNum > _v){\r\n                isMonopolyPenalty = true;\r\n            }\r\n            else {\r\n                isMonopolyPenalty = false;\r\n            }\r\n        }\r\n        else if (firstGrpId >= 0 && SecondGrpId < 0){\r\n            if(firstGrpPeopleNum > _v) {\r\n                isMonopolyPenalty = true;\r\n            }\r\n            else {\r\n                isMonopolyPenalty = false;\r\n            }\r\n        }\r\n        else{\r\n            isMonopolyPenalty = false;\r\n        }\r\n\r\n        if (isMonopolyPenalty){\r\n            uint256 extraFee = 0;\r\n            (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p);\r\n            require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\");\r\n            (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator);\r\n            require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\");\r\n            (flag, tp) = SafeMath.tryAdd(tp, extraFee);\r\n            require(flag, \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\");\r\n        }\r\n\r\n        return tp;\r\n    }\r\n\r\n    function ticketIncome2RewardPool(uint256 ticketIncome) public pure returns (uint256 money) {\r\n        bool flag = false;\r\n        uint256 m = 0;\r\n        (flag, m) = SafeMath.tryMul(ticketIncome, _b);\r\n        require(flag, \"[ticketIncome2RewardPool] overflow.\");\r\n        (flag, m) = SafeMath.tryDiv(m, _denominator);\r\n        require(flag, \"[ticketIncome2RewardPool] overflow.\");\r\n        return m;\r\n    }\r\n\r\n    function ticketIncome2GroupLeader(uint256 ticketIncome) public pure returns (uint256 money) {\r\n        bool flag = false;\r\n        uint256 m = 0;\r\n        (flag, m) = SafeMath.tryMul(ticketIncome, _a);\r\n        require(flag, \"[ticketIncome2GroupLeader] overflow.\");\r\n        (flag, m) = SafeMath.tryDiv(m, _denominator);\r\n        require(flag, \"[ticketIncome2GroupLeader] overflow.\");\r\n        return m;\r\n    }\r\n\r\n    function ticketIncome2GroupMember(uint256 ticketIncome, uint256 memNum) public pure returns (uint256 money) {\r\n        uint256 c = _denominator - _a - _b;\r\n\r\n        bool flag = false;\r\n        uint256 m = 0;\r\n        (flag, m) = SafeMath.tryMul(ticketIncome, c);\r\n        require(flag, \"[ticketIncome2GroupMember] overflow.\");\r\n        (flag, m) = SafeMath.tryDiv(m, _denominator);\r\n        require(flag, \"[ticketIncome2GroupMember] overflow.\");\r\n        (flag, m) = SafeMath.tryDiv(m, memNum);\r\n        require(flag, \"[ticketIncome2GroupMember] overflow.\");\r\n\r\n        return m;\r\n    }\r\n\r\n}\r\n\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xEE DUP7 0xE8 KECCAK256 DUP14 0xE7 0x4B EXTCODEHASH LOG4 0xB1 PUSH16 0x3B51DCF7FAC733127FC4F9E663FD4716 DUP12 SWAP4 DUP2 DIV PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xEE DUP7 0xE8 KECCAK256 DUP14 0xE7 0x4B EXTCODEHASH LOG4 0xB1 PUSH16 0x3B51DCF7FAC733127FC4F9E663FD4716 DUP12 SWAP4 DUP2 DIV PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202fee86e8208de74b3fa4b16f3b51dcf7fac733127fc4f9e663fd47168b93810464736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"degen/DegenMoneyLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"degen/DegenMoneyLib.sol": {
				"DegenMoneyLib": {
					"abi": [
						{
							"inputs": [],
							"name": "groupCreateMinFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taskCreateMinFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ticketIncome",
									"type": "uint256"
								}
							],
							"name": "ticketIncome2GroupLeader",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ticketIncome",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "memNum",
									"type": "uint256"
								}
							],
							"name": "ticketIncome2GroupMember",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ticketIncome",
									"type": "uint256"
								}
							],
							"name": "ticketIncome2RewardPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "money",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ith",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalRewardPool",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "firstGrpId",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "SecondGrpId",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "firstGrpPeopleNum",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "secondGrpPeopleNum",
									"type": "uint256"
								}
							],
							"name": "ticketPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"degen/DegenMoneyLib.sol\":123:5262  library DegenMoneyLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"degen/DegenMoneyLib.sol\":123:5262  library DegenMoneyLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x26d0a334\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2e26fb4a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x84105419\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x91096a3c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9b49380b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe6ca2a8d\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"degen/DegenMoneyLib.sol\":1197:1306  function groupCreateMinFee() public pure returns (uint256 money) {... */\n    tag_2:\n        /* \"degen/DegenMoneyLib.sol\":324:334  1 * 10**18 */\n      0x0de0b6b3a7640000\n        /* \"degen/DegenMoneyLib.sol\":1197:1306  function groupCreateMinFee() public pure returns (uint256 money) {... */\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":168:193   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":156:158   */\n      0x20\n        /* \"#utility.yul\":141:159   */\n      add\n        /* \"degen/DegenMoneyLib.sol\":1197:1306  function groupCreateMinFee() public pure returns (uint256 money) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"degen/DegenMoneyLib.sol\":4252:4662  function ticketIncome2GroupLeader(uint256 ticketIncome) public pure returns (uint256 money) {... */\n    tag_3:\n      tag_8\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":4670:5257  function ticketIncome2GroupMember(uint256 ticketIncome, uint256 memNum) public pure returns (uint256 money) {... */\n    tag_4:\n      tag_8\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":1082:1189  function taskCreateMinFee() public pure returns (uint256 money) {... */\n    tag_5:\n        /* \"degen/DegenMoneyLib.sol\":260:271  10 * 10**18 */\n      0x8ac7230489e80000\n        /* \"degen/DegenMoneyLib.sol\":1082:1189  function taskCreateMinFee() public pure returns (uint256 money) {... */\n      jump(tag_8)\n        /* \"degen/DegenMoneyLib.sol\":1314:3829  function ticketPrice(... */\n    tag_6:\n      tag_8\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":3837:4244  function ticketIncome2RewardPool(uint256 ticketIncome) public pure returns (uint256 money) {... */\n    tag_7:\n      tag_8\n      tag_31\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"degen/DegenMoneyLib.sol\":4252:4662  function ticketIncome2GroupLeader(uint256 ticketIncome) public pure returns (uint256 money) {... */\n    tag_15:\n        /* \"degen/DegenMoneyLib.sol\":4329:4342  uint256 money */\n      0x00\n      dup1\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":4419:4452  SafeMath.tryMul(ticketIncome, _a) */\n      tag_36\n        /* \"degen/DegenMoneyLib.sol\":4435:4447  ticketIncome */\n      dup5\n        /* \"degen/DegenMoneyLib.sol\":371:372  3 */\n      0x03\n        /* \"degen/DegenMoneyLib.sol\":4419:4434  SafeMath.tryMul */\n      tag_37\n        /* \"degen/DegenMoneyLib.sol\":4419:4452  SafeMath.tryMul(ticketIncome, _a) */\n      jump\t// in\n    tag_36:\n        /* \"degen/DegenMoneyLib.sol\":4407:4452  (flag, m) = SafeMath.tryMul(ticketIncome, _a) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":4463:4516  require(flag, \"[ticketIncome2GroupLeader] overflow.\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"degen/DegenMoneyLib.sol\":4539:4571  SafeMath.tryDiv(m, _denominator) */\n      tag_41\n        /* \"degen/DegenMoneyLib.sol\":4555:4556  m */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1070:1073  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":4539:4554  SafeMath.tryDiv */\n      tag_42\n        /* \"degen/DegenMoneyLib.sol\":4539:4571  SafeMath.tryDiv(m, _denominator) */\n      jump\t// in\n    tag_41:\n        /* \"degen/DegenMoneyLib.sol\":4527:4571  (flag, m) = SafeMath.tryDiv(m, _denominator) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":4582:4635  require(flag, \"[ticketIncome2GroupLeader] overflow.\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_43:\n        /* \"degen/DegenMoneyLib.sol\":4653:4654  m */\n      swap4\n        /* \"degen/DegenMoneyLib.sol\":4252:4662  function ticketIncome2GroupLeader(uint256 ticketIncome) public pure returns (uint256 money) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"degen/DegenMoneyLib.sol\":4670:5257  function ticketIncome2GroupMember(uint256 ticketIncome, uint256 memNum) public pure returns (uint256 money) {... */\n    tag_20:\n        /* \"degen/DegenMoneyLib.sol\":4763:4776  uint256 money */\n      0x00\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":457:459  50 */\n      0x32\n        /* \"degen/DegenMoneyLib.sol\":4801:4818  _denominator - _a */\n      tag_46\n        /* \"degen/DegenMoneyLib.sol\":371:372  3 */\n      0x03\n        /* \"degen/DegenMoneyLib.sol\":1070:1073  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":4801:4818  _denominator - _a */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"degen/DegenMoneyLib.sol\":4801:4823  _denominator - _a - _b */\n      tag_48\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_48:\n        /* \"degen/DegenMoneyLib.sol\":4789:4823  uint256 c = _denominator - _a - _b */\n      swap1\n      pop\n        /* \"degen/DegenMoneyLib.sol\":4836:4845  bool flag */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":4864:4873  uint256 m */\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":4900:4932  SafeMath.tryMul(ticketIncome, c) */\n      tag_49\n        /* \"degen/DegenMoneyLib.sol\":4916:4928  ticketIncome */\n      dup7\n        /* \"degen/DegenMoneyLib.sol\":4930:4931  c */\n      dup5\n        /* \"degen/DegenMoneyLib.sol\":4900:4915  SafeMath.tryMul */\n      tag_37\n        /* \"degen/DegenMoneyLib.sol\":4900:4932  SafeMath.tryMul(ticketIncome, c) */\n      jump\t// in\n    tag_49:\n        /* \"degen/DegenMoneyLib.sol\":4888:4932  (flag, m) = SafeMath.tryMul(ticketIncome, c) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":4943:4996  require(flag, \"[ticketIncome2GroupMember] overflow.\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_52\n      jump\t// in\n    tag_50:\n        /* \"degen/DegenMoneyLib.sol\":5019:5051  SafeMath.tryDiv(m, _denominator) */\n      tag_53\n        /* \"degen/DegenMoneyLib.sol\":5035:5036  m */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1070:1073  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":5019:5034  SafeMath.tryDiv */\n      tag_42\n        /* \"degen/DegenMoneyLib.sol\":5019:5051  SafeMath.tryDiv(m, _denominator) */\n      jump\t// in\n    tag_53:\n        /* \"degen/DegenMoneyLib.sol\":5007:5051  (flag, m) = SafeMath.tryDiv(m, _denominator) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":5062:5115  require(flag, \"[ticketIncome2GroupMember] overflow.\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_52\n      jump\t// in\n    tag_54:\n        /* \"degen/DegenMoneyLib.sol\":5138:5164  SafeMath.tryDiv(m, memNum) */\n      tag_56\n        /* \"degen/DegenMoneyLib.sol\":5154:5155  m */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":5157:5163  memNum */\n      dup7\n        /* \"degen/DegenMoneyLib.sol\":5138:5153  SafeMath.tryDiv */\n      tag_42\n        /* \"degen/DegenMoneyLib.sol\":5138:5164  SafeMath.tryDiv(m, memNum) */\n      jump\t// in\n    tag_56:\n        /* \"degen/DegenMoneyLib.sol\":5126:5164  (flag, m) = SafeMath.tryDiv(m, memNum) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":5175:5228  require(flag, \"[ticketIncome2GroupMember] overflow.\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_52\n      jump\t// in\n    tag_57:\n        /* \"degen/DegenMoneyLib.sol\":5248:5249  m */\n      swap3\n      pop\n      pop\n      pop\n        /* \"degen/DegenMoneyLib.sol\":4670:5257  function ticketIncome2GroupMember(uint256 ticketIncome, uint256 memNum) public pure returns (uint256 money) {... */\n    tag_45:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"degen/DegenMoneyLib.sol\":1314:3829  function ticketPrice(... */\n    tag_28:\n        /* \"degen/DegenMoneyLib.sol\":1556:1569  uint256 price */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":1671:1675  true */\n      0x01\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":1659:1668  bool flag */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":1721:1913  for (uint i=0; i < _alpha; i++) {... */\n    tag_64:\n        /* \"degen/DegenMoneyLib.sol\":838:839  2 */\n      0x02\n        /* \"degen/DegenMoneyLib.sol\":1736:1737  i */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1736:1746  i < _alpha */\n      lt\n        /* \"degen/DegenMoneyLib.sol\":1721:1913  for (uint i=0; i < _alpha; i++) {... */\n      iszero\n      tag_65\n      jumpi\n        /* \"degen/DegenMoneyLib.sol\":1781:1805  SafeMath.tryMul(tp, ith) */\n      tag_67\n        /* \"degen/DegenMoneyLib.sol\":1797:1799  tp */\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":1801:1804  ith */\n      dup12\n        /* \"degen/DegenMoneyLib.sol\":1781:1796  SafeMath.tryMul */\n      tag_37\n        /* \"degen/DegenMoneyLib.sol\":1781:1805  SafeMath.tryMul(tp, ith) */\n      jump\t// in\n    tag_67:\n        /* \"degen/DegenMoneyLib.sol\":1768:1805  (flag, tp) = SafeMath.tryMul(tp, ith) */\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":1820:1901  require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\") */\n      tag_68\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2848:2850   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":1820:1901  require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2830:2851   */\n      mstore\n        /* \"#utility.yul\":2867:2885   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2860:2890   */\n      swap2\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":2906:2924   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2899:2961   */\n      mstore\n        /* \"#utility.yul\":2997:3031   */\n      0x756c617465207469636b657420707269636520696e20692a2a5f616c7068612e\n        /* \"#utility.yul\":2977:2995   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2970:3032   */\n      mstore\n        /* \"#utility.yul\":3049:3068   */\n      0x84\n      add\n        /* \"degen/DegenMoneyLib.sol\":1820:1901  require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\") */\n      tag_39\n        /* \"#utility.yul\":2646:3074   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":1820:1901  require(flag, \"Number overflow occurs when calculate ticket price in i**_alpha.\") */\n    tag_68:\n        /* \"degen/DegenMoneyLib.sol\":1748:1751  i++ */\n      dup1\n      tag_71\n      dup2\n      tag_72\n      jump\t// in\n    tag_71:\n      swap2\n      pop\n      pop\n        /* \"degen/DegenMoneyLib.sol\":1721:1913  for (uint i=0; i < _alpha; i++) {... */\n      jump(tag_64)\n    tag_65:\n      pop\n        /* \"degen/DegenMoneyLib.sol\":1938:1964  SafeMath.tryMul(tp, _beta) */\n      tag_73\n        /* \"degen/DegenMoneyLib.sol\":1954:1956  tp */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":879:881  10 */\n      0x0a\n        /* \"degen/DegenMoneyLib.sol\":1938:1953  SafeMath.tryMul */\n      tag_37\n        /* \"degen/DegenMoneyLib.sol\":1938:1964  SafeMath.tryMul(tp, _beta) */\n      jump\t// in\n    tag_73:\n        /* \"degen/DegenMoneyLib.sol\":1925:1964  (flag, tp) = SafeMath.tryMul(tp, _beta) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1975:2062  require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3421:3423   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":1975:2062  require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3403:3424   */\n      mstore\n        /* \"#utility.yul\":3460:3462   */\n      0x46\n        /* \"#utility.yul\":3440:3458   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3433:3463   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":3479:3497   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3472:3534   */\n      mstore\n        /* \"#utility.yul\":3570:3604   */\n      0x756c617465207469636b657420707269636520696e205f626574612a692a2a5f\n        /* \"#utility.yul\":3550:3568   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3543:3605   */\n      mstore\n      shl(0xd1, 0x30b638343097)\n        /* \"#utility.yul\":3621:3640   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":3614:3651   */\n      mstore\n        /* \"#utility.yul\":3668:3687   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":1975:2062  require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\") */\n      tag_39\n        /* \"#utility.yul\":3219:3693   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":1975:2062  require(flag, \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\") */\n    tag_74:\n        /* \"degen/DegenMoneyLib.sol\":2088:2121  SafeMath.tryDiv(tp, _denominator) */\n      tag_77\n        /* \"degen/DegenMoneyLib.sol\":2104:2106  tp */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1070:1073  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":2088:2103  SafeMath.tryDiv */\n      tag_42\n        /* \"degen/DegenMoneyLib.sol\":2088:2121  SafeMath.tryDiv(tp, _denominator) */\n      jump\t// in\n    tag_77:\n        /* \"degen/DegenMoneyLib.sol\":2075:2121  (flag, tp) = SafeMath.tryDiv(tp, _denominator) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":2132:2232  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3900:3902   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":2132:2232  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3882:3903   */\n      mstore\n        /* \"#utility.yul\":3939:3941   */\n      0x53\n        /* \"#utility.yul\":3919:3937   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3912:3942   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":3958:3976   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3951:4013   */\n      mstore\n        /* \"#utility.yul\":4049:4083   */\n      0x756c617465207469636b657420707269636520696e205f626574612f5f64656e\n        /* \"#utility.yul\":4029:4047   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4022:4084   */\n      mstore\n      shl(0x69, 0x37b6b4b730ba37b9153495152fb0b638343097)\n        /* \"#utility.yul\":4100:4119   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":4093:4143   */\n      mstore\n        /* \"#utility.yul\":4160:4179   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":2132:2232  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\") */\n      tag_39\n        /* \"#utility.yul\":3698:4185   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":2132:2232  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\") */\n    tag_78:\n        /* \"degen/DegenMoneyLib.sol\":2258:2285  SafeMath.tryMul(tp, 10**18) */\n      tag_81\n        /* \"degen/DegenMoneyLib.sol\":2274:2276  tp */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":2278:2284  10**18 */\n      0x0de0b6b3a7640000\n        /* \"degen/DegenMoneyLib.sol\":2258:2273  SafeMath.tryMul */\n      tag_37\n        /* \"degen/DegenMoneyLib.sol\":2258:2285  SafeMath.tryMul(tp, 10**18) */\n      jump\t// in\n    tag_81:\n        /* \"degen/DegenMoneyLib.sol\":2245:2285  (flag, tp) = SafeMath.tryMul(tp, 10**18) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":2296:2405  require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4392:4394   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":2296:2405  require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4374:4395   */\n      mstore\n        /* \"#utility.yul\":4431:4433   */\n      0x5c\n        /* \"#utility.yul\":4411:4429   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4404:4434   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":4450:4468   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4443:4505   */\n      mstore\n        /* \"#utility.yul\":4541:4575   */\n      0x756c617465207469636b657420707269636520696e20285f626574612f5f6465\n        /* \"#utility.yul\":4521:4539   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4514:4576   */\n      mstore\n        /* \"#utility.yul\":4613:4643   */\n      0x6e6f6d696e61746f722a692a2a5f616c706861292a31302a2a31382e00000000\n        /* \"#utility.yul\":4592:4611   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":4585:4644   */\n      mstore\n        /* \"#utility.yul\":4661:4680   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":2296:2405  require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\") */\n      tag_39\n        /* \"#utility.yul\":4190:4686   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":2296:2405  require(flag, \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\") */\n    tag_82:\n        /* \"degen/DegenMoneyLib.sol\":2431:2458  SafeMath.tryAdd(tp, _gamma) */\n      tag_85\n        /* \"degen/DegenMoneyLib.sol\":2447:2449  tp */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":967:980  0.01 * 10**18 */\n      0x2386f26fc10000\n        /* \"degen/DegenMoneyLib.sol\":2431:2446  SafeMath.tryAdd */\n      tag_86\n        /* \"degen/DegenMoneyLib.sol\":2431:2458  SafeMath.tryAdd(tp, _gamma) */\n      jump\t// in\n    tag_85:\n        /* \"degen/DegenMoneyLib.sol\":2418:2458  (flag, tp) = SafeMath.tryAdd(tp, _gamma) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":2469:2577  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4893:4895   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":2469:2577  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4875:4896   */\n      mstore\n        /* \"#utility.yul\":4932:4934   */\n      0x5b\n        /* \"#utility.yul\":4912:4930   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4905:4935   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":4951:4969   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4944:5006   */\n      mstore\n        /* \"#utility.yul\":5042:5076   */\n      0x756c617465207469636b657420707269636520696e205f626574612f5f64656e\n        /* \"#utility.yul\":5022:5040   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5015:5077   */\n      mstore\n        /* \"#utility.yul\":5114:5143   */\n      0x6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e0000000000\n        /* \"#utility.yul\":5093:5112   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":5086:5144   */\n      mstore\n        /* \"#utility.yul\":5161:5180   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":2469:2577  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\") */\n      tag_39\n        /* \"#utility.yul\":4691:5186   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":2469:2577  require(flag, \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\") */\n    tag_87:\n        /* \"degen/DegenMoneyLib.sol\":2590:2612  bool isMonopolyPenalty */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":2640:2641  0 */\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":2626:2636  firstGrpId */\n      dup9\n        /* \"degen/DegenMoneyLib.sol\":2626:2641  firstGrpId >= 0 */\n      slt\n      iszero\n        /* \"degen/DegenMoneyLib.sol\":2626:2661  firstGrpId >= 0 && SecondGrpId >= 0 */\n      dup1\n      iszero\n      tag_90\n      jumpi\n      pop\n        /* \"degen/DegenMoneyLib.sol\":2660:2661  0 */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":2645:2656  SecondGrpId */\n      dup8\n        /* \"degen/DegenMoneyLib.sol\":2645:2661  SecondGrpId >= 0 */\n      slt\n      iszero\n        /* \"degen/DegenMoneyLib.sol\":2626:2661  firstGrpId >= 0 && SecondGrpId >= 0 */\n    tag_90:\n        /* \"degen/DegenMoneyLib.sol\":2623:3184  if(firstGrpId >= 0 && SecondGrpId >= 0){... */\n      iszero\n      tag_91\n      jumpi\n        /* \"degen/DegenMoneyLib.sol\":712:714  10 */\n      0x0a\n        /* \"degen/DegenMoneyLib.sol\":2680:2718  firstGrpPeopleNum - secondGrpPeopleNum */\n      tag_92\n        /* \"degen/DegenMoneyLib.sol\":2700:2718  secondGrpPeopleNum */\n      dup7\n        /* \"degen/DegenMoneyLib.sol\":2680:2697  firstGrpPeopleNum */\n      dup9\n        /* \"degen/DegenMoneyLib.sol\":2680:2718  firstGrpPeopleNum - secondGrpPeopleNum */\n      tag_47\n      jump\t// in\n    tag_92:\n        /* \"degen/DegenMoneyLib.sol\":2680:2723  firstGrpPeopleNum - secondGrpPeopleNum > _v */\n      gt\n        /* \"degen/DegenMoneyLib.sol\":2677:2862  if(firstGrpPeopleNum - secondGrpPeopleNum > _v){... */\n      iszero\n      tag_93\n      jumpi\n      pop\n        /* \"degen/DegenMoneyLib.sol\":2763:2767  true */\n      0x01\n        /* \"degen/DegenMoneyLib.sol\":2623:3184  if(firstGrpId >= 0 && SecondGrpId >= 0){... */\n      jump(tag_100)\n        /* \"degen/DegenMoneyLib.sol\":2677:2862  if(firstGrpPeopleNum - secondGrpPeopleNum > _v){... */\n    tag_93:\n      pop\n        /* \"degen/DegenMoneyLib.sol\":2841:2846  false */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":2623:3184  if(firstGrpId >= 0 && SecondGrpId >= 0){... */\n      jump(tag_100)\n    tag_91:\n        /* \"degen/DegenMoneyLib.sol\":2906:2907  0 */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":2892:2902  firstGrpId */\n      dup9\n        /* \"degen/DegenMoneyLib.sol\":2892:2907  firstGrpId >= 0 */\n      slt\n      iszero\n        /* \"degen/DegenMoneyLib.sol\":2892:2926  firstGrpId >= 0 && SecondGrpId < 0 */\n      dup1\n      iszero\n      tag_96\n      jumpi\n      pop\n        /* \"degen/DegenMoneyLib.sol\":2925:2926  0 */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":2911:2922  SecondGrpId */\n      dup8\n        /* \"degen/DegenMoneyLib.sol\":2911:2926  SecondGrpId < 0 */\n      slt\n        /* \"degen/DegenMoneyLib.sol\":2892:2926  firstGrpId >= 0 && SecondGrpId < 0 */\n    tag_96:\n        /* \"degen/DegenMoneyLib.sol\":2888:3184  if (firstGrpId >= 0 && SecondGrpId < 0){... */\n      iszero\n      tag_97\n      jumpi\n        /* \"degen/DegenMoneyLib.sol\":712:714  10 */\n      0x0a\n        /* \"degen/DegenMoneyLib.sol\":2945:2962  firstGrpPeopleNum */\n      dup7\n        /* \"degen/DegenMoneyLib.sol\":2945:2967  firstGrpPeopleNum > _v */\n      gt\n        /* \"degen/DegenMoneyLib.sol\":2942:3107  if(firstGrpPeopleNum > _v) {... */\n      iszero\n      tag_93\n      jumpi\n      pop\n        /* \"degen/DegenMoneyLib.sol\":3008:3012  true */\n      0x01\n        /* \"degen/DegenMoneyLib.sol\":2888:3184  if (firstGrpId >= 0 && SecondGrpId < 0){... */\n      jump(tag_100)\n    tag_97:\n      pop\n        /* \"degen/DegenMoneyLib.sol\":3167:3172  false */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":2888:3184  if (firstGrpId >= 0 && SecondGrpId < 0){... */\n    tag_100:\n        /* \"degen/DegenMoneyLib.sol\":3200:3217  isMonopolyPenalty */\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":3196:3800  if (isMonopolyPenalty){... */\n      iszero\n      tag_101\n      jumpi\n        /* \"degen/DegenMoneyLib.sol\":3233:3249  uint256 extraFee */\n      0x00\n        /* \"degen/DegenMoneyLib.sol\":3287:3323  SafeMath.tryMul(totalRewardPool, _p) */\n      tag_102\n        /* \"degen/DegenMoneyLib.sol\":3303:3318  totalRewardPool */\n      dup11\n        /* \"degen/DegenMoneyLib.sol\":635:637  10 */\n      0x0a\n        /* \"degen/DegenMoneyLib.sol\":3287:3302  SafeMath.tryMul */\n      tag_37\n        /* \"degen/DegenMoneyLib.sol\":3287:3323  SafeMath.tryMul(totalRewardPool, _p) */\n      jump\t// in\n    tag_102:\n        /* \"degen/DegenMoneyLib.sol\":3268:3323  (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p) */\n      swap1\n      swap5\n      pop\n      swap1\n      pop\n      dup4\n        /* \"degen/DegenMoneyLib.sol\":3338:3438  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5393:5395   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":3338:3438  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5375:5396   */\n      mstore\n        /* \"#utility.yul\":5432:5434   */\n      0x53\n        /* \"#utility.yul\":5412:5430   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5405:5435   */\n      mstore\n        /* \"#utility.yul\":5471:5505   */\n      0x4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61\n        /* \"#utility.yul\":5451:5469   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5444:5506   */\n      mstore\n        /* \"#utility.yul\":5542:5576   */\n      0x672c20657874726146656529203d20536166654d6174682e7472794d756c2874\n        /* \"#utility.yul\":5522:5540   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5515:5577   */\n      mstore\n      shl(0x68, 0x6f74616c526577617264506f6f6c2c205f7029)\n        /* \"#utility.yul\":5593:5612   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":5586:5636   */\n      mstore\n        /* \"#utility.yul\":5653:5672   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":3338:3438  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\") */\n      tag_39\n        /* \"#utility.yul\":5191:5678   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":3338:3438  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\") */\n    tag_103:\n        /* \"degen/DegenMoneyLib.sol\":3472:3511  SafeMath.tryDiv(extraFee, _denominator) */\n      tag_106\n        /* \"degen/DegenMoneyLib.sol\":3488:3496  extraFee */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1070:1073  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":3472:3487  SafeMath.tryDiv */\n      tag_42\n        /* \"degen/DegenMoneyLib.sol\":3472:3511  SafeMath.tryDiv(extraFee, _denominator) */\n      jump\t// in\n    tag_106:\n        /* \"degen/DegenMoneyLib.sol\":3453:3511  (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator) */\n      swap1\n      swap5\n      pop\n      swap1\n      pop\n      dup4\n        /* \"degen/DegenMoneyLib.sol\":3526:3629  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5885:5887   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":3526:3629  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5867:5888   */\n      mstore\n        /* \"#utility.yul\":5924:5926   */\n      0x56\n        /* \"#utility.yul\":5904:5922   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5897:5927   */\n      mstore\n        /* \"#utility.yul\":5963:5997   */\n      0x4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61\n        /* \"#utility.yul\":5943:5961   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5936:5998   */\n      mstore\n        /* \"#utility.yul\":6034:6068   */\n      0x672c20657874726146656529203d20536166654d6174682e7472794469762865\n        /* \"#utility.yul\":6014:6032   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6007:6069   */\n      mstore\n      shl(0x50, 0x787472614665652c205f64656e6f6d696e61746f7229)\n        /* \"#utility.yul\":6085:6104   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":6078:6131   */\n      mstore\n        /* \"#utility.yul\":6148:6167   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":3526:3629  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\") */\n      tag_39\n        /* \"#utility.yul\":5683:6173   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":3526:3629  require(flag, \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\") */\n    tag_107:\n        /* \"degen/DegenMoneyLib.sol\":3657:3686  SafeMath.tryAdd(tp, extraFee) */\n      tag_110\n        /* \"degen/DegenMoneyLib.sol\":3673:3675  tp */\n      dup4\n        /* \"degen/DegenMoneyLib.sol\":3677:3685  extraFee */\n      dup3\n        /* \"degen/DegenMoneyLib.sol\":3657:3672  SafeMath.tryAdd */\n      tag_86\n        /* \"degen/DegenMoneyLib.sol\":3657:3686  SafeMath.tryAdd(tp, extraFee) */\n      jump\t// in\n    tag_110:\n        /* \"degen/DegenMoneyLib.sol\":3644:3686  (flag, tp) = SafeMath.tryAdd(tp, extraFee) */\n      swap1\n      swap5\n      pop\n      swap3\n      pop\n      dup4\n        /* \"degen/DegenMoneyLib.sol\":3701:3788  require(flag, \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6380:6382   */\n      0x20\n        /* \"degen/DegenMoneyLib.sol\":3701:3788  require(flag, \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6362:6383   */\n      mstore\n        /* \"#utility.yul\":6419:6421   */\n      0x46\n        /* \"#utility.yul\":6399:6417   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6392:6422   */\n      mstore\n        /* \"#utility.yul\":6458:6492   */\n      0x4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61\n        /* \"#utility.yul\":6438:6456   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6431:6493   */\n      mstore\n        /* \"#utility.yul\":6529:6563   */\n      0x672c20747029203d20536166654d6174682e7472794164642874702c20657874\n        /* \"#utility.yul\":6509:6527   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6502:6564   */\n      mstore\n      shl(0xd0, 0x726146656529)\n        /* \"#utility.yul\":6580:6599   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":6573:6610   */\n      mstore\n        /* \"#utility.yul\":6627:6646   */\n      0xa4\n      add\n        /* \"degen/DegenMoneyLib.sol\":3701:3788  require(flag, \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\") */\n      tag_39\n        /* \"#utility.yul\":6178:6652   */\n      jump\n        /* \"degen/DegenMoneyLib.sol\":3701:3788  require(flag, \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\") */\n    tag_111:\n        /* \"degen/DegenMoneyLib.sol\":3218:3800  {... */\n      pop\n        /* \"degen/DegenMoneyLib.sol\":3196:3800  if (isMonopolyPenalty){... */\n    tag_101:\n      pop\n        /* \"degen/DegenMoneyLib.sol\":3819:3821  tp */\n      swap9\n        /* \"degen/DegenMoneyLib.sol\":1314:3829  function ticketPrice(... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"degen/DegenMoneyLib.sol\":3837:4244  function ticketIncome2RewardPool(uint256 ticketIncome) public pure returns (uint256 money) {... */\n    tag_32:\n        /* \"degen/DegenMoneyLib.sol\":3913:3926  uint256 money */\n      0x00\n      dup1\n      dup1\n        /* \"degen/DegenMoneyLib.sol\":4003:4036  SafeMath.tryMul(ticketIncome, _b) */\n      tag_115\n        /* \"degen/DegenMoneyLib.sol\":4019:4031  ticketIncome */\n      dup5\n        /* \"degen/DegenMoneyLib.sol\":457:459  50 */\n      0x32\n        /* \"degen/DegenMoneyLib.sol\":4003:4018  SafeMath.tryMul */\n      tag_37\n        /* \"degen/DegenMoneyLib.sol\":4003:4036  SafeMath.tryMul(ticketIncome, _b) */\n      jump\t// in\n    tag_115:\n        /* \"degen/DegenMoneyLib.sol\":3991:4036  (flag, m) = SafeMath.tryMul(ticketIncome, _b) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":4047:4099  require(flag, \"[ticketIncome2RewardPool] overflow.\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_118\n      jump\t// in\n    tag_116:\n        /* \"degen/DegenMoneyLib.sol\":4122:4154  SafeMath.tryDiv(m, _denominator) */\n      tag_119\n        /* \"degen/DegenMoneyLib.sol\":4138:4139  m */\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":1070:1073  100 */\n      0x64\n        /* \"degen/DegenMoneyLib.sol\":4122:4137  SafeMath.tryDiv */\n      tag_42\n        /* \"degen/DegenMoneyLib.sol\":4122:4154  SafeMath.tryDiv(m, _denominator) */\n      jump\t// in\n    tag_119:\n        /* \"degen/DegenMoneyLib.sol\":4110:4154  (flag, m) = SafeMath.tryDiv(m, _denominator) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      dup2\n        /* \"degen/DegenMoneyLib.sol\":4165:4217  require(flag, \"[ticketIncome2RewardPool] overflow.\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_118\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1339:1832  function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1400:1404  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1406:1413  uint256 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1683:1684  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1688:1689  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1683:1689  a == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1679:1707  if (a == 0) return (true, 0) */\n      tag_123\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1699:1703  true */\n      0x01\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1705:1706  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1691:1707  return (true, 0) */\n      jump(tag_122)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1679:1707  if (a == 0) return (true, 0) */\n    tag_123:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1733:1738  a * b */\n      dup4\n      dup4\n      mul\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1737:1738  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1733:1734  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1733:1738  a * b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1733:1734  a */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1756:1761  c / a */\n      tag_125\n      jumpi\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1756:1766  c / a != b */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1752:1785  if (c / a != b) return (false, 0) */\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1776:1781  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1783:1784  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1768:1785  return (false, 0) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_122)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1752:1785  if (c / a != b) return (false, 0) */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1807:1811  true */\n      0x01\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1813:1814  c */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1339:1832  function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_122:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1981:2171  function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2042:2046  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2048:2055  uint256 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2095:2096  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2095:2101  b == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2091:2120  if (b == 0) return (false, 0) */\n      tag_129\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2111:2116  false */\n      0x00\n      swap1\n      pop\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2103:2120  return (false, 0) */\n      jump(tag_122)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2091:2120  if (b == 0) return (false, 0) */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2142:2146  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2152:2153  b */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2148:2149  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2148:2153  a / b */\n      dup2\n      tag_131\n      jumpi\n      tag_131\n      tag_126\n      jump\t// in\n    tag_131:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2134:2154  return (true, a / b) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":1981:2171  function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":641:857  function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":702:706  bool */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":763:768  a + b */\n      dup4\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":786:791  c < a */\n      dup5\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":782:810  if (c < a) return (false, 0) */\n      iszero\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":801:806  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":808:809  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":793:810  return (false, 0) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_122)\n        /* \"#utility.yul\":204:384   */\n    tag_14:\n        /* \"#utility.yul\":263:269   */\n      0x00\n        /* \"#utility.yul\":316:318   */\n      0x20\n        /* \"#utility.yul\":304:313   */\n      dup3\n        /* \"#utility.yul\":295:302   */\n      dup5\n        /* \"#utility.yul\":291:314   */\n      sub\n        /* \"#utility.yul\":287:319   */\n      slt\n        /* \"#utility.yul\":284:336   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":332:333   */\n      0x00\n        /* \"#utility.yul\":329:330   */\n      dup1\n        /* \"#utility.yul\":322:334   */\n      revert\n        /* \"#utility.yul\":284:336   */\n    tag_138:\n      pop\n        /* \"#utility.yul\":355:378   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":204:384   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":389:637   */\n    tag_19:\n        /* \"#utility.yul\":457:463   */\n      0x00\n        /* \"#utility.yul\":465:471   */\n      dup1\n        /* \"#utility.yul\":518:520   */\n      0x40\n        /* \"#utility.yul\":506:515   */\n      dup4\n        /* \"#utility.yul\":497:504   */\n      dup6\n        /* \"#utility.yul\":493:516   */\n      sub\n        /* \"#utility.yul\":489:521   */\n      slt\n        /* \"#utility.yul\":486:538   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":534:535   */\n      0x00\n        /* \"#utility.yul\":531:532   */\n      dup1\n        /* \"#utility.yul\":524:536   */\n      revert\n        /* \"#utility.yul\":486:538   */\n    tag_140:\n      pop\n      pop\n        /* \"#utility.yul\":557:580   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":627:629   */\n      0x20\n        /* \"#utility.yul\":612:630   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":599:631   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":389:637   */\n      jump\t// out\n        /* \"#utility.yul\":642:1163   */\n    tag_27:\n        /* \"#utility.yul\":744:750   */\n      0x00\n        /* \"#utility.yul\":752:758   */\n      dup1\n        /* \"#utility.yul\":760:766   */\n      0x00\n        /* \"#utility.yul\":768:774   */\n      dup1\n        /* \"#utility.yul\":776:782   */\n      0x00\n        /* \"#utility.yul\":784:790   */\n      dup1\n        /* \"#utility.yul\":837:840   */\n      0xc0\n        /* \"#utility.yul\":825:834   */\n      dup8\n        /* \"#utility.yul\":816:823   */\n      dup10\n        /* \"#utility.yul\":812:835   */\n      sub\n        /* \"#utility.yul\":808:841   */\n      slt\n        /* \"#utility.yul\":805:858   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":851:852   */\n      dup1\n        /* \"#utility.yul\":844:856   */\n      revert\n        /* \"#utility.yul\":805:858   */\n    tag_142:\n      pop\n      pop\n        /* \"#utility.yul\":877:900   */\n      dup5\n      calldataload\n      swap7\n        /* \"#utility.yul\":947:949   */\n      0x20\n        /* \"#utility.yul\":932:950   */\n      dup7\n      add\n        /* \"#utility.yul\":919:951   */\n      calldataload\n      swap7\n      pop\n        /* \"#utility.yul\":998:1000   */\n      0x40\n        /* \"#utility.yul\":983:1001   */\n      dup7\n      add\n        /* \"#utility.yul\":970:1002   */\n      calldataload\n      swap6\n        /* \"#utility.yul\":1049:1051   */\n      0x60\n        /* \"#utility.yul\":1034:1052   */\n      dup2\n      add\n        /* \"#utility.yul\":1021:1053   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":1100:1103   */\n      0x80\n        /* \"#utility.yul\":1085:1104   */\n      dup2\n      add\n        /* \"#utility.yul\":1072:1105   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":1152:1155   */\n      0xa0\n        /* \"#utility.yul\":1137:1156   */\n      add\n        /* \"#utility.yul\":1124:1157   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":642:1163   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1168:1568   */\n    tag_40:\n        /* \"#utility.yul\":1370:1372   */\n      0x20\n        /* \"#utility.yul\":1352:1373   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1409:1411   */\n      0x24\n        /* \"#utility.yul\":1389:1407   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1382:1412   */\n      mstore\n        /* \"#utility.yul\":1448:1482   */\n      0x5b7469636b6574496e636f6d653247726f75704c65616465725d206f76657266\n        /* \"#utility.yul\":1443:1445   */\n      0x40\n        /* \"#utility.yul\":1428:1446   */\n      dup3\n      add\n        /* \"#utility.yul\":1421:1483   */\n      mstore\n      shl(0xe1, 0x3637bb97)\n        /* \"#utility.yul\":1514:1516   */\n      0x60\n        /* \"#utility.yul\":1499:1517   */\n      dup3\n      add\n        /* \"#utility.yul\":1492:1526   */\n      mstore\n        /* \"#utility.yul\":1558:1561   */\n      0x80\n        /* \"#utility.yul\":1543:1562   */\n      add\n      swap1\n        /* \"#utility.yul\":1168:1568   */\n      jump\t// out\n        /* \"#utility.yul\":1573:1700   */\n    tag_134:\n        /* \"#utility.yul\":1634:1644   */\n      0x4e487b71\n        /* \"#utility.yul\":1629:1632   */\n      0xe0\n        /* \"#utility.yul\":1625:1645   */\n      shl\n        /* \"#utility.yul\":1622:1623   */\n      0x00\n        /* \"#utility.yul\":1615:1646   */\n      mstore\n        /* \"#utility.yul\":1665:1669   */\n      0x11\n        /* \"#utility.yul\":1662:1663   */\n      0x04\n        /* \"#utility.yul\":1655:1670   */\n      mstore\n        /* \"#utility.yul\":1689:1693   */\n      0x24\n        /* \"#utility.yul\":1686:1687   */\n      0x00\n        /* \"#utility.yul\":1679:1694   */\n      revert\n        /* \"#utility.yul\":1705:1833   */\n    tag_47:\n        /* \"#utility.yul\":1772:1781   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1793:1804   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1790:1827   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":1807:1825   */\n      tag_45\n      tag_134\n      jump\t// in\n        /* \"#utility.yul\":1838:2238   */\n    tag_52:\n        /* \"#utility.yul\":2040:2042   */\n      0x20\n        /* \"#utility.yul\":2022:2043   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2079:2081   */\n      0x24\n        /* \"#utility.yul\":2059:2077   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2052:2082   */\n      mstore\n        /* \"#utility.yul\":2118:2152   */\n      0x5b7469636b6574496e636f6d653247726f75704d656d6265725d206f76657266\n        /* \"#utility.yul\":2113:2115   */\n      0x40\n        /* \"#utility.yul\":2098:2116   */\n      dup3\n      add\n        /* \"#utility.yul\":2091:2153   */\n      mstore\n      shl(0xe1, 0x3637bb97)\n        /* \"#utility.yul\":2184:2186   */\n      0x60\n        /* \"#utility.yul\":2169:2187   */\n      dup3\n      add\n        /* \"#utility.yul\":2162:2196   */\n      mstore\n        /* \"#utility.yul\":2228:2231   */\n      0x80\n        /* \"#utility.yul\":2213:2232   */\n      add\n      swap1\n        /* \"#utility.yul\":1838:2238   */\n      jump\t// out\n        /* \"#utility.yul\":3079:3214   */\n    tag_72:\n        /* \"#utility.yul\":3118:3121   */\n      0x00\n        /* \"#utility.yul\":3139:3156   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":3136:3179   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":3159:3177   */\n      tag_153\n      tag_134\n      jump\t// in\n    tag_153:\n      pop\n        /* \"#utility.yul\":3206:3207   */\n      0x01\n        /* \"#utility.yul\":3195:3208   */\n      add\n      swap1\n        /* \"#utility.yul\":3079:3214   */\n      jump\t// out\n        /* \"#utility.yul\":6657:7056   */\n    tag_118:\n        /* \"#utility.yul\":6859:6861   */\n      0x20\n        /* \"#utility.yul\":6841:6862   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6898:6900   */\n      0x23\n        /* \"#utility.yul\":6878:6896   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6871:6901   */\n      mstore\n        /* \"#utility.yul\":6937:6971   */\n      0x5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c\n        /* \"#utility.yul\":6932:6934   */\n      0x40\n        /* \"#utility.yul\":6917:6935   */\n      dup3\n      add\n        /* \"#utility.yul\":6910:6972   */\n      mstore\n      shl(0xe9, 0x37bb97)\n        /* \"#utility.yul\":7003:7005   */\n      0x60\n        /* \"#utility.yul\":6988:7006   */\n      dup3\n      add\n        /* \"#utility.yul\":6981:7014   */\n      mstore\n        /* \"#utility.yul\":7046:7049   */\n      0x80\n        /* \"#utility.yul\":7031:7050   */\n      add\n      swap1\n        /* \"#utility.yul\":6657:7056   */\n      jump\t// out\n        /* \"#utility.yul\":7061:7188   */\n    tag_126:\n        /* \"#utility.yul\":7122:7132   */\n      0x4e487b71\n        /* \"#utility.yul\":7117:7120   */\n      0xe0\n        /* \"#utility.yul\":7113:7133   */\n      shl\n        /* \"#utility.yul\":7110:7111   */\n      0x00\n        /* \"#utility.yul\":7103:7134   */\n      mstore\n        /* \"#utility.yul\":7153:7157   */\n      0x12\n        /* \"#utility.yul\":7150:7151   */\n      0x04\n        /* \"#utility.yul\":7143:7158   */\n      mstore\n        /* \"#utility.yul\":7177:7181   */\n      0x24\n        /* \"#utility.yul\":7174:7175   */\n      0x00\n        /* \"#utility.yul\":7167:7182   */\n      revert\n    stop\n    data_3ea7e64d02bfa2ce3fc0ccd06ec6010a4af3c1c13862f1013ea695f2535f0f7a 4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63\n\n    auxdata: 0xa26469706673582212206f4e58dbbb0146e3b4bcf7935f5df6d0c2c7c802d0838512b63e111ec98e657364736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "610a1f61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c806326d0a334146100715780632e26fb4a1461008d57806384105419146100a057806391096a3c146100b35780639b49380b146100c1578063e6ca2a8d146100d4575b600080fd5b670de0b6b3a76400005b60405190815260200160405180910390f35b61007b61009b366004610828565b6100e7565b61007b6100ae366004610841565b610155565b678ac7230489e8000061007b565b61007b6100cf366004610863565b610205565b61007b6100e2366004610828565b610731565b600080806100f684600361078f565b9092509050816101215760405162461bcd60e51b8152600401610118906108a6565b60405180910390fd5b61012c8160646107da565b90925090508161014e5760405162461bcd60e51b8152600401610118906108a6565b9392505050565b600080603261016660036064610900565b6101709190610900565b905060008061017f868461078f565b9092509050816101a15760405162461bcd60e51b815260040161011890610913565b6101ac8160646107da565b9092509050816101ce5760405162461bcd60e51b815260040161011890610913565b6101d881866107da565b9092509050816101fa5760405162461bcd60e51b815260040161011890610913565b925050505b92915050565b600060018060005b600281101561029a57610220828b61078f565b909350915082610288576040805162461bcd60e51b81526020600482015260248101919091526000805160206109ca83398151915260448201527f756c617465207469636b657420707269636520696e20692a2a5f616c7068612e6064820152608401610118565b8061029281610957565b91505061020d565b506102a681600a61078f565b90925090508161031b5760405162461bcd60e51b815260206004820152604660248201526000805160206109ca83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612a692a2a5f60648201526530b63834309760d11b608482015260a401610118565b6103268160646107da565b9092509050816103a85760405162461bcd60e51b815260206004820152605360248201526000805160206109ca83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612f5f64656e60648201527237b6b4b730ba37b9153495152fb0b63834309760691b608482015260a401610118565b6103ba81670de0b6b3a764000061078f565b9092509050816104465760405162461bcd60e51b815260206004820152605c60248201526000805160206109ca83398151915260448201527f756c617465207469636b657420707269636520696e20285f626574612f5f646560648201527f6e6f6d696e61746f722a692a2a5f616c706861292a31302a2a31382e00000000608482015260a401610118565b61045781662386f26fc1000061080d565b9092509050816104e35760405162461bcd60e51b815260206004820152605b60248201526000805160206109ca83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612f5f64656e60648201527f6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e0000000000608482015260a401610118565b60008088121580156104f6575060008712155b1561051d57600a6105078688610900565b111561051557506001610548565b506000610548565b6000881215801561052e5750600087125b1561054457600a86111561051557506001610548565b5060005b801561072457600061055b8a600a61078f565b9094509050836105ef5760405162461bcd60e51b815260206004820152605360248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20657874726146656529203d20536166654d6174682e7472794d756c28746064820152726f74616c526577617264506f6f6c2c205f702960681b608482015260a401610118565b6105fa8160646107da565b9094509050836106915760405162461bcd60e51b815260206004820152605660248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20657874726146656529203d20536166654d6174682e7472794469762865606482015275787472614665652c205f64656e6f6d696e61746f722960501b608482015260a401610118565b61069b838261080d565b9094509250836107225760405162461bcd60e51b815260206004820152604660248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20747029203d20536166654d6174682e7472794164642874702c2065787460648201526572614665652960d01b608482015260a401610118565b505b5098975050505050505050565b6000808061074084603261078f565b9092509050816107625760405162461bcd60e51b815260040161011890610970565b61076d8160646107da565b90925090508161014e5760405162461bcd60e51b815260040161011890610970565b600080836000036107a657506001905060006107d3565b838302838582816107b9576107b96109b3565b04146107cc5760008092509250506107d3565b6001925090505b9250929050565b600080826000036107f0575060009050806107d3565b6001838581610801576108016109b3565b04915091509250929050565b600080838301848110156107cc5760008092509250506107d3565b60006020828403121561083a57600080fd5b5035919050565b6000806040838503121561085457600080fd5b50508035926020909101359150565b60008060008060008060c0878903121561087c57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b60208082526024908201527f5b7469636b6574496e636f6d653247726f75704c65616465725d206f766572666040820152633637bb9760e11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156101ff576101ff6108ea565b60208082526024908201527f5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666040820152633637bb9760e11b606082015260800190565b600060018201610969576109696108ea565b5060010190565b60208082526023908201527f5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c60408201526237bb9760e91b606082015260800190565b634e487b7160e01b600052601260045260246000fdfe4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63a26469706673582212206f4e58dbbb0146e3b4bcf7935f5df6d0c2c7c802d0838512b63e111ec98e657364736f6c63430008120033",
							"opcodes": "PUSH2 0xA1F PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26D0A334 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x2E26FB4A EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x84105419 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x91096A3C EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x9B49380B EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xE6CA2A8D EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x828 JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST PUSH2 0x7B PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0x841 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST PUSH8 0x8AC7230489E80000 PUSH2 0x7B JUMP JUMPDEST PUSH2 0x7B PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x863 JUMP JUMPDEST PUSH2 0x205 JUMP JUMPDEST PUSH2 0x7B PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x828 JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xF6 DUP5 PUSH1 0x3 PUSH2 0x78F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 PUSH1 0x64 PUSH2 0x7DA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x14E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x8A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x32 PUSH2 0x166 PUSH1 0x3 PUSH1 0x64 PUSH2 0x900 JUMP JUMPDEST PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x900 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x17F DUP7 DUP5 PUSH2 0x78F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x913 JUMP JUMPDEST PUSH2 0x1AC DUP2 PUSH1 0x64 PUSH2 0x7DA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x913 JUMP JUMPDEST PUSH2 0x1D8 DUP2 DUP7 PUSH2 0x7DA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x913 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x29A JUMPI PUSH2 0x220 DUP3 DUP12 PUSH2 0x78F JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x288 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x9CA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E20692A2A5F616C7068612E PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x118 JUMP JUMPDEST DUP1 PUSH2 0x292 DUP2 PUSH2 0x957 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20D JUMP JUMPDEST POP PUSH2 0x2A6 DUP2 PUSH1 0xA PUSH2 0x78F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x31B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x9CA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612A692A2A5F PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x30B638343097 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x326 DUP2 PUSH1 0x64 PUSH2 0x7DA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x3A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x53 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x9CA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612F5F64656E PUSH1 0x64 DUP3 ADD MSTORE PUSH19 0x37B6B4B730BA37B9153495152FB0B638343097 PUSH1 0x69 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x3BA DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x78F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x446 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5C PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x9CA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E20285F626574612F5F6465 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E6F6D696E61746F722A692A2A5F616C706861292A31302A2A31382E00000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x457 DUP2 PUSH7 0x2386F26FC10000 PUSH2 0x80D JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x9CA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612F5F64656E PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6F6D696E61746F722A692A2A5F616C706861202B2067616D6D612E0000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP9 SLT ISZERO DUP1 ISZERO PUSH2 0x4F6 JUMPI POP PUSH1 0x0 DUP8 SLT ISZERO JUMPDEST ISZERO PUSH2 0x51D JUMPI PUSH1 0xA PUSH2 0x507 DUP7 DUP9 PUSH2 0x900 JUMP JUMPDEST GT ISZERO PUSH2 0x515 JUMPI POP PUSH1 0x1 PUSH2 0x548 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x0 DUP9 SLT ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI POP PUSH1 0x0 DUP8 SLT JUMPDEST ISZERO PUSH2 0x544 JUMPI PUSH1 0xA DUP7 GT ISZERO PUSH2 0x515 JUMPI POP PUSH1 0x1 PUSH2 0x548 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP1 ISZERO PUSH2 0x724 JUMPI PUSH1 0x0 PUSH2 0x55B DUP11 PUSH1 0xA PUSH2 0x78F JUMP JUMPDEST SWAP1 SWAP5 POP SWAP1 POP DUP4 PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x53 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20657874726146656529203D20536166654D6174682E7472794D756C2874 PUSH1 0x64 DUP3 ADD MSTORE PUSH19 0x6F74616C526577617264506F6F6C2C205F7029 PUSH1 0x68 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x5FA DUP2 PUSH1 0x64 PUSH2 0x7DA JUMP JUMPDEST SWAP1 SWAP5 POP SWAP1 POP DUP4 PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x56 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20657874726146656529203D20536166654D6174682E7472794469762865 PUSH1 0x64 DUP3 ADD MSTORE PUSH22 0x787472614665652C205F64656E6F6D696E61746F7229 PUSH1 0x50 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x69B DUP4 DUP3 PUSH2 0x80D JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP DUP4 PUSH2 0x722 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20747029203D20536166654D6174682E7472794164642874702C20657874 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x726146656529 PUSH1 0xD0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST POP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x740 DUP5 PUSH1 0x32 PUSH2 0x78F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x762 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x970 JUMP JUMPDEST PUSH2 0x76D DUP2 PUSH1 0x64 PUSH2 0x7DA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x14E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 SUB PUSH2 0x7A6 JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH2 0x7D3 JUMP JUMPDEST DUP4 DUP4 MUL DUP4 DUP6 DUP3 DUP2 PUSH2 0x7B9 JUMPI PUSH2 0x7B9 PUSH2 0x9B3 JUMP JUMPDEST DIV EQ PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 SUB PUSH2 0x7F0 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x801 JUMPI PUSH2 0x801 PUSH2 0x9B3 JUMP JUMPDEST DIV SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 ADD DUP5 DUP2 LT ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x83A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x87C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP5 CALLDATALOAD SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D653247726F75704C65616465725D206F76657266 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3637BB97 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1FF JUMPI PUSH2 0x1FF PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D653247726F75704D656D6265725D206F76657266 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3637BB97 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x969 JUMPI PUSH2 0x969 PUSH2 0x8EA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D6532526577617264506F6F6C5D206F766572666C PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x37BB97 PUSH1 0xE9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0x4E PUSH22 0x6D626572206F766572666C6F77206F63637572732077 PUSH9 0x656E2063616C63A264 PUSH10 0x706673582212206F4E58 0xDB 0xBB ADD CHAINID 0xE3 0xB4 0xBC 0xF7 SWAP4 0x5F 0x5D 0xF6 0xD0 0xC2 0xC7 0xC8 MUL 0xD0 DUP4 DUP6 SLT 0xB6 RETURNDATACOPY GT 0x1E 0xC9 DUP15 PUSH6 0x7364736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "123:5139:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;123:5139:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@groupCreateMinFee_375": {
									"entryPoint": null,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taskCreateMinFee_367": {
									"entryPoint": null,
									"id": 367,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ticketIncome2GroupLeader_703": {
									"entryPoint": 231,
									"id": 703,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ticketIncome2GroupMember_776": {
									"entryPoint": 341,
									"id": 776,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@ticketIncome2RewardPool_655": {
									"entryPoint": 1841,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ticketPrice_607": {
									"entryPoint": 517,
									"id": 607,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@tryAdd_34": {
									"entryPoint": 2061,
									"id": 34,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryDiv_132": {
									"entryPoint": 2010,
									"id": 132,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@tryMul_104": {
									"entryPoint": 1935,
									"id": 104,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_int256t_int256t_uint256t_uint256": {
									"entryPoint": 2147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_tuple_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f6addb26863066f4fc9b23aba533f4fdd42a896e1187d8b37bf8aa1dfd5adc6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9925b897b1b5e7f46ce753efc960858b0d7ed723178392dae59a70457210994d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dc71b2050d303ab0cccf48d4e0bfdb8bc2c6920659efc90f83709c3a3bfa2051__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2282,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7190:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "123:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "133:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "145:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "156:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "141:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "141:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "133:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "175:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "186:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "168:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "168:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "92:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "103:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "114:4:2",
														"type": ""
													}
												],
												"src": "14:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "274:110:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "320:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "329:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "332:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "322:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "322:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "322:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "295:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "304:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "291:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "291:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "316:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "287:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "287:32:2"
															},
															"nodeType": "YulIf",
															"src": "284:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "345:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "368:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "355:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "355:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "240:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "251:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "263:6:2",
														"type": ""
													}
												],
												"src": "204:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "476:161:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "522:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "531:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "534:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "524:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "524:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "497:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "506:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "493:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "493:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "518:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "489:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:32:2"
															},
															"nodeType": "YulIf",
															"src": "486:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "547:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "557:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "557:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "547:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "616:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "627:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "612:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "612:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "599:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "434:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "445:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "457:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "465:6:2",
														"type": ""
													}
												],
												"src": "389:248:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:368:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "842:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "851:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "854:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "844:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "844:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "844:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "816:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "825:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "812:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "812:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "837:3:2",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "808:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "808:33:2"
															},
															"nodeType": "YulIf",
															"src": "805:53:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "867:33:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "890:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "877:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "877:23:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "867:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "909:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "936:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "947:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "932:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "932:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "919:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "960:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "987:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "998:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "983:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "970:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:32:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "960:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1011:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1038:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1049:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1034:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1034:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1021:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:32:2"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1062:43:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1089:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1100:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:19:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1072:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1072:33:2"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1062:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1114:43:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1141:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1152:3:2",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1137:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:19:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1124:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:33:2"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_int256t_int256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "721:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "732:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "744:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "752:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "760:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "768:6:2",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "776:6:2",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "784:6:2",
														"type": ""
													}
												],
												"src": "642:521:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1342:226:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1359:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1370:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1352:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1352:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1404:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1389:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1389:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1409:2:2",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1382:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1382:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1382:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1432:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1443:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1428:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1428:18:2"
																	},
																	{
																		"hexValue": "5b7469636b6574496e636f6d653247726f75704c65616465725d206f76657266",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1448:34:2",
																		"type": "",
																		"value": "[ticketIncome2GroupLeader] overf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1421:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1421:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1421:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1503:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1514:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:18:2"
																	},
																	{
																		"hexValue": "6c6f772e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1519:6:2",
																		"type": "",
																		"value": "low."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1492:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1492:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1535:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1547:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1558:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1543:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1543:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1535:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1319:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1333:4:2",
														"type": ""
													}
												],
												"src": "1168:400:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1605:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1622:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1629:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1634:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1625:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1625:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1615:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1615:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1615:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1665:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1655:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1655:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1655:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1689:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1679:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1573:127:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1754:79:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1764:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1776:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1779:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1764:4:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1805:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1807:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1807:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1807:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "1796:4:2"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1802:1:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1793:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1793:11:2"
															},
															"nodeType": "YulIf",
															"src": "1790:37:2"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1736:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1739:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1745:4:2",
														"type": ""
													}
												],
												"src": "1705:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2012:226:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2029:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2040:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2022:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2022:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2022:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2063:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2074:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2059:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2059:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2079:2:2",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2052:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2052:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2052:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2102:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2113:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2098:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2098:18:2"
																	},
																	{
																		"hexValue": "5b7469636b6574496e636f6d653247726f75704d656d6265725d206f76657266",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2118:34:2",
																		"type": "",
																		"value": "[ticketIncome2GroupMember] overf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2091:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2091:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2091:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2173:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2184:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2169:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2169:18:2"
																	},
																	{
																		"hexValue": "6c6f772e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2189:6:2",
																		"type": "",
																		"value": "low."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2162:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2162:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2162:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2205:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2217:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2213:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2213:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2205:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1989:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2003:4:2",
														"type": ""
													}
												],
												"src": "1838:400:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2417:224:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2434:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2445:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2427:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2427:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2468:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2479:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2464:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2464:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2457:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2457:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2507:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2518:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2503:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2503:18:2"
																	},
																	{
																		"hexValue": "546f2061766f6964206f766572666c6f772c20616c706861203c3d2035206f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2523:34:2",
																		"type": "",
																		"value": "To avoid overflow, alpha <= 5 on"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2496:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2496:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2496:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2578:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2589:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2574:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2574:18:2"
																	},
																	{
																		"hexValue": "6c79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2594:4:2",
																		"type": "",
																		"value": "ly"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2567:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2567:32:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2608:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2620:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2631:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2616:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2608:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2394:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2408:4:2",
														"type": ""
													}
												],
												"src": "2243:398:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2820:254:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2837:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2830:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2830:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2830:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2871:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2882:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2867:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2867:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2887:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2860:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2860:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2910:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2921:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2906:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2906:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2926:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2899:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2899:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2981:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2992:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2977:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2977:18:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e20692a2a5f616c7068612e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2997:34:2",
																		"type": "",
																		"value": "ulate ticket price in i**_alpha."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2970:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2970:62:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3041:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3053:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3064:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3049:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3041:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2797:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2811:4:2",
														"type": ""
													}
												],
												"src": "2646:428:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3126:88:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3157:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3159:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3159:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3159:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3142:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3153:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3149:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3149:6:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3139:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:17:2"
															},
															"nodeType": "YulIf",
															"src": "3136:43:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3188:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3199:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3206:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3195:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3195:13:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:2"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3108:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3118:3:2",
														"type": ""
													}
												],
												"src": "3079:135:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3393:300:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3410:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3421:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3403:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3403:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3444:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3455:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3440:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3440:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3460:2:2",
																		"type": "",
																		"value": "70"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3433:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3433:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3433:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3483:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3494:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3479:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3479:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3499:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3472:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3472:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3472:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3554:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3565:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3550:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3550:18:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e205f626574612a692a2a5f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3570:34:2",
																		"type": "",
																		"value": "ulate ticket price in _beta*i**_"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3543:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3543:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3543:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3625:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3636:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3621:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3621:19:2"
																	},
																	{
																		"hexValue": "616c7068612e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3642:8:2",
																		"type": "",
																		"value": "alpha."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3614:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3614:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3614:37:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3660:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3672:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3683:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3668:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3668:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3660:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3370:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3384:4:2",
														"type": ""
													}
												],
												"src": "3219:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3872:313:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3889:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3900:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3882:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3882:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3882:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3923:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3934:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3919:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3919:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3939:2:2",
																		"type": "",
																		"value": "83"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3912:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3912:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3962:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3973:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3958:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3958:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3978:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3951:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3951:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3951:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4033:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4044:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4029:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4029:18:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e205f626574612f5f64656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4049:34:2",
																		"type": "",
																		"value": "ulate ticket price in _beta/_den"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4022:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4022:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4022:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4104:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4115:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4100:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4100:19:2"
																	},
																	{
																		"hexValue": "6f6d696e61746f722a692a2a5f616c7068612e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4121:21:2",
																		"type": "",
																		"value": "ominator*i**_alpha."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4093:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4093:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4093:50:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4152:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4164:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4175:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4160:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4160:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4152:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3849:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3863:4:2",
														"type": ""
													}
												],
												"src": "3698:487:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4364:322:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4381:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4392:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4374:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4374:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4374:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4415:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4426:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4411:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4411:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4431:2:2",
																		"type": "",
																		"value": "92"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4404:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4404:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4404:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4454:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4465:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4450:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4450:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4470:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4443:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4443:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4443:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4525:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4536:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4521:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4521:18:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e20285f626574612f5f6465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4541:34:2",
																		"type": "",
																		"value": "ulate ticket price in (_beta/_de"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4514:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4514:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4514:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4596:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4607:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4592:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4592:19:2"
																	},
																	{
																		"hexValue": "6e6f6d696e61746f722a692a2a5f616c706861292a31302a2a31382e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4613:30:2",
																		"type": "",
																		"value": "nominator*i**_alpha)*10**18."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4585:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4585:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4585:59:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4653:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4665:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4676:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4661:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4661:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4653:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4341:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4355:4:2",
														"type": ""
													}
												],
												"src": "4190:496:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4865:321:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4882:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4893:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4875:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4875:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4875:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4916:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4927:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4912:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4912:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4932:2:2",
																		"type": "",
																		"value": "91"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4905:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4905:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4905:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4955:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4966:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4951:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4951:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4971:34:2",
																		"type": "",
																		"value": "Number overflow occurs when calc"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4944:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4944:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4944:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5026:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5037:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5022:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5022:18:2"
																	},
																	{
																		"hexValue": "756c617465207469636b657420707269636520696e205f626574612f5f64656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5042:34:2",
																		"type": "",
																		"value": "ulate ticket price in _beta/_den"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5015:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5015:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5015:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5097:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5108:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5093:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5093:19:2"
																	},
																	{
																		"hexValue": "6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5114:29:2",
																		"type": "",
																		"value": "ominator*i**_alpha + gamma."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5086:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5086:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5086:58:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5153:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5165:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5176:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5161:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5161:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5153:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4842:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4856:4:2",
														"type": ""
													}
												],
												"src": "4691:495:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:313:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5382:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5393:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5375:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5375:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5416:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5427:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5412:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5412:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5432:2:2",
																		"type": "",
																		"value": "83"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5405:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5405:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5405:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5455:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5466:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5451:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5451:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5471:34:2",
																		"type": "",
																		"value": "Number overflow occurs when (fla"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5444:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5444:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5444:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5526:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5537:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5522:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5522:18:2"
																	},
																	{
																		"hexValue": "672c20657874726146656529203d20536166654d6174682e7472794d756c2874",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5542:34:2",
																		"type": "",
																		"value": "g, extraFee) = SafeMath.tryMul(t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5515:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5515:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5515:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5597:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5608:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5593:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5593:19:2"
																	},
																	{
																		"hexValue": "6f74616c526577617264506f6f6c2c205f7029",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5614:21:2",
																		"type": "",
																		"value": "otalRewardPool, _p)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:50:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:50:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5645:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5657:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5668:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5653:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5653:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5645:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f6addb26863066f4fc9b23aba533f4fdd42a896e1187d8b37bf8aa1dfd5adc6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5342:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5356:4:2",
														"type": ""
													}
												],
												"src": "5191:487:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5857:316:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5874:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5885:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5867:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5867:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5867:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5908:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5919:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5904:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5904:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5924:2:2",
																		"type": "",
																		"value": "86"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5897:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5897:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5897:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5947:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5958:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5943:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5943:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5963:34:2",
																		"type": "",
																		"value": "Number overflow occurs when (fla"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5936:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5936:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5936:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6018:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6029:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6014:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6014:18:2"
																	},
																	{
																		"hexValue": "672c20657874726146656529203d20536166654d6174682e7472794469762865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6034:34:2",
																		"type": "",
																		"value": "g, extraFee) = SafeMath.tryDiv(e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6007:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6007:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6007:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6089:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6100:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6085:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6085:19:2"
																	},
																	{
																		"hexValue": "787472614665652c205f64656e6f6d696e61746f7229",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6106:24:2",
																		"type": "",
																		"value": "xtraFee, _denominator)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6078:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6078:53:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6078:53:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6140:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6152:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6163:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6148:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6148:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6140:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc71b2050d303ab0cccf48d4e0bfdb8bc2c6920659efc90f83709c3a3bfa2051__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5834:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5848:4:2",
														"type": ""
													}
												],
												"src": "5683:490:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6352:300:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6369:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6380:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6362:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6362:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6362:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6403:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6414:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6399:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6399:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6419:2:2",
																		"type": "",
																		"value": "70"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6392:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6392:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6442:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6453:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6438:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6438:18:2"
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6458:34:2",
																		"type": "",
																		"value": "Number overflow occurs when (fla"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6431:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6431:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6431:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6513:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6524:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6509:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6509:18:2"
																	},
																	{
																		"hexValue": "672c20747029203d20536166654d6174682e7472794164642874702c20657874",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6529:34:2",
																		"type": "",
																		"value": "g, tp) = SafeMath.tryAdd(tp, ext"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6502:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6502:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6502:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6584:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6595:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6580:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6580:19:2"
																	},
																	{
																		"hexValue": "726146656529",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6601:8:2",
																		"type": "",
																		"value": "raFee)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6573:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6573:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6573:37:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6619:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6631:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6642:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6627:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6627:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6619:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9925b897b1b5e7f46ce753efc960858b0d7ed723178392dae59a70457210994d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6329:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6343:4:2",
														"type": ""
													}
												],
												"src": "6178:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6831:225:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6848:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6859:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6841:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6841:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6841:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6882:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6893:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6878:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6878:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6898:2:2",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6871:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6871:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6871:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6921:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6932:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6917:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6917:18:2"
																	},
																	{
																		"hexValue": "5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6937:34:2",
																		"type": "",
																		"value": "[ticketIncome2RewardPool] overfl"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6910:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6910:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6910:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6992:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7003:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6988:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6988:18:2"
																	},
																	{
																		"hexValue": "6f772e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7008:5:2",
																		"type": "",
																		"value": "ow."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6981:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6981:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6981:33:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7023:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7035:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7031:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7031:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7023:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6808:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6822:4:2",
														"type": ""
													}
												],
												"src": "6657:399:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7093:95:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7110:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7117:3:2",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7122:10:2",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7113:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7113:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7103:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7103:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7103:31:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7150:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7153:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7143:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7143:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7143:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7174:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7177:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7167:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7167:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7167:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "7061:127:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_int256t_int256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"[ticketIncome2GroupLeader] overf\")\n        mstore(add(headStart, 96), \"low.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"[ticketIncome2GroupMember] overf\")\n        mstore(add(headStart, 96), \"low.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"To avoid overflow, alpha <= 5 on\")\n        mstore(add(headStart, 96), \"ly\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"Number overflow occurs when calc\")\n        mstore(add(headStart, 96), \"ulate ticket price in i**_alpha.\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 70)\n        mstore(add(headStart, 64), \"Number overflow occurs when calc\")\n        mstore(add(headStart, 96), \"ulate ticket price in _beta*i**_\")\n        mstore(add(headStart, 128), \"alpha.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 83)\n        mstore(add(headStart, 64), \"Number overflow occurs when calc\")\n        mstore(add(headStart, 96), \"ulate ticket price in _beta/_den\")\n        mstore(add(headStart, 128), \"ominator*i**_alpha.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 92)\n        mstore(add(headStart, 64), \"Number overflow occurs when calc\")\n        mstore(add(headStart, 96), \"ulate ticket price in (_beta/_de\")\n        mstore(add(headStart, 128), \"nominator*i**_alpha)*10**18.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 91)\n        mstore(add(headStart, 64), \"Number overflow occurs when calc\")\n        mstore(add(headStart, 96), \"ulate ticket price in _beta/_den\")\n        mstore(add(headStart, 128), \"ominator*i**_alpha + gamma.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_5f6addb26863066f4fc9b23aba533f4fdd42a896e1187d8b37bf8aa1dfd5adc6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 83)\n        mstore(add(headStart, 64), \"Number overflow occurs when (fla\")\n        mstore(add(headStart, 96), \"g, extraFee) = SafeMath.tryMul(t\")\n        mstore(add(headStart, 128), \"otalRewardPool, _p)\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_dc71b2050d303ab0cccf48d4e0bfdb8bc2c6920659efc90f83709c3a3bfa2051__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 86)\n        mstore(add(headStart, 64), \"Number overflow occurs when (fla\")\n        mstore(add(headStart, 96), \"g, extraFee) = SafeMath.tryDiv(e\")\n        mstore(add(headStart, 128), \"xtraFee, _denominator)\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_9925b897b1b5e7f46ce753efc960858b0d7ed723178392dae59a70457210994d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 70)\n        mstore(add(headStart, 64), \"Number overflow occurs when (fla\")\n        mstore(add(headStart, 96), \"g, tp) = SafeMath.tryAdd(tp, ext\")\n        mstore(add(headStart, 128), \"raFee)\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"[ticketIncome2RewardPool] overfl\")\n        mstore(add(headStart, 96), \"ow.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c806326d0a334146100715780632e26fb4a1461008d57806384105419146100a057806391096a3c146100b35780639b49380b146100c1578063e6ca2a8d146100d4575b600080fd5b670de0b6b3a76400005b60405190815260200160405180910390f35b61007b61009b366004610828565b6100e7565b61007b6100ae366004610841565b610155565b678ac7230489e8000061007b565b61007b6100cf366004610863565b610205565b61007b6100e2366004610828565b610731565b600080806100f684600361078f565b9092509050816101215760405162461bcd60e51b8152600401610118906108a6565b60405180910390fd5b61012c8160646107da565b90925090508161014e5760405162461bcd60e51b8152600401610118906108a6565b9392505050565b600080603261016660036064610900565b6101709190610900565b905060008061017f868461078f565b9092509050816101a15760405162461bcd60e51b815260040161011890610913565b6101ac8160646107da565b9092509050816101ce5760405162461bcd60e51b815260040161011890610913565b6101d881866107da565b9092509050816101fa5760405162461bcd60e51b815260040161011890610913565b925050505b92915050565b600060018060005b600281101561029a57610220828b61078f565b909350915082610288576040805162461bcd60e51b81526020600482015260248101919091526000805160206109ca83398151915260448201527f756c617465207469636b657420707269636520696e20692a2a5f616c7068612e6064820152608401610118565b8061029281610957565b91505061020d565b506102a681600a61078f565b90925090508161031b5760405162461bcd60e51b815260206004820152604660248201526000805160206109ca83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612a692a2a5f60648201526530b63834309760d11b608482015260a401610118565b6103268160646107da565b9092509050816103a85760405162461bcd60e51b815260206004820152605360248201526000805160206109ca83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612f5f64656e60648201527237b6b4b730ba37b9153495152fb0b63834309760691b608482015260a401610118565b6103ba81670de0b6b3a764000061078f565b9092509050816104465760405162461bcd60e51b815260206004820152605c60248201526000805160206109ca83398151915260448201527f756c617465207469636b657420707269636520696e20285f626574612f5f646560648201527f6e6f6d696e61746f722a692a2a5f616c706861292a31302a2a31382e00000000608482015260a401610118565b61045781662386f26fc1000061080d565b9092509050816104e35760405162461bcd60e51b815260206004820152605b60248201526000805160206109ca83398151915260448201527f756c617465207469636b657420707269636520696e205f626574612f5f64656e60648201527f6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e0000000000608482015260a401610118565b60008088121580156104f6575060008712155b1561051d57600a6105078688610900565b111561051557506001610548565b506000610548565b6000881215801561052e5750600087125b1561054457600a86111561051557506001610548565b5060005b801561072457600061055b8a600a61078f565b9094509050836105ef5760405162461bcd60e51b815260206004820152605360248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20657874726146656529203d20536166654d6174682e7472794d756c28746064820152726f74616c526577617264506f6f6c2c205f702960681b608482015260a401610118565b6105fa8160646107da565b9094509050836106915760405162461bcd60e51b815260206004820152605660248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20657874726146656529203d20536166654d6174682e7472794469762865606482015275787472614665652c205f64656e6f6d696e61746f722960501b608482015260a401610118565b61069b838261080d565b9094509250836107225760405162461bcd60e51b815260206004820152604660248201527f4e756d626572206f766572666c6f77206f6363757273207768656e2028666c6160448201527f672c20747029203d20536166654d6174682e7472794164642874702c2065787460648201526572614665652960d01b608482015260a401610118565b505b5098975050505050505050565b6000808061074084603261078f565b9092509050816107625760405162461bcd60e51b815260040161011890610970565b61076d8160646107da565b90925090508161014e5760405162461bcd60e51b815260040161011890610970565b600080836000036107a657506001905060006107d3565b838302838582816107b9576107b96109b3565b04146107cc5760008092509250506107d3565b6001925090505b9250929050565b600080826000036107f0575060009050806107d3565b6001838581610801576108016109b3565b04915091509250929050565b600080838301848110156107cc5760008092509250506107d3565b60006020828403121561083a57600080fd5b5035919050565b6000806040838503121561085457600080fd5b50508035926020909101359150565b60008060008060008060c0878903121561087c57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b60208082526024908201527f5b7469636b6574496e636f6d653247726f75704c65616465725d206f766572666040820152633637bb9760e11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b818103818111156101ff576101ff6108ea565b60208082526024908201527f5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666040820152633637bb9760e11b606082015260800190565b600060018201610969576109696108ea565b5060010190565b60208082526023908201527f5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c60408201526237bb9760e91b606082015260800190565b634e487b7160e01b600052601260045260246000fdfe4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63a26469706673582212206f4e58dbbb0146e3b4bcf7935f5df6d0c2c7c802d0838512b63e111ec98e657364736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x26D0A334 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x2E26FB4A EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x84105419 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x91096A3C EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x9B49380B EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xE6CA2A8D EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x828 JUMP JUMPDEST PUSH2 0xE7 JUMP JUMPDEST PUSH2 0x7B PUSH2 0xAE CALLDATASIZE PUSH1 0x4 PUSH2 0x841 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST PUSH8 0x8AC7230489E80000 PUSH2 0x7B JUMP JUMPDEST PUSH2 0x7B PUSH2 0xCF CALLDATASIZE PUSH1 0x4 PUSH2 0x863 JUMP JUMPDEST PUSH2 0x205 JUMP JUMPDEST PUSH2 0x7B PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x828 JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xF6 DUP5 PUSH1 0x3 PUSH2 0x78F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 PUSH1 0x64 PUSH2 0x7DA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x14E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x8A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x32 PUSH2 0x166 PUSH1 0x3 PUSH1 0x64 PUSH2 0x900 JUMP JUMPDEST PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x900 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x17F DUP7 DUP5 PUSH2 0x78F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x913 JUMP JUMPDEST PUSH2 0x1AC DUP2 PUSH1 0x64 PUSH2 0x7DA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x913 JUMP JUMPDEST PUSH2 0x1D8 DUP2 DUP7 PUSH2 0x7DA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x1FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x913 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x29A JUMPI PUSH2 0x220 DUP3 DUP12 PUSH2 0x78F JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP DUP3 PUSH2 0x288 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x9CA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E20692A2A5F616C7068612E PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x118 JUMP JUMPDEST DUP1 PUSH2 0x292 DUP2 PUSH2 0x957 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20D JUMP JUMPDEST POP PUSH2 0x2A6 DUP2 PUSH1 0xA PUSH2 0x78F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x31B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x9CA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612A692A2A5F PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x30B638343097 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x326 DUP2 PUSH1 0x64 PUSH2 0x7DA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x3A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x53 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x9CA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612F5F64656E PUSH1 0x64 DUP3 ADD MSTORE PUSH19 0x37B6B4B730BA37B9153495152FB0B638343097 PUSH1 0x69 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x3BA DUP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x78F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x446 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5C PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x9CA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E20285F626574612F5F6465 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E6F6D696E61746F722A692A2A5F616C706861292A31302A2A31382E00000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x457 DUP2 PUSH7 0x2386F26FC10000 PUSH2 0x80D JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x9CA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756C617465207469636B657420707269636520696E205F626574612F5F64656E PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6F6D696E61746F722A692A2A5F616C706861202B2067616D6D612E0000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP9 SLT ISZERO DUP1 ISZERO PUSH2 0x4F6 JUMPI POP PUSH1 0x0 DUP8 SLT ISZERO JUMPDEST ISZERO PUSH2 0x51D JUMPI PUSH1 0xA PUSH2 0x507 DUP7 DUP9 PUSH2 0x900 JUMP JUMPDEST GT ISZERO PUSH2 0x515 JUMPI POP PUSH1 0x1 PUSH2 0x548 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x0 DUP9 SLT ISZERO DUP1 ISZERO PUSH2 0x52E JUMPI POP PUSH1 0x0 DUP8 SLT JUMPDEST ISZERO PUSH2 0x544 JUMPI PUSH1 0xA DUP7 GT ISZERO PUSH2 0x515 JUMPI POP PUSH1 0x1 PUSH2 0x548 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP1 ISZERO PUSH2 0x724 JUMPI PUSH1 0x0 PUSH2 0x55B DUP11 PUSH1 0xA PUSH2 0x78F JUMP JUMPDEST SWAP1 SWAP5 POP SWAP1 POP DUP4 PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x53 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20657874726146656529203D20536166654D6174682E7472794D756C2874 PUSH1 0x64 DUP3 ADD MSTORE PUSH19 0x6F74616C526577617264506F6F6C2C205F7029 PUSH1 0x68 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x5FA DUP2 PUSH1 0x64 PUSH2 0x7DA JUMP JUMPDEST SWAP1 SWAP5 POP SWAP1 POP DUP4 PUSH2 0x691 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x56 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20657874726146656529203D20536166654D6174682E7472794469762865 PUSH1 0x64 DUP3 ADD MSTORE PUSH22 0x787472614665652C205F64656E6F6D696E61746F7229 PUSH1 0x50 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x69B DUP4 DUP3 PUSH2 0x80D JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP DUP4 PUSH2 0x722 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672C20747029203D20536166654D6174682E7472794164642874702C20657874 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x726146656529 PUSH1 0xD0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x118 JUMP JUMPDEST POP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x740 DUP5 PUSH1 0x32 PUSH2 0x78F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x762 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x970 JUMP JUMPDEST PUSH2 0x76D DUP2 PUSH1 0x64 PUSH2 0x7DA JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x14E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 SUB PUSH2 0x7A6 JUMPI POP PUSH1 0x1 SWAP1 POP PUSH1 0x0 PUSH2 0x7D3 JUMP JUMPDEST DUP4 DUP4 MUL DUP4 DUP6 DUP3 DUP2 PUSH2 0x7B9 JUMPI PUSH2 0x7B9 PUSH2 0x9B3 JUMP JUMPDEST DIV EQ PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP SWAP1 POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 SUB PUSH2 0x7F0 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x1 DUP4 DUP6 DUP2 PUSH2 0x801 JUMPI PUSH2 0x801 PUSH2 0x9B3 JUMP JUMPDEST DIV SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 ADD DUP5 DUP2 LT ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 SWAP3 POP SWAP3 POP POP PUSH2 0x7D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x83A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x87C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP5 CALLDATALOAD SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D653247726F75704C65616465725D206F76657266 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3637BB97 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1FF JUMPI PUSH2 0x1FF PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D653247726F75704D656D6265725D206F76657266 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x3637BB97 PUSH1 0xE1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x969 JUMPI PUSH2 0x969 PUSH2 0x8EA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x5B7469636B6574496E636F6D6532526577617264506F6F6C5D206F766572666C PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x37BB97 PUSH1 0xE9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0x4E PUSH22 0x6D626572206F766572666C6F77206F63637572732077 PUSH9 0x656E2063616C63A264 PUSH10 0x706673582212206F4E58 0xDB 0xBB ADD CHAINID 0xE3 0xB4 0xBC 0xF7 SWAP4 0x5F 0x5D 0xF6 0xD0 0xC2 0xC7 0xC8 MUL 0xD0 DUP4 DUP6 SLT 0xB6 RETURNDATACOPY GT 0x1E 0xC9 DUP15 PUSH6 0x7364736F6C63 NUMBER STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "123:5139:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1197:109;324:10;1197:109;;;168:25:2;;;156:2;141:18;1197:109:1;;;;;;;4252:410;;;;;;:::i;:::-;;:::i;4670:587::-;;;;;;:::i;:::-;;:::i;1082:107::-;260:11;1082:107;;1314:2515;;;;;;:::i;:::-;;:::i;3837:407::-;;;;;;:::i;:::-;;:::i;4252:410::-;4329:13;;;4419:33;4435:12;371:1;4419:15;:33::i;:::-;4407:45;;-1:-1:-1;4407:45:1;-1:-1:-1;4407:45:1;4463:53;;;;-1:-1:-1;;;4463:53:1;;;;;;;:::i;:::-;;;;;;;;;4539:32;4555:1;1070:3;4539:15;:32::i;:::-;4527:44;;-1:-1:-1;4527:44:1;-1:-1:-1;4527:44:1;4582:53;;;;-1:-1:-1;;;4582:53:1;;;;;;;:::i;:::-;4653:1;4252:410;-1:-1:-1;;;4252:410:1:o;4670:587::-;4763:13;;457:2;4801:17;371:1;1070:3;4801:17;:::i;:::-;:22;;;;:::i;:::-;4789:34;;4836:9;4864;4900:32;4916:12;4930:1;4900:15;:32::i;:::-;4888:44;;-1:-1:-1;4888:44:1;-1:-1:-1;4888:44:1;4943:53;;;;-1:-1:-1;;;4943:53:1;;;;;;;:::i;:::-;5019:32;5035:1;1070:3;5019:15;:32::i;:::-;5007:44;;-1:-1:-1;5007:44:1;-1:-1:-1;5007:44:1;5062:53;;;;-1:-1:-1;;;5062:53:1;;;;;;;:::i;:::-;5138:26;5154:1;5157:6;5138:15;:26::i;:::-;5126:38;;-1:-1:-1;5126:38:1;-1:-1:-1;5126:38:1;5175:53;;;;-1:-1:-1;;;5175:53:1;;;;;;;:::i;:::-;5248:1;-1:-1:-1;;;4670:587:1;;;;;:::o;1314:2515::-;1556:13;1671:4;;1659:9;1721:192;838:1;1736;:10;1721:192;;;1781:24;1797:2;1801:3;1781:15;:24::i;:::-;1768:37;;-1:-1:-1;1768:37:1;-1:-1:-1;1768:37:1;1820:81;;;;;-1:-1:-1;;;1820:81:1;;2848:2:2;1820:81:1;;;2830:21:2;2867:18;;;2860:30;;;;-1:-1:-1;;;;;;;;;;;2906:18:2;;;2899:62;2997:34;2977:18;;;2970:62;3049:19;;1820:81:1;2646:428:2;1820:81:1;1748:3;;;;:::i;:::-;;;;1721:192;;;;1938:26;1954:2;879;1938:15;:26::i;:::-;1925:39;;-1:-1:-1;1925:39:1;-1:-1:-1;1925:39:1;1975:87;;;;-1:-1:-1;;;1975:87:1;;3421:2:2;1975:87:1;;;3403:21:2;3460:2;3440:18;;;3433:30;-1:-1:-1;;;;;;;;;;;3479:18:2;;;3472:62;3570:34;3550:18;;;3543:62;-1:-1:-1;;;3621:19:2;;;3614:37;3668:19;;1975:87:1;3219:474:2;1975:87:1;2088:33;2104:2;1070:3;2088:15;:33::i;:::-;2075:46;;-1:-1:-1;2075:46:1;-1:-1:-1;2075:46:1;2132:100;;;;-1:-1:-1;;;2132:100:1;;3900:2:2;2132:100:1;;;3882:21:2;3939:2;3919:18;;;3912:30;-1:-1:-1;;;;;;;;;;;3958:18:2;;;3951:62;4049:34;4029:18;;;4022:62;-1:-1:-1;;;4100:19:2;;;4093:50;4160:19;;2132:100:1;3698:487:2;2132:100:1;2258:27;2274:2;2278:6;2258:15;:27::i;:::-;2245:40;;-1:-1:-1;2245:40:1;-1:-1:-1;2245:40:1;2296:109;;;;-1:-1:-1;;;2296:109:1;;4392:2:2;2296:109:1;;;4374:21:2;4431:2;4411:18;;;4404:30;-1:-1:-1;;;;;;;;;;;4450:18:2;;;4443:62;4541:34;4521:18;;;4514:62;4613:30;4592:19;;;4585:59;4661:19;;2296:109:1;4190:496:2;2296:109:1;2431:27;2447:2;967:13;2431:15;:27::i;:::-;2418:40;;-1:-1:-1;2418:40:1;-1:-1:-1;2418:40:1;2469:108;;;;-1:-1:-1;;;2469:108:1;;4893:2:2;2469:108:1;;;4875:21:2;4932:2;4912:18;;;4905:30;-1:-1:-1;;;;;;;;;;;4951:18:2;;;4944:62;5042:34;5022:18;;;5015:62;5114:29;5093:19;;;5086:58;5161:19;;2469:108:1;4691:495:2;2469:108:1;2590:22;2640:1;2626:10;:15;;:35;;;;;2660:1;2645:11;:16;;2626:35;2623:561;;;712:2;2680:38;2700:18;2680:17;:38;:::i;:::-;:43;2677:185;;;-1:-1:-1;2763:4:1;2623:561;;2677:185;-1:-1:-1;2841:5:1;2623:561;;;2906:1;2892:10;:15;;:34;;;;;2925:1;2911:11;:15;2892:34;2888:296;;;712:2;2945:17;:22;2942:165;;;-1:-1:-1;3008:4:1;2888:296;;;-1:-1:-1;3167:5:1;2888:296;3200:17;3196:604;;;3233:16;3287:36;3303:15;635:2;3287:15;:36::i;:::-;3268:55;;-1:-1:-1;3268:55:1;-1:-1:-1;3268:55:1;3338:100;;;;-1:-1:-1;;;3338:100:1;;5393:2:2;3338:100:1;;;5375:21:2;5432:2;5412:18;;;5405:30;5471:34;5451:18;;;5444:62;5542:34;5522:18;;;5515:62;-1:-1:-1;;;5593:19:2;;;5586:50;5653:19;;3338:100:1;5191:487:2;3338:100:1;3472:39;3488:8;1070:3;3472:15;:39::i;:::-;3453:58;;-1:-1:-1;3453:58:1;-1:-1:-1;3453:58:1;3526:103;;;;-1:-1:-1;;;3526:103:1;;5885:2:2;3526:103:1;;;5867:21:2;5924:2;5904:18;;;5897:30;5963:34;5943:18;;;5936:62;6034:34;6014:18;;;6007:62;-1:-1:-1;;;6085:19:2;;;6078:53;6148:19;;3526:103:1;5683:490:2;3526:103:1;3657:29;3673:2;3677:8;3657:15;:29::i;:::-;3644:42;;-1:-1:-1;3644:42:1;-1:-1:-1;3644:42:1;3701:87;;;;-1:-1:-1;;;3701:87:1;;6380:2:2;3701:87:1;;;6362:21:2;6419:2;6399:18;;;6392:30;6458:34;6438:18;;;6431:62;6529:34;6509:18;;;6502:62;-1:-1:-1;;;6580:19:2;;;6573:37;6627:19;;3701:87:1;6178:474:2;3701:87:1;3218:582;3196:604;-1:-1:-1;3819:2:1;1314:2515;-1:-1:-1;;;;;;;;1314:2515:1:o;3837:407::-;3913:13;;;4003:33;4019:12;457:2;4003:15;:33::i;:::-;3991:45;;-1:-1:-1;3991:45:1;-1:-1:-1;3991:45:1;4047:52;;;;-1:-1:-1;;;4047:52:1;;;;;;;:::i;:::-;4122:32;4138:1;1070:3;4122:15;:32::i;:::-;4110:44;;-1:-1:-1;4110:44:1;-1:-1:-1;4110:44:1;4165:52;;;;-1:-1:-1;;;4165:52:1;;;;;;;:::i;1339:493:0:-;1400:4;1406:7;1683:1;1688;1683:6;1679:28;;-1:-1:-1;1699:4:0;;-1:-1:-1;1705:1:0;1691:16;;1679:28;1733:5;;;1737:1;1733;:5;:1;1756:5;;;;:::i;:::-;;:10;1752:33;;1776:5;1783:1;1768:17;;;;;;;1752:33;1807:4;;-1:-1:-1;1813:1:0;-1:-1:-1;1339:493:0;;;;;;:::o;1981:190::-;2042:4;2048:7;2095:1;2100;2095:6;2091:29;;-1:-1:-1;2111:5:0;;-1:-1:-1;2111:5:0;2103:17;;2091:29;2142:4;2152:1;2148;:5;;;;;:::i;:::-;;2134:20;;;;1981:190;;;;;:::o;641:216::-;702:4;;763:5;;;786;;;782:28;;;801:5;808:1;793:17;;;;;;;204:180:2;263:6;316:2;304:9;295:7;291:23;287:32;284:52;;;332:1;329;322:12;284:52;-1:-1:-1;355:23:2;;204:180;-1:-1:-1;204:180:2:o;389:248::-;457:6;465;518:2;506:9;497:7;493:23;489:32;486:52;;;534:1;531;524:12;486:52;-1:-1:-1;;557:23:2;;;627:2;612:18;;;599:32;;-1:-1:-1;389:248:2:o;642:521::-;744:6;752;760;768;776;784;837:3;825:9;816:7;812:23;808:33;805:53;;;854:1;851;844:12;805:53;-1:-1:-1;;877:23:2;;;947:2;932:18;;919:32;;-1:-1:-1;998:2:2;983:18;;970:32;;1049:2;1034:18;;1021:32;;-1:-1:-1;1100:3:2;1085:19;;1072:33;;-1:-1:-1;1152:3:2;1137:19;1124:33;;-1:-1:-1;642:521:2;-1:-1:-1;642:521:2:o;1168:400::-;1370:2;1352:21;;;1409:2;1389:18;;;1382:30;1448:34;1443:2;1428:18;;1421:62;-1:-1:-1;;;1514:2:2;1499:18;;1492:34;1558:3;1543:19;;1168:400::o;1573:127::-;1634:10;1629:3;1625:20;1622:1;1615:31;1665:4;1662:1;1655:15;1689:4;1686:1;1679:15;1705:128;1772:9;;;1793:11;;;1790:37;;;1807:18;;:::i;1838:400::-;2040:2;2022:21;;;2079:2;2059:18;;;2052:30;2118:34;2113:2;2098:18;;2091:62;-1:-1:-1;;;2184:2:2;2169:18;;2162:34;2228:3;2213:19;;1838:400::o;3079:135::-;3118:3;3139:17;;;3136:43;;3159:18;;:::i;:::-;-1:-1:-1;3206:1:2;3195:13;;3079:135::o;6657:399::-;6859:2;6841:21;;;6898:2;6878:18;;;6871:30;6937:34;6932:2;6917:18;;6910:62;-1:-1:-1;;;7003:2:2;6988:18;;6981:33;7046:3;7031:19;;6657:399::o;7061:127::-;7122:10;7117:3;7113:20;7110:1;7103:31;7153:4;7150:1;7143:15;7177:4;7174:1;7167:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "518200",
								"executionCost": "584",
								"totalCost": "518784"
							},
							"external": {
								"groupCreateMinFee()": "131",
								"taskCreateMinFee()": "208",
								"ticketIncome2GroupLeader(uint256)": "556",
								"ticketIncome2GroupMember(uint256,uint256)": "infinite",
								"ticketIncome2RewardPool(uint256)": "644",
								"ticketPrice(uint256,uint256,int256,int256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 123,
									"end": 5262,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 123,
									"end": 5262,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206f4e58dbbb0146e3b4bcf7935f5df6d0c2c7c802d0838512b63e111ec98e657364736f6c63430008120033",
									".code": [
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH",
											"source": 1,
											"value": "26D0A334"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH",
											"source": 1,
											"value": "2E26FB4A"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH",
											"source": 1,
											"value": "84105419"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH",
											"source": 1,
											"value": "91096A3C"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH",
											"source": 1,
											"value": "9B49380B"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH",
											"source": 1,
											"value": "E6CA2A8D"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 123,
											"end": 5262,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1306,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1197,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 324,
											"end": 334,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1197,
											"end": 1306,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1197,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1306,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 168,
											"end": 193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 193,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 156,
											"end": 158,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 141,
											"end": 159,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1306,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1306,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1306,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1306,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4662,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4252,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4252,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4252,
											"end": 4662,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4662,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4252,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4252,
											"end": 4662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4662,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4252,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4252,
											"end": 4662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4670,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4670,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1189,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1082,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 260,
											"end": 271,
											"name": "PUSH",
											"source": 1,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 1082,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1082,
											"end": 1189,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 3829,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1314,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1314,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1314,
											"end": 3829,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 3829,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1314,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1314,
											"end": 3829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 3829,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1314,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1314,
											"end": 3829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4244,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3837,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3837,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3837,
											"end": 4244,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4244,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3837,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3837,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4244,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3837,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3837,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4662,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4252,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4329,
											"end": 4342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4329,
											"end": 4342,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4419,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4435,
											"end": 4447,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 371,
											"end": 372,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4419,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4419,
											"end": 4452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4419,
											"end": 4452,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4419,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4452,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4407,
											"end": 4452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4407,
											"end": 4452,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4463,
											"end": 4516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4463,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4555,
											"end": 4556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4539,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4539,
											"end": 4571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4571,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4539,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4571,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4527,
											"end": 4571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4527,
											"end": 4571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4582,
											"end": 4635,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4635,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4582,
											"end": 4635,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4582,
											"end": 4635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4635,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4582,
											"end": 4635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4582,
											"end": 4635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4582,
											"end": 4635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4635,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4582,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4252,
											"end": 4662,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4252,
											"end": 4662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4763,
											"end": 4776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4801,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 371,
											"end": 372,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1070,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4801,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4801,
											"end": 4818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4818,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4801,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4801,
											"end": 4823,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4801,
											"end": 4823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4823,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4801,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4789,
											"end": 4823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4873,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4931,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4900,
											"end": 4932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4932,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4900,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4888,
											"end": 4932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4888,
											"end": 4932,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4888,
											"end": 4932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4888,
											"end": 4932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4943,
											"end": 4996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4943,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 5035,
											"end": 5036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5019,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5019,
											"end": 5051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5051,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 5019,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5062,
											"end": 5115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5062,
											"end": 5115,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5062,
											"end": 5115,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5115,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5062,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5062,
											"end": 5115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5062,
											"end": 5115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5115,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5062,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5138,
											"end": 5164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5164,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5138,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5126,
											"end": 5164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5175,
											"end": 5228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5175,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5248,
											"end": 5249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 5257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 3829,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1314,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1675,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1671,
											"end": 1675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1913,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1721,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 838,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1736,
											"end": 1737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1746,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1913,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1721,
											"end": 1913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1797,
											"end": 1799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1804,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1781,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1805,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1781,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1805,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1768,
											"end": 1805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1768,
											"end": 1805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1820,
											"end": 1901,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1901,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1820,
											"end": 1901,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1901,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1820,
											"end": 1901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2850,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1820,
											"end": 1901,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1820,
											"end": 1901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2851,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2867,
											"end": 2885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2860,
											"end": 2890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2899,
											"end": 2961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2997,
											"end": 3031,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E20692A2A5F616C7068612E"
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2970,
											"end": 3032,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3068,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3049,
											"end": 3068,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2646,
											"end": 3074,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 1901,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1820,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1748,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1721,
											"end": 1913,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1913,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1721,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1954,
											"end": 1956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 879,
											"end": 881,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1938,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1938,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1964,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1938,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1925,
											"end": 1964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3423,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3424,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3462,
											"name": "PUSH",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3433,
											"end": 3463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3570,
											"end": 3604,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E205F626574612A692A2A5F"
										},
										{
											"begin": 3550,
											"end": 3568,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3550,
											"end": 3568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3550,
											"end": 3568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3605,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B638343097"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3621,
											"end": 3640,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3621,
											"end": 3640,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3621,
											"end": 3640,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3614,
											"end": 3651,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3219,
											"end": 3693,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1975,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2104,
											"end": 2106,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2088,
											"end": 2121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2088,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2121,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2075,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2075,
											"end": 2121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2132,
											"end": 2232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2132,
											"end": 2232,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2132,
											"end": 2232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 3902,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2132,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2132,
											"end": 2232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3882,
											"end": 3903,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 3941,
											"name": "PUSH",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3912,
											"end": 3942,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3958,
											"end": 3976,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3958,
											"end": 3976,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3958,
											"end": 3976,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3951,
											"end": 4013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4049,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E205F626574612F5F64656E"
										},
										{
											"begin": 4029,
											"end": 4047,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4029,
											"end": 4047,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4047,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4022,
											"end": 4084,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B6B4B730BA37B9153495152FB0B638343097"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4100,
											"end": 4119,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4100,
											"end": 4119,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4100,
											"end": 4119,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4093,
											"end": 4143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 4160,
											"end": 4179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3698,
											"end": 4185,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2232,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2132,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2274,
											"end": 2276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2284,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2258,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2258,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2285,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2258,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2285,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2296,
											"end": 2405,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2405,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2405,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4394,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2296,
											"end": 2405,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2405,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4395,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4433,
											"name": "PUSH",
											"source": 2,
											"value": "5C"
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4404,
											"end": 4434,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4450,
											"end": 4468,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4450,
											"end": 4468,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4450,
											"end": 4468,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4443,
											"end": 4505,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4541,
											"end": 4575,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E20285F626574612F5F6465"
										},
										{
											"begin": 4521,
											"end": 4539,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4521,
											"end": 4539,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4521,
											"end": 4539,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4514,
											"end": 4576,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4613,
											"end": 4643,
											"name": "PUSH",
											"source": 2,
											"value": "6E6F6D696E61746F722A692A2A5F616C706861292A31302A2A31382E00000000"
										},
										{
											"begin": 4592,
											"end": 4611,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4592,
											"end": 4611,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4592,
											"end": 4611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4585,
											"end": 4644,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4661,
											"end": 4680,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 4661,
											"end": 4680,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2296,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4190,
											"end": 4686,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2296,
											"end": 2405,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2296,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2447,
											"end": 2449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 967,
											"end": 980,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 2431,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2431,
											"end": 2458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2458,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2431,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2418,
											"end": 2458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2418,
											"end": 2458,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2418,
											"end": 2458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2418,
											"end": 2458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2469,
											"end": 2577,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2577,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2469,
											"end": 2577,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2469,
											"end": 2577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2577,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2469,
											"end": 2577,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2469,
											"end": 2577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4875,
											"end": 4896,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4934,
											"name": "PUSH",
											"source": 2,
											"value": "5B"
										},
										{
											"begin": 4912,
											"end": 4930,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4912,
											"end": 4930,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4912,
											"end": 4930,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4905,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4944,
											"end": 5006,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5042,
											"end": 5076,
											"name": "PUSH",
											"source": 2,
											"value": "756C617465207469636B657420707269636520696E205F626574612F5F64656E"
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5015,
											"end": 5077,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5143,
											"name": "PUSH",
											"source": 2,
											"value": "6F6D696E61746F722A692A2A5F616C706861202B2067616D6D612E0000000000"
										},
										{
											"begin": 5093,
											"end": 5112,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5093,
											"end": 5112,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5093,
											"end": 5112,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5086,
											"end": 5144,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5161,
											"end": 5180,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 5161,
											"end": 5180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4691,
											"end": 5186,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2577,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2469,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2636,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2641,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2661,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2661,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2626,
											"end": 2661,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2656,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2645,
											"end": 2661,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2645,
											"end": 2661,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2661,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2626,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 3184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2623,
											"end": 3184,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 712,
											"end": 714,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2680,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2700,
											"end": 2718,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2697,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2680,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2718,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2680,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2723,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2862,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2677,
											"end": 2862,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2623,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2623,
											"end": 3184,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2862,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2677,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 2846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2623,
											"end": 3184,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 3184,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2623,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2902,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2907,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2907,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2926,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2926,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2892,
											"end": 2926,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2926,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2926,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2892,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2888,
											"end": 3184,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 712,
											"end": 714,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2945,
											"end": 2962,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 2967,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2942,
											"end": 3107,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2942,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2942,
											"end": 3107,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3008,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2888,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2888,
											"end": 3184,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3184,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2888,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3167,
											"end": 3172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 3184,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2888,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3200,
											"end": 3217,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3800,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3196,
											"end": 3800,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3303,
											"end": 3318,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 635,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3287,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3287,
											"end": 3323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3323,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3287,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3323,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3268,
											"end": 3323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3268,
											"end": 3323,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3338,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3338,
											"end": 3438,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3338,
											"end": 3438,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3338,
											"end": 3438,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3338,
											"end": 3438,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3338,
											"end": 3438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5395,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3338,
											"end": 3438,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3338,
											"end": 3438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3338,
											"end": 3438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5396,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5432,
											"end": 5434,
											"name": "PUSH",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5412,
											"end": 5430,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5412,
											"end": 5430,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5412,
											"end": 5430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5405,
											"end": 5435,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 5505,
											"name": "PUSH",
											"source": 2,
											"value": "4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61"
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5444,
											"end": 5506,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 2,
											"value": "672C20657874726146656529203D20536166654D6174682E7472794D756C2874"
										},
										{
											"begin": 5522,
											"end": 5540,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5522,
											"end": 5540,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5522,
											"end": 5540,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5515,
											"end": 5577,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F74616C526577617264506F6F6C2C205F7029"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5593,
											"end": 5612,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5593,
											"end": 5612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5593,
											"end": 5612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5586,
											"end": 5636,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5653,
											"end": 5672,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 5653,
											"end": 5672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3338,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5191,
											"end": 5678,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3338,
											"end": 3438,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3338,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3488,
											"end": 3496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3472,
											"end": 3487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3472,
											"end": 3511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3511,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3472,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3453,
											"end": 3511,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3453,
											"end": 3511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3453,
											"end": 3511,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3526,
											"end": 3629,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3629,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3526,
											"end": 3629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3526,
											"end": 3629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3526,
											"end": 3629,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3526,
											"end": 3629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 5888,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5924,
											"end": 5926,
											"name": "PUSH",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5904,
											"end": 5922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5897,
											"end": 5927,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5963,
											"end": 5997,
											"name": "PUSH",
											"source": 2,
											"value": "4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61"
										},
										{
											"begin": 5943,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5943,
											"end": 5961,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5936,
											"end": 5998,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6068,
											"name": "PUSH",
											"source": 2,
											"value": "672C20657874726146656529203D20536166654D6174682E7472794469762865"
										},
										{
											"begin": 6014,
											"end": 6032,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 6014,
											"end": 6032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6014,
											"end": 6032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6007,
											"end": 6069,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "787472614665652C205F64656E6F6D696E61746F7229"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6085,
											"end": 6104,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6085,
											"end": 6104,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6085,
											"end": 6104,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6148,
											"end": 6167,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 6148,
											"end": 6167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3526,
											"end": 3629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5683,
											"end": 6173,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3526,
											"end": 3629,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3526,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3673,
											"end": 3675,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3677,
											"end": 3685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3657,
											"end": 3686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3686,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3657,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3644,
											"end": 3686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3644,
											"end": 3686,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3644,
											"end": 3686,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3644,
											"end": 3686,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3701,
											"end": 3788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3701,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3701,
											"end": 3788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6380,
											"end": 6382,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3701,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3701,
											"end": 3788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6419,
											"end": 6421,
											"name": "PUSH",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 6399,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6399,
											"end": 6417,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6399,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6422,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6492,
											"name": "PUSH",
											"source": 2,
											"value": "4E756D626572206F766572666C6F77206F6363757273207768656E2028666C61"
										},
										{
											"begin": 6438,
											"end": 6456,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6438,
											"end": 6456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6438,
											"end": 6456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6431,
											"end": 6493,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6529,
											"end": 6563,
											"name": "PUSH",
											"source": 2,
											"value": "672C20747029203D20536166654D6174682E7472794164642874702C20657874"
										},
										{
											"begin": 6509,
											"end": 6527,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 6509,
											"end": 6527,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6509,
											"end": 6527,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6502,
											"end": 6564,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726146656529"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6580,
											"end": 6599,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6580,
											"end": 6599,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6580,
											"end": 6599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6573,
											"end": 6610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6627,
											"end": 6646,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 6627,
											"end": 6646,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3701,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6178,
											"end": 6652,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3701,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3701,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3800,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3196,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3819,
											"end": 3821,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 3829,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1314,
											"end": 3829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4244,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3837,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3913,
											"end": 3926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3913,
											"end": 3926,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3913,
											"end": 3926,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4003,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4019,
											"end": 4031,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4003,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4003,
											"end": 4036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4003,
											"end": 4036,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4003,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3991,
											"end": 4036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3991,
											"end": 4036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3991,
											"end": 4036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3991,
											"end": 4036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4047,
											"end": 4099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4047,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4138,
											"end": 4139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4122,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4122,
											"end": 4154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4154,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4122,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4165,
											"end": 4217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4165,
											"end": 4217,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4165,
											"end": 4217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4217,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4165,
											"end": 4217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4165,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4165,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1689,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1679,
											"end": 1707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1699,
											"end": 1703,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1699,
											"end": 1703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1705,
											"end": 1706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1691,
											"end": 1707,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1679,
											"end": 1707,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1679,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1756,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1766,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1768,
											"end": 1785,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1752,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1339,
											"end": 1832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2101,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2091,
											"end": 2120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2111,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2111,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2103,
											"end": 2120,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2120,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2091,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2152,
											"end": 2153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2148,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 641,
											"end": 857,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 641,
											"end": 857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 763,
											"end": 768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 763,
											"end": 768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 763,
											"end": 768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 786,
											"end": 791,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 786,
											"end": 791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 786,
											"end": 791,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 782,
											"end": 810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 782,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 782,
											"end": 810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 801,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 204,
											"end": 384,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 204,
											"end": 384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 263,
											"end": 269,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 318,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 304,
											"end": 313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 295,
											"end": 302,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 287,
											"end": 319,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 284,
											"end": 336,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 284,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 284,
											"end": 336,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 332,
											"end": 333,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 330,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 322,
											"end": 334,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 284,
											"end": 336,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 284,
											"end": 336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 355,
											"end": 378,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 355,
											"end": 378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 204,
											"end": 384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 204,
											"end": 384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 389,
											"end": 637,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 389,
											"end": 637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 457,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 471,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 518,
											"end": 520,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 515,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 497,
											"end": 504,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 493,
											"end": 516,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 489,
											"end": 521,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 486,
											"end": 538,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 486,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 486,
											"end": 538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 534,
											"end": 535,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 524,
											"end": 536,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 486,
											"end": 538,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 486,
											"end": 538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 557,
											"end": 580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 557,
											"end": 580,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 557,
											"end": 580,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 627,
											"end": 629,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 612,
											"end": 630,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 599,
											"end": 631,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 599,
											"end": 631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 389,
											"end": 637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 642,
											"end": 1163,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 642,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 744,
											"end": 750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 760,
											"end": 766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 776,
											"end": 782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 837,
											"end": 840,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 825,
											"end": 834,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 816,
											"end": 823,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 812,
											"end": 835,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 808,
											"end": 841,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 805,
											"end": 858,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 805,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 805,
											"end": 858,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 852,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 844,
											"end": 856,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 805,
											"end": 858,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 805,
											"end": 858,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 877,
											"end": 900,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 877,
											"end": 900,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 877,
											"end": 900,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 947,
											"end": 949,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 932,
											"end": 950,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 932,
											"end": 950,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 919,
											"end": 951,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 919,
											"end": 951,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 998,
											"end": 1000,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1002,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1002,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1053,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1053,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1100,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1085,
											"end": 1104,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1104,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1105,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1152,
											"end": 1155,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1137,
											"end": 1156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1157,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1157,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 642,
											"end": 1163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 642,
											"end": 1163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1568,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1168,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1373,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1373,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1373,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1409,
											"end": 1411,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1407,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1382,
											"end": 1412,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "5B7469636B6574496E636F6D653247726F75704C65616465725D206F76657266"
										},
										{
											"begin": 1443,
											"end": 1445,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1446,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1421,
											"end": 1483,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3637BB97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1492,
											"end": 1526,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1543,
											"end": 1562,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1543,
											"end": 1562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1168,
											"end": 1568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1700,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1573,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1644,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1629,
											"end": 1632,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1625,
											"end": 1645,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1646,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1669,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1662,
											"end": 1663,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1655,
											"end": 1670,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1689,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1694,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1833,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1705,
											"end": 1833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1804,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1790,
											"end": 1827,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1807,
											"end": 1825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1838,
											"end": 2238,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1838,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2040,
											"end": 2042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2022,
											"end": 2043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2022,
											"end": 2043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2079,
											"end": 2081,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2059,
											"end": 2077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2077,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2077,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2052,
											"end": 2082,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2152,
											"name": "PUSH",
											"source": 2,
											"value": "5B7469636B6574496E636F6D653247726F75704D656D6265725D206F76657266"
										},
										{
											"begin": 2113,
											"end": 2115,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2116,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2116,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2091,
											"end": 2153,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3637BB97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2184,
											"end": 2186,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2169,
											"end": 2187,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2196,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2231,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2213,
											"end": 2232,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2232,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1838,
											"end": 2238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3214,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3079,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3139,
											"end": 3156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3139,
											"end": 3156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3136,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3136,
											"end": 3179,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3159,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3159,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3177,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3159,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3195,
											"end": 3208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3195,
											"end": 3208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6657,
											"end": 7056,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6657,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6859,
											"end": 6861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6841,
											"end": 6862,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 6862,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6841,
											"end": 6862,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6898,
											"end": 6900,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6878,
											"end": 6896,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6871,
											"end": 6901,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 6971,
											"name": "PUSH",
											"source": 2,
											"value": "5B7469636B6574496E636F6D6532526577617264506F6F6C5D206F766572666C"
										},
										{
											"begin": 6932,
											"end": 6934,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6917,
											"end": 6935,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6917,
											"end": 6935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6972,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BB97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7003,
											"end": 7005,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6988,
											"end": 7006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6981,
											"end": 7014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7046,
											"end": 7049,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7031,
											"end": 7050,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6657,
											"end": 7056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7061,
											"end": 7188,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 7061,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7122,
											"end": 7132,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 7117,
											"end": 7120,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7113,
											"end": 7133,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7110,
											"end": 7111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7103,
											"end": 7134,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7153,
											"end": 7157,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 7150,
											"end": 7151,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7143,
											"end": 7158,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7177,
											"end": 7181,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7174,
											"end": 7175,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7167,
											"end": 7182,
											"name": "REVERT",
											"source": 2
										}
									],
									".data": {
										"3EA7E64D02BFA2CE3FC0CCD06EC6010A4AF3C1C13862F1013EA695F2535F0F7A": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"degen/DegenMoneyLib.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"groupCreateMinFee()": "26d0a334",
							"taskCreateMinFee()": "91096a3c",
							"ticketIncome2GroupLeader(uint256)": "2e26fb4a",
							"ticketIncome2GroupMember(uint256,uint256)": "84105419",
							"ticketIncome2RewardPool(uint256)": "e6ca2a8d",
							"ticketPrice(uint256,uint256,int256,int256,uint256,uint256)": "9b49380b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"groupCreateMinFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taskCreateMinFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketIncome\",\"type\":\"uint256\"}],\"name\":\"ticketIncome2GroupLeader\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketIncome\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"memNum\",\"type\":\"uint256\"}],\"name\":\"ticketIncome2GroupMember\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ticketIncome\",\"type\":\"uint256\"}],\"name\":\"ticketIncome2RewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"money\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ith\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewardPool\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"firstGrpId\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"SecondGrpId\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"firstGrpPeopleNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"secondGrpPeopleNum\",\"type\":\"uint256\"}],\"name\":\"ticketPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"degen/DegenMoneyLib.sol\":\"DegenMoneyLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"degen/DegenMoneyLib.sol\":{\"keccak256\":\"0x8f64f199cab16fb11c9acade8cd95798430d735852c8127a88e76b3cd47b364a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e70d177872410ba80d9127d56d5e65c937416d0d13e310daf979a0df90d8a1c\",\"dweb:/ipfs/QmeufNLbpRNAF45isFzsSsYuJNhKLoLmpXbtQcN8upF5ZU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0",
							"usedErrors": []
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"degen/DegenMoneyLib.sol": {
				"ast": {
					"absolutePath": "degen/DegenMoneyLib.sol",
					"exportedSymbols": {
						"DegenMoneyLib": [
							777
						],
						"SafeMath": [
							311
						]
					},
					"id": 778,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 778,
							"sourceUnit": 312,
							"src": "60:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DegenMoneyLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 777,
							"linearizedBaseContracts": [
								777
							],
							"name": "DegenMoneyLib",
							"nameLocation": "131:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 321,
									"mutability": "constant",
									"name": "_taskCreateMinFee",
									"nameLocation": "240:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 777,
									"src": "215:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 315,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "215:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"id": 320,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 316,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "260:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 319,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 317,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "265:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 318,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "269:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "265:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "260:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 328,
									"mutability": "constant",
									"name": "_groupCreateMinFee",
									"nameLocation": "303:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 777,
									"src": "278:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 322,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "278:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 327,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 323,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "324:1:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 326,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 324,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "328:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 325,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "332:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "328:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "324:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 331,
									"mutability": "constant",
									"name": "_a",
									"nameLocation": "366:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 777,
									"src": "341:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 329,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "341:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 330,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "371:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 334,
									"mutability": "constant",
									"name": "_b",
									"nameLocation": "452:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 777,
									"src": "427:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 332,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "427:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 333,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "457:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 337,
									"mutability": "constant",
									"name": "_c",
									"nameLocation": "541:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 777,
									"src": "516:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 335,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "516:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 336,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "546:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 340,
									"mutability": "constant",
									"name": "_p",
									"nameLocation": "630:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 777,
									"src": "605:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 338,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "605:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 339,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "635:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 343,
									"mutability": "constant",
									"name": "_v",
									"nameLocation": "707:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 777,
									"src": "682:32:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 341,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 342,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "712:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 346,
									"mutability": "constant",
									"name": "_alpha",
									"nameLocation": "829:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 777,
									"src": "804:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 344,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "804:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 345,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "838:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 349,
									"mutability": "constant",
									"name": "_beta",
									"nameLocation": "871:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 777,
									"src": "846:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 347,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "846:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 348,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "879:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 356,
									"mutability": "constant",
									"name": "_gamma",
									"nameLocation": "958:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 777,
									"src": "933:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 350,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "933:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										},
										"id": 355,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e3031",
											"id": 351,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "967:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_100",
												"typeString": "rational_const 1 / 100"
											},
											"value": "0.01"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 354,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 352,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "974:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 353,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "978:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "974:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "967:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000_by_1",
											"typeString": "int_const 10000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 359,
									"mutability": "constant",
									"name": "_denominator",
									"nameLocation": "1055:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 777,
									"src": "1030:43:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 357,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1030:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 358,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1070:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "1146:43:1",
										"statements": [
											{
												"expression": {
													"id": 364,
													"name": "_taskCreateMinFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 321,
													"src": "1164:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 363,
												"id": 365,
												"nodeType": "Return",
												"src": "1157:24:1"
											}
										]
									},
									"functionSelector": "91096a3c",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "taskCreateMinFee",
									"nameLocation": "1091:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1107:2:1"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "1139:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1131:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:15:1"
									},
									"scope": 777,
									"src": "1082:107:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "1262:44:1",
										"statements": [
											{
												"expression": {
													"id": 372,
													"name": "_groupCreateMinFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 328,
													"src": "1280:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 371,
												"id": 373,
												"nodeType": "Return",
												"src": "1273:25:1"
											}
										]
									},
									"functionSelector": "26d0a334",
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "groupCreateMinFee",
									"nameLocation": "1206:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1223:2:1"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "1255:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "1247:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:15:1"
									},
									"scope": 777,
									"src": "1197:109:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "1577:2252:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "_alpha",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "1596:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "35",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1606:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															"src": "1596:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f2061766f6964206f766572666c6f772c20616c706861203c3d2035206f6e6c79",
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1609:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452",
																"typeString": "literal_string \"To avoid overflow, alpha <= 5 only\""
															},
															"value": "To avoid overflow, alpha <= 5 only"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c8a01bce86e6e04501c4da871320e597c48314ddde8713c84e8d972b5b9452",
																"typeString": "literal_string \"To avoid overflow, alpha <= 5 only\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1588:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1588:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "1588:58:1"
											},
											{
												"assignments": [
													400
												],
												"declarations": [
													{
														"constant": false,
														"id": 400,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "1664:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 606,
														"src": "1659:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 399,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1659:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 402,
												"initialValue": {
													"hexValue": "74727565",
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1671:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1659:16:1"
											},
											{
												"assignments": [
													404
												],
												"declarations": [
													{
														"constant": false,
														"id": 404,
														"mutability": "mutable",
														"name": "tp",
														"nameLocation": "1694:2:1",
														"nodeType": "VariableDeclaration",
														"scope": 606,
														"src": "1686:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 403,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1686:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"hexValue": "31",
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1699:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1686:14:1"
											},
											{
												"body": {
													"id": 432,
													"nodeType": "Block",
													"src": "1753:160:1",
													"statements": [
														{
															"expression": {
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 417,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 400,
																			"src": "1769:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"id": 418,
																			"name": "tp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 404,
																			"src": "1775:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 419,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "1768:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 422,
																			"name": "tp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 404,
																			"src": "1797:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 423,
																			"name": "ith",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "1801:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 420,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "1781:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1790:6:1",
																		"memberName": "tryMul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 104,
																		"src": "1781:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1781:24:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"src": "1768:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 426,
															"nodeType": "ExpressionStatement",
															"src": "1768:37:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 428,
																		"name": "flag",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "1828:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e20692a2a5f616c7068612e",
																		"id": 429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1834:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa",
																			"typeString": "literal_string \"Number overflow occurs when calculate ticket price in i**_alpha.\""
																		},
																		"value": "Number overflow occurs when calculate ticket price in i**_alpha."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_475d617fbd57083214b64145cb373c4704be0b565e0a4739e8a619e1865296aa",
																			"typeString": "literal_string \"Number overflow occurs when calculate ticket price in i**_alpha.\""
																		}
																	],
																	"id": 427,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1820:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1820:81:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 431,
															"nodeType": "ExpressionStatement",
															"src": "1820:81:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 411,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "1736:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 412,
														"name": "_alpha",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "1740:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1736:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 433,
												"initializationExpression": {
													"assignments": [
														408
													],
													"declarations": [
														{
															"constant": false,
															"id": 408,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1731:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 433,
															"src": "1726:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 407,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1726:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 410,
													"initialValue": {
														"hexValue": "30",
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1733:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1726:8:1"
												},
												"loopExpression": {
													"expression": {
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1748:3:1",
														"subExpression": {
															"id": 414,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "1748:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 416,
													"nodeType": "ExpressionStatement",
													"src": "1748:3:1"
												},
												"nodeType": "ForStatement",
												"src": "1721:192:1"
											},
											{
												"expression": {
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 434,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1926:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 435,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "1932:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 436,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1925:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 439,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "1954:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 440,
																"name": "_beta",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1958:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 437,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "1938:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1947:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "1938:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1938:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "1925:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "1925:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 445,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "1983:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e205f626574612a692a2a5f616c7068612e",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1989:72:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\""
															},
															"value": "Number overflow occurs when calculate ticket price in _beta*i**_alpha."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c682d22b1999919c00c653858484b6d27a315acf5334d7a3c9fa4d0fbc436db4",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta*i**_alpha.\""
															}
														],
														"id": 444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1975:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1975:87:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "1975:87:1"
											},
											{
												"expression": {
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 449,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "2076:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 450,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2082:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 451,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2075:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 454,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2104:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 455,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "2108:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 452,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2088:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2097:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "2088:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2088:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "2075:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "2075:46:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 460,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "2140:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e205f626574612f5f64656e6f6d696e61746f722a692a2a5f616c7068612e",
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2146:85:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\""
															},
															"value": "Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5613b91aa40febd01352f519ab4b39eb2f7ebeb41e9478d10cbb78e65330b81",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha.\""
															}
														],
														"id": 459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2132:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2132:100:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "2132:100:1"
											},
											{
												"expression": {
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 464,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "2246:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 465,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2252:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 466,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2245:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 469,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2274:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2278:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2282:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "2278:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"id": 467,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2258:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2267:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "2258:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2258:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "2245:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "2245:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 477,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "2304:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e20285f626574612f5f64656e6f6d696e61746f722a692a2a5f616c706861292a31302a2a31382e",
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2310:94:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\""
															},
															"value": "Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f2cb4fe6c13b563c2cac6e06039a809e87ae4fdb1d5ec7bc5228e05c19af883",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in (_beta/_denominator*i**_alpha)*10**18.\""
															}
														],
														"id": 476,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2296:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2296:109:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "2296:109:1"
											},
											{
												"expression": {
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 481,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "2419:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 482,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2425:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 483,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "2418:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 486,
																"name": "tp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2447:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 487,
																"name": "_gamma",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "2451:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 484,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "2431:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2440:6:1",
															"memberName": "tryAdd",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "2431:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2431:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "2418:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "2418:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 492,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "2477:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2063616c63756c617465207469636b657420707269636520696e205f626574612f5f64656e6f6d696e61746f722a692a2a5f616c706861202b2067616d6d612e",
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2483:93:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\""
															},
															"value": "Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0fd470e9361f76a50e311c8e34ba3bc6530a10c932e05a82f885cfdbed76edb",
																"typeString": "literal_string \"Number overflow occurs when calculate ticket price in _beta/_denominator*i**_alpha + gamma.\""
															}
														],
														"id": 491,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2469:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2469:108:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "2469:108:1"
											},
											{
												"assignments": [
													497
												],
												"declarations": [
													{
														"constant": false,
														"id": 497,
														"mutability": "mutable",
														"name": "isMonopolyPenalty",
														"nameLocation": "2595:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 606,
														"src": "2590:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 496,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2590:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 498,
												"nodeType": "VariableDeclarationStatement",
												"src": "2590:22:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 499,
															"name": "firstGrpId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "2626:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "30",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2640:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2626:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 502,
															"name": "SecondGrpId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "2645:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "30",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2660:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2645:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2626:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 523,
																"name": "firstGrpId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "2892:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2906:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2892:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 526,
																"name": "SecondGrpId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "2911:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "30",
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2925:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2911:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2892:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 549,
														"nodeType": "Block",
														"src": "3132:52:1",
														"statements": [
															{
																"expression": {
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 545,
																		"name": "isMonopolyPenalty",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 497,
																		"src": "3147:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "66616c7365",
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3167:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "3147:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 548,
																"nodeType": "ExpressionStatement",
																"src": "3147:25:1"
															}
														]
													},
													"id": 550,
													"nodeType": "IfStatement",
													"src": "2888:296:1",
													"trueBody": {
														"id": 544,
														"nodeType": "Block",
														"src": "2927:191:1",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 530,
																		"name": "firstGrpPeopleNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 385,
																		"src": "2945:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 531,
																		"name": "_v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "2965:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2945:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 542,
																	"nodeType": "Block",
																	"src": "3047:60:1",
																	"statements": [
																		{
																			"expression": {
																				"id": 540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 538,
																					"name": "isMonopolyPenalty",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 497,
																					"src": "3066:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "66616c7365",
																					"id": 539,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3086:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "false"
																				},
																				"src": "3066:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 541,
																			"nodeType": "ExpressionStatement",
																			"src": "3066:25:1"
																		}
																	]
																},
																"id": 543,
																"nodeType": "IfStatement",
																"src": "2942:165:1",
																"trueBody": {
																	"id": 537,
																	"nodeType": "Block",
																	"src": "2969:59:1",
																	"statements": [
																		{
																			"expression": {
																				"id": 535,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 533,
																					"name": "isMonopolyPenalty",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 497,
																					"src": "2988:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "74727565",
																					"id": 534,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3008:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"src": "2988:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 536,
																			"nodeType": "ExpressionStatement",
																			"src": "2988:24:1"
																		}
																	]
																}
															}
														]
													}
												},
												"id": 551,
												"nodeType": "IfStatement",
												"src": "2623:561:1",
												"trueBody": {
													"id": 522,
													"nodeType": "Block",
													"src": "2662:211:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 506,
																		"name": "firstGrpPeopleNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 385,
																		"src": "2680:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 507,
																		"name": "secondGrpPeopleNum",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "2700:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2680:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 509,
																	"name": "_v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "2721:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2680:43:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 520,
																"nodeType": "Block",
																"src": "2802:60:1",
																"statements": [
																	{
																		"expression": {
																			"id": 518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 516,
																				"name": "isMonopolyPenalty",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 497,
																				"src": "2821:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2841:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "2821:25:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 519,
																		"nodeType": "ExpressionStatement",
																		"src": "2821:25:1"
																	}
																]
															},
															"id": 521,
															"nodeType": "IfStatement",
															"src": "2677:185:1",
															"trueBody": {
																"id": 515,
																"nodeType": "Block",
																"src": "2724:59:1",
																"statements": [
																	{
																		"expression": {
																			"id": 513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 511,
																				"name": "isMonopolyPenalty",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 497,
																				"src": "2743:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2763:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "2743:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 514,
																		"nodeType": "ExpressionStatement",
																		"src": "2743:24:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"id": 552,
													"name": "isMonopolyPenalty",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 497,
													"src": "3200:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 603,
												"nodeType": "IfStatement",
												"src": "3196:604:1",
												"trueBody": {
													"id": 602,
													"nodeType": "Block",
													"src": "3218:582:1",
													"statements": [
														{
															"assignments": [
																554
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 554,
																	"mutability": "mutable",
																	"name": "extraFee",
																	"nameLocation": "3241:8:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 602,
																	"src": "3233:16:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 553,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3233:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 556,
															"initialValue": {
																"hexValue": "30",
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3252:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3233:20:1"
														},
														{
															"expression": {
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 557,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 400,
																			"src": "3269:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"id": 558,
																			"name": "extraFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "3275:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 559,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "3268:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 562,
																			"name": "totalRewardPool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 379,
																			"src": "3303:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 563,
																			"name": "_p",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "3320:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 560,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "3287:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3296:6:1",
																		"memberName": "tryMul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 104,
																		"src": "3287:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3287:36:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"src": "3268:55:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "ExpressionStatement",
															"src": "3268:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 568,
																		"name": "flag",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "3346:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61672c20657874726146656529203d20536166654d6174682e7472794d756c28746f74616c526577617264506f6f6c2c205f7029",
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3352:85:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5f6addb26863066f4fc9b23aba533f4fdd42a896e1187d8b37bf8aa1dfd5adc6",
																			"typeString": "literal_string \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\""
																		},
																		"value": "Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_5f6addb26863066f4fc9b23aba533f4fdd42a896e1187d8b37bf8aa1dfd5adc6",
																			"typeString": "literal_string \"Number overflow occurs when (flag, extraFee) = SafeMath.tryMul(totalRewardPool, _p)\""
																		}
																	],
																	"id": 567,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3338:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3338:100:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 571,
															"nodeType": "ExpressionStatement",
															"src": "3338:100:1"
														},
														{
															"expression": {
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 572,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 400,
																			"src": "3454:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"id": 573,
																			"name": "extraFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "3460:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 574,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "3453:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 577,
																			"name": "extraFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "3488:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 578,
																			"name": "_denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 359,
																			"src": "3498:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 575,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "3472:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3481:6:1",
																		"memberName": "tryDiv",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 132,
																		"src": "3472:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3472:39:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"src": "3453:58:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "ExpressionStatement",
															"src": "3453:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 583,
																		"name": "flag",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "3534:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61672c20657874726146656529203d20536166654d6174682e7472794469762865787472614665652c205f64656e6f6d696e61746f7229",
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3540:88:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dc71b2050d303ab0cccf48d4e0bfdb8bc2c6920659efc90f83709c3a3bfa2051",
																			"typeString": "literal_string \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\""
																		},
																		"value": "Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_dc71b2050d303ab0cccf48d4e0bfdb8bc2c6920659efc90f83709c3a3bfa2051",
																			"typeString": "literal_string \"Number overflow occurs when (flag, extraFee) = SafeMath.tryDiv(extraFee, _denominator)\""
																		}
																	],
																	"id": 582,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3526:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3526:103:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 586,
															"nodeType": "ExpressionStatement",
															"src": "3526:103:1"
														},
														{
															"expression": {
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 587,
																			"name": "flag",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 400,
																			"src": "3645:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"id": 588,
																			"name": "tp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 404,
																			"src": "3651:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 589,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "3644:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 592,
																			"name": "tp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 404,
																			"src": "3673:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 593,
																			"name": "extraFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "3677:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 590,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 311,
																			"src": "3657:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3666:6:1",
																		"memberName": "tryAdd",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 34,
																		"src": "3657:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
																		}
																	},
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3657:29:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"src": "3644:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 596,
															"nodeType": "ExpressionStatement",
															"src": "3644:42:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 598,
																		"name": "flag",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "3709:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e756d626572206f766572666c6f77206f6363757273207768656e2028666c61672c20747029203d20536166654d6174682e7472794164642874702c20657874726146656529",
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3715:72:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9925b897b1b5e7f46ce753efc960858b0d7ed723178392dae59a70457210994d",
																			"typeString": "literal_string \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\""
																		},
																		"value": "Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9925b897b1b5e7f46ce753efc960858b0d7ed723178392dae59a70457210994d",
																			"typeString": "literal_string \"Number overflow occurs when (flag, tp) = SafeMath.tryAdd(tp, extraFee)\""
																		}
																	],
																	"id": 597,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3701:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3701:87:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 601,
															"nodeType": "ExpressionStatement",
															"src": "3701:87:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 604,
													"name": "tp",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 404,
													"src": "3819:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 391,
												"id": 605,
												"nodeType": "Return",
												"src": "3812:9:1"
											}
										]
									},
									"functionSelector": "9b49380b",
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketPrice",
									"nameLocation": "1323:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "ith",
												"nameLocation": "1353:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1345:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "totalRewardPool",
												"nameLocation": "1376:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1368:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "firstGrpId",
												"nameLocation": "1409:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1402:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 380,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1402:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "SecondGrpId",
												"nameLocation": "1437:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1430:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 382,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1430:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "firstGrpPeopleNum",
												"nameLocation": "1467:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1459:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "secondGrpPeopleNum",
												"nameLocation": "1503:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1495:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1495:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:194:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1564:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1556:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:15:1"
									},
									"scope": 777,
									"src": "1314:2515:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "3928:316:1",
										"statements": [
											{
												"assignments": [
													615
												],
												"declarations": [
													{
														"constant": false,
														"id": 615,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "3944:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "3939:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 614,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3939:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 617,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3951:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3939:17:1"
											},
											{
												"assignments": [
													619
												],
												"declarations": [
													{
														"constant": false,
														"id": 619,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "3975:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "3967:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 618,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 621,
												"initialValue": {
													"hexValue": "30",
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3979:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3967:13:1"
											},
											{
												"expression": {
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 622,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "3992:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 623,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "3998:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 624,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "3991:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 627,
																"name": "ticketIncome",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "4019:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 628,
																"name": "_b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "4033:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 625,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "4003:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4012:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "4003:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4003:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "3991:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "3991:45:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "4055:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c6f772e",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572",
																"typeString": "literal_string \"[ticketIncome2RewardPool] overflow.\""
															},
															"value": "[ticketIncome2RewardPool] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572",
																"typeString": "literal_string \"[ticketIncome2RewardPool] overflow.\""
															}
														],
														"id": 632,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4047:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4047:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "4047:52:1"
											},
											{
												"expression": {
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 637,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "4111:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 638,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "4117:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 639,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4110:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 642,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "4138:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 643,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4141:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 640,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "4122:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4131:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "4122:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4122:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4110:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "4110:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 648,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "4173:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d6532526577617264506f6f6c5d206f766572666c6f772e",
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4179:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572",
																"typeString": "literal_string \"[ticketIncome2RewardPool] overflow.\""
															},
															"value": "[ticketIncome2RewardPool] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9617444b51e0ef6e1c6d6516f29ed8770adc1fcbbf19335376ae9a8ed8eb572",
																"typeString": "literal_string \"[ticketIncome2RewardPool] overflow.\""
															}
														],
														"id": 647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4165:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "4165:52:1"
											},
											{
												"expression": {
													"id": 652,
													"name": "m",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 619,
													"src": "4235:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 613,
												"id": 653,
												"nodeType": "Return",
												"src": "4228:8:1"
											}
										]
									},
									"functionSelector": "e6ca2a8d",
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketIncome2RewardPool",
									"nameLocation": "3846:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "ticketIncome",
												"nameLocation": "3878:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "3870:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3869:22:1"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "3921:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "3913:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3913:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3912:15:1"
									},
									"scope": 777,
									"src": "3837:407:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "4344:318:1",
										"statements": [
											{
												"assignments": [
													663
												],
												"declarations": [
													{
														"constant": false,
														"id": 663,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "4360:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "4355:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 662,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 665,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4367:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4355:17:1"
											},
											{
												"assignments": [
													667
												],
												"declarations": [
													{
														"constant": false,
														"id": 667,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "4391:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "4383:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 666,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4383:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 669,
												"initialValue": {
													"hexValue": "30",
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4395:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4383:13:1"
											},
											{
												"expression": {
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 670,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "4408:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 671,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "4414:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 672,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4407:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 675,
																"name": "ticketIncome",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "4435:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 676,
																"name": "_a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "4449:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 673,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "4419:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4428:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "4419:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4419:33:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4407:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "4407:45:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 681,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "4471:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704c65616465725d206f766572666c6f772e",
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4477:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1",
																"typeString": "literal_string \"[ticketIncome2GroupLeader] overflow.\""
															},
															"value": "[ticketIncome2GroupLeader] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1",
																"typeString": "literal_string \"[ticketIncome2GroupLeader] overflow.\""
															}
														],
														"id": 680,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4463:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4463:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 684,
												"nodeType": "ExpressionStatement",
												"src": "4463:53:1"
											},
											{
												"expression": {
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 685,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "4528:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 686,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "4534:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 687,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4527:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 690,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "4555:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 691,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4558:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 688,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "4539:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4548:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "4539:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4539:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4527:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "4527:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 696,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "4590:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704c65616465725d206f766572666c6f772e",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4596:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1",
																"typeString": "literal_string \"[ticketIncome2GroupLeader] overflow.\""
															},
															"value": "[ticketIncome2GroupLeader] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0345f6cfb7026676909d8f5e5db37c21496438d5ede7a0e93d969751e04b7f1",
																"typeString": "literal_string \"[ticketIncome2GroupLeader] overflow.\""
															}
														],
														"id": 695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4582:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4582:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "4582:53:1"
											},
											{
												"expression": {
													"id": 700,
													"name": "m",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 667,
													"src": "4653:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 661,
												"id": 701,
												"nodeType": "Return",
												"src": "4646:8:1"
											}
										]
									},
									"functionSelector": "2e26fb4a",
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketIncome2GroupLeader",
									"nameLocation": "4261:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "ticketIncome",
												"nameLocation": "4294:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "4286:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4286:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4285:22:1"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "4337:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "4329:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:15:1"
									},
									"scope": 777,
									"src": "4252:410:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "4778:479:1",
										"statements": [
											{
												"assignments": [
													713
												],
												"declarations": [
													{
														"constant": false,
														"id": 713,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "4797:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 775,
														"src": "4789:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 712,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4789:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 719,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"id": 714,
															"name": "_denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "4801:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 715,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "4816:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4801:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 717,
														"name": "_b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "4821:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4801:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4789:34:1"
											},
											{
												"assignments": [
													721
												],
												"declarations": [
													{
														"constant": false,
														"id": 721,
														"mutability": "mutable",
														"name": "flag",
														"nameLocation": "4841:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 775,
														"src": "4836:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 720,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4836:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"hexValue": "66616c7365",
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4848:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4836:17:1"
											},
											{
												"assignments": [
													725
												],
												"declarations": [
													{
														"constant": false,
														"id": 725,
														"mutability": "mutable",
														"name": "m",
														"nameLocation": "4872:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 775,
														"src": "4864:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 724,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4864:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 727,
												"initialValue": {
													"hexValue": "30",
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4876:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4864:13:1"
											},
											{
												"expression": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 728,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "4889:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 729,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "4895:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 730,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4888:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 733,
																"name": "ticketIncome",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "4916:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 734,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "4930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 731,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "4900:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4909:6:1",
															"memberName": "tryMul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 104,
															"src": "4900:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4900:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4888:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "4888:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 739,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "4951:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666c6f772e",
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4957:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															},
															"value": "[ticketIncome2GroupMember] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															}
														],
														"id": 738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4943:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "4943:53:1"
											},
											{
												"expression": {
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 743,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "5008:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 744,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "5014:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 745,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "5007:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 748,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "5035:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 749,
																"name": "_denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "5038:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 746,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "5019:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5028:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "5019:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5019:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "5007:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "5007:44:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "5070:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666c6f772e",
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5076:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															},
															"value": "[ticketIncome2GroupMember] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															}
														],
														"id": 753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5062:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5062:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "5062:53:1"
											},
											{
												"expression": {
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 758,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "5127:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 759,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "5133:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 760,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "5126:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 763,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "5154:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 764,
																"name": "memNum",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "5157:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 761,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "5138:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$311_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5147:6:1",
															"memberName": "tryDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 132,
															"src": "5138:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
															}
														},
														"id": 765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5138:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "5126:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "5126:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 769,
															"name": "flag",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "5183:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5b7469636b6574496e636f6d653247726f75704d656d6265725d206f766572666c6f772e",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															},
															"value": "[ticketIncome2GroupMember] overflow."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce31de4178a3028fe7c1cefb46643b582db37609f6af14d77b0f254edf58aa18",
																"typeString": "literal_string \"[ticketIncome2GroupMember] overflow.\""
															}
														],
														"id": 768,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5175:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5175:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "5175:53:1"
											},
											{
												"expression": {
													"id": 773,
													"name": "m",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 725,
													"src": "5248:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 711,
												"id": 774,
												"nodeType": "Return",
												"src": "5241:8:1"
											}
										]
									},
									"functionSelector": "84105419",
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ticketIncome2GroupMember",
									"nameLocation": "4679:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "ticketIncome",
												"nameLocation": "4712:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "4704:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4704:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "memNum",
												"nameLocation": "4734:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "4726:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4726:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4703:38:1"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "money",
												"nameLocation": "4771:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "4763:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4763:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4762:15:1"
									},
									"scope": 777,
									"src": "4670:587:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 778,
							"src": "123:5139:1",
							"usedErrors": []
						}
					],
					"src": "33:5233:1"
				},
				"id": 1
			}
		}
	}
}