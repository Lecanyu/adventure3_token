{
	"id": "0af8d569b8aa1f45c4b7de15e78c79d4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"use_erc777_token_example.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\nimport \"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\";\nimport \"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\";\nimport \"@openzeppelin/contracts/token/ERC777/IERC777.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\";\n\n// 收到token后即销毁\ncontract ReceiveAndBurn is IERC777Sender, IERC777Recipient {\n    event TokensReceived(address indexed operator, address indexed from, address indexed to, uint256 amount, string log_text);\n    event TokensToSend(address indexed operator, address indexed from, address indexed to, uint256 amount, string log_text);\n    \n    mapping(address => uint256) public givers;\n    address private _owner;\n    IERC777 private _token;\n\n    IERC1820Registry internal constant _ERC1820_REGISTRY = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n\n    bytes32 private constant _TOKENS_SENDER_INTERFACE_HASH = keccak256(\"ERC777TokensSender\");\n    bytes32 private constant _TOKENS_RECIPIENT_INTERFACE_HASH = keccak256(\"ERC777TokensRecipient\");\n\n    constructor(IERC777 token) {\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), _TOKENS_SENDER_INTERFACE_HASH, address(this));\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), _TOKENS_RECIPIENT_INTERFACE_HASH, address(this));\n\n        _owner = msg.sender;\n        _token = token;\n    }\n\n    // 查询某个地址送出的token\n    function showGive(address g) public view virtual returns (uint256) {\n        return givers[g];\n    }\n\n    // 收款时被回调\n    function tokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external {\n        givers[from] += amount;\n        emit TokensReceived(operator, from, to, amount, \"token received\");\n    }\n\n    // 转出时被回调\n    function tokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external {\n        emit TokensToSend(operator, from, to, amount, \"token to send\");\n    }\n\n    // 管理员销毁收到的token\n    function burn() external {\n        require(msg.sender == _owner, \"no permision\");\n        uint256 balance = _token.balanceOf(address(this));\n        _token.burn(balance, \"\");\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/introspection/IERC1820Registry.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the global ERC1820 Registry, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n * implementers for interfaces in this registry, as well as query support.\n *\n * Implementers may be shared by multiple accounts, and can also implement more\n * than a single interface for each account. Contracts can implement interfaces\n * for themselves, but externally-owned accounts (EOA) must delegate this to a\n * contract.\n *\n * {IERC165} interfaces can also be queried via the registry.\n *\n * For an in-depth explanation and source code analysis, see the EIP text.\n */\ninterface IERC1820Registry {\n    event InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer);\n\n    event ManagerChanged(address indexed account, address indexed newManager);\n\n    /**\n     * @dev Sets `newManager` as the manager for `account`. A manager of an\n     * account is able to set interface implementers for it.\n     *\n     * By default, each account is its own manager. Passing a value of `0x0` in\n     * `newManager` will reset the manager to this initial state.\n     *\n     * Emits a {ManagerChanged} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the current manager for `account`.\n     */\n    function setManager(address account, address newManager) external;\n\n    /**\n     * @dev Returns the manager for `account`.\n     *\n     * See {setManager}.\n     */\n    function getManager(address account) external view returns (address);\n\n    /**\n     * @dev Sets the `implementer` contract as ``account``'s implementer for\n     * `interfaceHash`.\n     *\n     * `account` being the zero address is an alias for the caller's address.\n     * The zero address can also be used in `implementer` to remove an old one.\n     *\n     * See {interfaceHash} to learn how these are created.\n     *\n     * Emits an {InterfaceImplementerSet} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the current manager for `account`.\n     * - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n     * end in 28 zeroes).\n     * - `implementer` must implement {IERC1820Implementer} and return true when\n     * queried for support, unless `implementer` is the caller. See\n     * {IERC1820Implementer-canImplementInterfaceForAddress}.\n     */\n    function setInterfaceImplementer(\n        address account,\n        bytes32 _interfaceHash,\n        address implementer\n    ) external;\n\n    /**\n     * @dev Returns the implementer of `interfaceHash` for `account`. If no such\n     * implementer is registered, returns the zero address.\n     *\n     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n     * zeroes), `account` will be queried for support of it.\n     *\n     * `account` being the zero address is an alias for the caller's address.\n     */\n    function getInterfaceImplementer(address account, bytes32 _interfaceHash) external view returns (address);\n\n    /**\n     * @dev Returns the interface hash for an `interfaceName`, as defined in the\n     * corresponding\n     * https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\n     */\n    function interfaceHash(string calldata interfaceName) external pure returns (bytes32);\n\n    /**\n     * @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n     * @param account Address of the contract for which to update the cache.\n     * @param interfaceId ERC165 interface for which to update the cache.\n     */\n    function updateERC165Cache(address account, bytes4 interfaceId) external;\n\n    /**\n     * @notice Checks whether a contract implements an ERC165 interface or not.\n     * If the result is not cached a direct lookup on the contract address is performed.\n     * If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n     * {updateERC165Cache} with the contract address.\n     * @param account Address of the contract to check.\n     * @param interfaceId ERC165 interface to check.\n     * @return True if `account` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165Interface(address account, bytes4 interfaceId) external view returns (bool);\n\n    /**\n     * @notice Checks whether a contract implements an ERC165 interface or not without using or updating the cache.\n     * @param account Address of the contract to check.\n     * @param interfaceId ERC165 interface to check.\n     * @return True if `account` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC777/IERC777.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC777/IERC777.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777Token standard as defined in the EIP.\n *\n * This contract uses the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n * token holders and recipients react to token movements by using setting implementers\n * for the associated interfaces in said registry. See {IERC1820Registry} and\n * {ERC1820Implementer}.\n */\ninterface IERC777 {\n    /**\n     * @dev Emitted when `amount` tokens are created by `operator` and assigned to `to`.\n     *\n     * Note that some additional user `data` and `operatorData` can be logged in the event.\n     */\n    event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData);\n\n    /**\n     * @dev Emitted when `operator` destroys `amount` tokens from `account`.\n     *\n     * Note that some additional user `data` and `operatorData` can be logged in the event.\n     */\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData);\n\n    /**\n     * @dev Emitted when `operator` is made operator for `tokenHolder`.\n     */\n    event AuthorizedOperator(address indexed operator, address indexed tokenHolder);\n\n    /**\n     * @dev Emitted when `operator` is revoked its operator status for `tokenHolder`.\n     */\n    event RevokedOperator(address indexed operator, address indexed tokenHolder);\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the smallest part of the token that is not divisible. This\n     * means all token operations (creation, movement and destruction) must have\n     * amounts that are a multiple of this number.\n     *\n     * For most token contracts, this value will equal 1.\n     */\n    function granularity() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`owner`).\n     */\n    function balanceOf(address owner) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * If send or receive hooks are registered for the caller and `recipient`,\n     * the corresponding functions will be called with `data` and empty\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function send(\n        address recipient,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\n     * total supply.\n     *\n     * If a send hook is registered for the caller, the corresponding function\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     */\n    function burn(uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Returns true if an account is an operator of `tokenHolder`.\n     * Operators can send and burn tokens on behalf of their owners. All\n     * accounts are their own operator.\n     *\n     * See {operatorSend} and {operatorBurn}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) external view returns (bool);\n\n    /**\n     * @dev Make an account an operator of the caller.\n     *\n     * See {isOperatorFor}.\n     *\n     * Emits an {AuthorizedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function authorizeOperator(address operator) external;\n\n    /**\n     * @dev Revoke an account's operator status for the caller.\n     *\n     * See {isOperatorFor} and {defaultOperators}.\n     *\n     * Emits a {RevokedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function revokeOperator(address operator) external;\n\n    /**\n     * @dev Returns the list of default operators. These accounts are operators\n     * for all token holders, even if {authorizeOperator} was never called on\n     * them.\n     *\n     * This list is immutable, but individual holders may revoke these via\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\n     */\n    function defaultOperators() external view returns (address[] memory);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n     * be an operator of `sender`.\n     *\n     * If send or receive hooks are registered for `sender` and `recipient`,\n     * the corresponding functions will be called with `data` and\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - `sender` cannot be the zero address.\n     * - `sender` must have at least `amount` tokens.\n     * - the caller must be an operator for `sender`.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\n     * The caller must be an operator of `account`.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * - the caller must be an operator for `account`.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    event Sent(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData\n    );\n}\n"
			},
			"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777Sender.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777TokensSender standard as defined in the EIP.\n *\n * {IERC777} Token holders can be notified of operations performed on their\n * tokens by having a contract implement this interface (contract holders can be\n * their own implementer) and registering it on the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n *\n * See {IERC1820Registry} and {ERC1820Implementer}.\n */\ninterface IERC777Sender {\n    /**\n     * @dev Called by an {IERC777} token contract whenever a registered holder's\n     * (`from`) tokens are about to be moved or destroyed. The type of operation\n     * is conveyed by `to` being the zero address or not.\n     *\n     * This call occurs _before_ the token contract's state is updated, so\n     * {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777Recipient.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n *\n * Accounts can be notified of {IERC777} tokens being sent to them by having a\n * contract implement this interface (contract holders can be their own\n * implementer) and registering it on the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n *\n * See {IERC1820Registry} and {ERC1820Implementer}.\n */\ninterface IERC777Recipient {\n    /**\n     * @dev Called by an {IERC777} token contract whenever tokens are being\n     * moved or created into a registered account (`to`). The type of operation\n     * is conveyed by `from` being the zero address or not.\n     *\n     * This call occurs _after_ the token contract's state is updated, so\n     * {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC777/IERC777.sol": {
				"IERC777": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "AuthorizedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "RevokedOperator",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "Sent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "authorizeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultOperators",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "granularity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenHolder",
									"type": "address"
								}
							],
							"name": "isOperatorFor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "operatorSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "revokeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "send",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.",
						"events": {
							"AuthorizedOperator(address,address)": {
								"details": "Emitted when `operator` is made operator for `tokenHolder`."
							},
							"Burned(address,address,uint256,bytes,bytes)": {
								"details": "Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event."
							},
							"Minted(address,address,uint256,bytes,bytes)": {
								"details": "Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event."
							},
							"RevokedOperator(address,address)": {
								"details": "Emitted when `operator` is revoked its operator status for `tokenHolder`."
							}
						},
						"kind": "dev",
						"methods": {
							"authorizeOperator(address)": {
								"details": "Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by an account (`owner`)."
							},
							"burn(uint256,bytes)": {
								"details": "Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens."
							},
							"defaultOperators()": {
								"details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
							},
							"granularity()": {
								"details": "Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1."
							},
							"isOperatorFor(address,address)": {
								"details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"operatorBurn(address,uint256,bytes,bytes)": {
								"details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`."
							},
							"operatorSend(address,address,uint256,bytes,bytes)": {
								"details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
							},
							"revokeOperator(address)": {
								"details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address."
							},
							"send(address,uint256,bytes)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"authorizeOperator(address)": "959b8c3f",
							"balanceOf(address)": "70a08231",
							"burn(uint256,bytes)": "fe9d9303",
							"defaultOperators()": "06e48538",
							"granularity()": "556f0dc7",
							"isOperatorFor(address,address)": "d95b6371",
							"name()": "06fdde03",
							"operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
							"operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
							"revokeOperator(address)": "fad8b32a",
							"send(address,uint256,bytes)": "9bd9bbc6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.\",\"events\":{\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"granularity()\":{\"details\":\"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1.\"},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":\"IERC777\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol": {
				"IERC777Recipient": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensReceived",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777TokensRecipient standard as defined in the EIP. Accounts can be notified of {IERC777} tokens being sent to them by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.",
						"kind": "dev",
						"methods": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensRecipient standard as defined in the EIP. Accounts can be notified of {IERC777} tokens being sent to them by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":\"IERC777Recipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol": {
				"IERC777Sender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensToSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777TokensSender standard as defined in the EIP. {IERC777} Token holders can be notified of operations performed on their tokens by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.",
						"kind": "dev",
						"methods": {
							"tokensToSend(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensToSend(address,address,address,uint256,bytes,bytes)": "75ab9782"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensToSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensSender standard as defined in the EIP. {IERC777} Token holders can be notified of operations performed on their tokens by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"tokensToSend(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":\"IERC777Sender\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18\",\"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol": {
				"IERC1820Registry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "interfaceHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "InterfaceImplementerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "ManagerChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_interfaceHash",
									"type": "bytes32"
								}
							],
							"name": "getInterfaceImplementer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "implementsERC165Interface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "implementsERC165InterfaceNoCache",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "interfaceName",
									"type": "string"
								}
							],
							"name": "interfaceHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_interfaceHash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "setInterfaceImplementer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "setManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "updateERC165Cache",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.",
						"kind": "dev",
						"methods": {
							"getInterfaceImplementer(address,bytes32)": {
								"details": "Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address."
							},
							"getManager(address)": {
								"details": "Returns the manager for `account`. See {setManager}."
							},
							"implementsERC165Interface(address,bytes4)": {
								"params": {
									"account": "Address of the contract to check.",
									"interfaceId": "ERC165 interface to check."
								},
								"returns": {
									"_0": "True if `account` implements `interfaceId`, false otherwise."
								}
							},
							"implementsERC165InterfaceNoCache(address,bytes4)": {
								"params": {
									"account": "Address of the contract to check.",
									"interfaceId": "ERC165 interface to check."
								},
								"returns": {
									"_0": "True if `account` implements `interfaceId`, false otherwise."
								}
							},
							"interfaceHash(string)": {
								"details": "Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
							},
							"setInterfaceImplementer(address,bytes32,address)": {
								"details": "Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}."
							},
							"setManager(address,address)": {
								"details": "Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`."
							},
							"updateERC165Cache(address,bytes4)": {
								"params": {
									"account": "Address of the contract for which to update the cache.",
									"interfaceId": "ERC165 interface for which to update the cache."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getInterfaceImplementer(address,bytes32)": "aabbb8ca",
							"getManager(address)": "3d584063",
							"implementsERC165Interface(address,bytes4)": "f712f3e8",
							"implementsERC165InterfaceNoCache(address,bytes4)": "b7056765",
							"interfaceHash(string)": "65ba36c1",
							"setInterfaceImplementer(address,bytes32,address)": "29965a1d",
							"setManager(address,address)": "5df8122f",
							"updateERC165Cache(address,bytes4)": "a41e7d51"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.\",\"kind\":\"dev\",\"methods\":{\"getInterfaceImplementer(address,bytes32)\":{\"details\":\"Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address.\"},\"getManager(address)\":{\"details\":\"Returns the manager for `account`. See {setManager}.\"},\"implementsERC165Interface(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"interfaceHash(string)\":{\"details\":\"Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\"},\"setInterfaceImplementer(address,bytes32,address)\":{\"details\":\"Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}.\"},\"setManager(address,address)\":{\"details\":\"Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`.\"},\"updateERC165Cache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract for which to update the cache.\",\"interfaceId\":\"ERC165 interface for which to update the cache.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"implementsERC165Interface(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address.\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not without using or updating the cache.\"},\"updateERC165Cache(address,bytes4)\":{\"notice\":\"Updates the cache with whether the contract implements an ERC165 interface or not.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":\"IERC1820Registry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0xd750324b0fc76aa4c1b0aadf7cab03b3d1cc4d5744348c18ba2b99dbdbe1758d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d53cbf8e2e469a6422fb61d8636af3ec39d8e10e7f4d99d625bdd36d4b8ddf34\",\"dweb:/ipfs/QmNhvk3jmfgquVki2V7gNmTWTMeNwEPCnetybeBntQtsyJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"implementsERC165Interface(address,bytes4)": {
								"notice": "Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address."
							},
							"implementsERC165InterfaceNoCache(address,bytes4)": {
								"notice": "Checks whether a contract implements an ERC165 interface or not without using or updating the cache."
							},
							"updateERC165Cache(address,bytes4)": {
								"notice": "Updates the cache with whether the contract implements an ERC165 interface or not."
							}
						},
						"version": 1
					}
				}
			},
			"use_erc777_token_example.sol": {
				"ReceiveAndBurn": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC777",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "log_text",
									"type": "string"
								}
							],
							"name": "TokensReceived",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "log_text",
									"type": "string"
								}
							],
							"name": "TokensToSend",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "givers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "g",
									"type": "address"
								}
							],
							"name": "showGive",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensReceived",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensToSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed."
							},
							"tokensToSend(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"use_erc777_token_example.sol\":352:2438  contract ReceiveAndBurn is IERC777Sender, IERC777Recipient {... */\n  mstore(0x40, 0x80)\n    /* \"use_erc777_token_example.sol\":1095:1410  constructor(IERC777 token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"use_erc777_token_example.sol\":850:892  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n  0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n    /* \"use_erc777_token_example.sol\":1132:1173  _ERC1820_REGISTRY.setInterfaceImplementer */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x29965a1d\n    /* \"use_erc777_token_example.sol\":1182:1186  this */\n  address\n    /* \"use_erc777_token_example.sol\":957:988  keccak256(\"ERC777TokensSender\") */\n  0x29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895\n    /* \"use_erc777_token_example.sol\":1228:1232  this */\n  address\n    /* \"use_erc777_token_example.sol\":1132:1234  _ERC1820_REGISTRY.setInterfaceImplementer(address(this), _TOKENS_SENDER_INTERFACE_HASH, address(this)) */\n  mload(0x40)\n  dup5\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_8\n  jumpi\n  0x00\n  dup1\n  revert\ntag_8:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_10\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_10:\n  pop\n  pop\n  pop\n  pop\n    /* \"use_erc777_token_example.sol\":850:892  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n  0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n    /* \"use_erc777_token_example.sol\":1244:1285  _ERC1820_REGISTRY.setInterfaceImplementer */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x29965a1d\n    /* \"use_erc777_token_example.sol\":1294:1298  this */\n  address\n    /* \"use_erc777_token_example.sol\":1054:1088  keccak256(\"ERC777TokensRecipient\") */\n  0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b\n    /* \"use_erc777_token_example.sol\":1343:1347  this */\n  address\n    /* \"use_erc777_token_example.sol\":1244:1349  _ERC1820_REGISTRY.setInterfaceImplementer(address(this), _TOKENS_RECIPIENT_INTERFACE_HASH, address(this)) */\n  mload(0x40)\n  dup5\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_11:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_14\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_14:\n  pop\n  pop\n  pop\n  pop\n    /* \"use_erc777_token_example.sol\":1369:1379  msg.sender */\n  caller\n    /* \"use_erc777_token_example.sol\":1360:1366  _owner */\n  0x01\n  0x00\n    /* \"use_erc777_token_example.sol\":1360:1379  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"use_erc777_token_example.sol\":1398:1403  token */\n  dup1\n    /* \"use_erc777_token_example.sol\":1389:1395  _token */\n  0x02\n  0x00\n    /* \"use_erc777_token_example.sol\":1389:1403  _token = token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"use_erc777_token_example.sol\":1095:1410  constructor(IERC777 token) {... */\n  pop\n    /* \"use_erc777_token_example.sol\":352:2438  contract ReceiveAndBurn is IERC777Sender, IERC777Recipient {... */\n  jump(tag_15)\n    /* \"#utility.yul\":88:205   */\ntag_17:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_19:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_20:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_33\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_19\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:679   */\ntag_21:\n    /* \"#utility.yul\":620:627   */\n  0x00\n    /* \"#utility.yul\":649:673   */\n  tag_35\n    /* \"#utility.yul\":667:672   */\n  dup3\n    /* \"#utility.yul\":649:673   */\n  tag_20\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":638:673   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:679   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":685:837   */\ntag_22:\n    /* \"#utility.yul\":773:812   */\n  tag_37\n    /* \"#utility.yul\":806:811   */\n  dup2\n    /* \"#utility.yul\":773:812   */\n  tag_21\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":766:771   */\n  dup2\n    /* \"#utility.yul\":763:813   */\n  eq\n    /* \"#utility.yul\":753:831   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":827:828   */\n  0x00\n    /* \"#utility.yul\":824:825   */\n  dup1\n    /* \"#utility.yul\":817:829   */\n  revert\n    /* \"#utility.yul\":753:831   */\ntag_38:\n    /* \"#utility.yul\":685:837   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":843:1016   */\ntag_23:\n    /* \"#utility.yul\":915:920   */\n  0x00\n    /* \"#utility.yul\":946:952   */\n  dup2\n    /* \"#utility.yul\":940:953   */\n  mload\n    /* \"#utility.yul\":931:953   */\n  swap1\n  pop\n    /* \"#utility.yul\":962:1010   */\n  tag_40\n    /* \"#utility.yul\":1004:1009   */\n  dup2\n    /* \"#utility.yul\":962:1010   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":843:1016   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1022:1403   */\ntag_3:\n    /* \"#utility.yul\":1107:1113   */\n  0x00\n    /* \"#utility.yul\":1156:1158   */\n  0x20\n    /* \"#utility.yul\":1144:1153   */\n  dup3\n    /* \"#utility.yul\":1135:1142   */\n  dup5\n    /* \"#utility.yul\":1131:1154   */\n  sub\n    /* \"#utility.yul\":1127:1159   */\n  slt\n    /* \"#utility.yul\":1124:1243   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1162:1241   */\n  tag_43\n  tag_17\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1124:1243   */\ntag_42:\n    /* \"#utility.yul\":1282:1283   */\n  0x00\n    /* \"#utility.yul\":1307:1386   */\n  tag_44\n    /* \"#utility.yul\":1378:1385   */\n  dup5\n    /* \"#utility.yul\":1369:1375   */\n  dup3\n    /* \"#utility.yul\":1358:1367   */\n  dup6\n    /* \"#utility.yul\":1354:1376   */\n  add\n    /* \"#utility.yul\":1307:1386   */\n  tag_23\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1297:1386   */\n  swap2\n  pop\n    /* \"#utility.yul\":1253:1396   */\n  pop\n    /* \"#utility.yul\":1022:1403   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1409:1527   */\ntag_24:\n    /* \"#utility.yul\":1496:1520   */\n  tag_46\n    /* \"#utility.yul\":1514:1519   */\n  dup2\n    /* \"#utility.yul\":1496:1520   */\n  tag_20\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1491:1494   */\n  dup3\n    /* \"#utility.yul\":1484:1521   */\n  mstore\n    /* \"#utility.yul\":1409:1527   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1533:1610   */\ntag_25:\n    /* \"#utility.yul\":1570:1577   */\n  0x00\n    /* \"#utility.yul\":1599:1604   */\n  dup2\n    /* \"#utility.yul\":1588:1604   */\n  swap1\n  pop\n    /* \"#utility.yul\":1533:1610   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1616:1734   */\ntag_26:\n    /* \"#utility.yul\":1703:1727   */\n  tag_49\n    /* \"#utility.yul\":1721:1726   */\n  dup2\n    /* \"#utility.yul\":1703:1727   */\n  tag_25\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1698:1701   */\n  dup3\n    /* \"#utility.yul\":1691:1728   */\n  mstore\n    /* \"#utility.yul\":1616:1734   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1740:2182   */\ntag_7:\n    /* \"#utility.yul\":1889:1893   */\n  0x00\n    /* \"#utility.yul\":1927:1929   */\n  0x60\n    /* \"#utility.yul\":1916:1925   */\n  dup3\n    /* \"#utility.yul\":1912:1930   */\n  add\n    /* \"#utility.yul\":1904:1930   */\n  swap1\n  pop\n    /* \"#utility.yul\":1940:2011   */\n  tag_51\n    /* \"#utility.yul\":2008:2009   */\n  0x00\n    /* \"#utility.yul\":1997:2006   */\n  dup4\n    /* \"#utility.yul\":1993:2010   */\n  add\n    /* \"#utility.yul\":1984:1990   */\n  dup7\n    /* \"#utility.yul\":1940:2011   */\n  tag_24\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2021:2093   */\n  tag_52\n    /* \"#utility.yul\":2089:2091   */\n  0x20\n    /* \"#utility.yul\":2078:2087   */\n  dup4\n    /* \"#utility.yul\":2074:2092   */\n  add\n    /* \"#utility.yul\":2065:2071   */\n  dup6\n    /* \"#utility.yul\":2021:2093   */\n  tag_26\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2103:2175   */\n  tag_53\n    /* \"#utility.yul\":2171:2173   */\n  0x40\n    /* \"#utility.yul\":2160:2169   */\n  dup4\n    /* \"#utility.yul\":2156:2174   */\n  add\n    /* \"#utility.yul\":2147:2153   */\n  dup5\n    /* \"#utility.yul\":2103:2175   */\n  tag_24\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1740:2182   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"use_erc777_token_example.sol\":352:2438  contract ReceiveAndBurn is IERC777Sender, IERC777Recipient {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"use_erc777_token_example.sol\":352:2438  contract ReceiveAndBurn is IERC777Sender, IERC777Recipient {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x23de29\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x44df8e70\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x75ab9782\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8170eace\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe89081f8\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"use_erc777_token_example.sol\":1588:1903  function tokensReceived(... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"use_erc777_token_example.sol\":2256:2436  function burn() external {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"use_erc777_token_example.sol\":1935:2213  function tokensToSend(... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_15:\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"use_erc777_token_example.sol\":1456:1556  function showGive(address g) public view virtual returns (uint256) {... */\n    tag_6:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"use_erc777_token_example.sol\":674:715  mapping(address => uint256) public givers */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"use_erc777_token_example.sol\":1588:1903  function tokensReceived(... */\n    tag_11:\n        /* \"use_erc777_token_example.sol\":1815:1821  amount */\n      dup5\n        /* \"use_erc777_token_example.sol\":1799:1805  givers */\n      0x00\n        /* \"use_erc777_token_example.sol\":1799:1811  givers[from] */\n      dup1\n        /* \"use_erc777_token_example.sol\":1806:1810  from */\n      dup10\n        /* \"use_erc777_token_example.sol\":1799:1811  givers[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"use_erc777_token_example.sol\":1799:1821  givers[from] += amount */\n      dup3\n      dup3\n      sload\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"use_erc777_token_example.sol\":1867:1869  to */\n      dup6\n        /* \"use_erc777_token_example.sol\":1836:1896  TokensReceived(operator, from, to, amount, \"token received\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"use_erc777_token_example.sol\":1861:1865  from */\n      dup8\n        /* \"use_erc777_token_example.sol\":1836:1896  TokensReceived(operator, from, to, amount, \"token received\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"use_erc777_token_example.sol\":1851:1859  operator */\n      dup10\n        /* \"use_erc777_token_example.sol\":1836:1896  TokensReceived(operator, from, to, amount, \"token received\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40079291ab55cc19bc58cf71f199a7dbea42e6ae0a5df85085cfd005989882e1\n        /* \"use_erc777_token_example.sol\":1871:1877  amount */\n      dup9\n        /* \"use_erc777_token_example.sol\":1836:1896  TokensReceived(operator, from, to, amount, \"token received\") */\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"use_erc777_token_example.sol\":1588:1903  function tokensReceived(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"use_erc777_token_example.sol\":2256:2436  function burn() external {... */\n    tag_13:\n        /* \"use_erc777_token_example.sol\":2313:2319  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"use_erc777_token_example.sol\":2299:2319  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"use_erc777_token_example.sol\":2299:2309  msg.sender */\n      caller\n        /* \"use_erc777_token_example.sol\":2299:2319  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"use_erc777_token_example.sol\":2291:2336  require(msg.sender == _owner, \"no permision\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"use_erc777_token_example.sol\":2346:2361  uint256 balance */\n      0x00\n        /* \"use_erc777_token_example.sol\":2364:2370  _token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"use_erc777_token_example.sol\":2364:2380  _token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"use_erc777_token_example.sol\":2389:2393  this */\n      address\n        /* \"use_erc777_token_example.sol\":2364:2395  _token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"use_erc777_token_example.sol\":2346:2395  uint256 balance = _token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"use_erc777_token_example.sol\":2405:2411  _token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"use_erc777_token_example.sol\":2405:2416  _token.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfe9d9303\n        /* \"use_erc777_token_example.sol\":2417:2424  balance */\n      dup3\n        /* \"use_erc777_token_example.sol\":2405:2429  _token.burn(balance, \"\") */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n        /* \"use_erc777_token_example.sol\":2281:2436  {... */\n      pop\n        /* \"use_erc777_token_example.sol\":2256:2436  function burn() external {... */\n      jump\t// out\n        /* \"use_erc777_token_example.sol\":1935:2213  function tokensToSend(... */\n    tag_16:\n        /* \"use_erc777_token_example.sol\":2178:2180  to */\n      dup6\n        /* \"use_erc777_token_example.sol\":2149:2206  TokensToSend(operator, from, to, amount, \"token to send\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"use_erc777_token_example.sol\":2172:2176  from */\n      dup8\n        /* \"use_erc777_token_example.sol\":2149:2206  TokensToSend(operator, from, to, amount, \"token to send\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"use_erc777_token_example.sol\":2162:2170  operator */\n      dup10\n        /* \"use_erc777_token_example.sol\":2149:2206  TokensToSend(operator, from, to, amount, \"token to send\") */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x76a1164d576fc7c969d03ca591db9973dcf556dea68edfb7cc163fdce887d39b\n        /* \"use_erc777_token_example.sol\":2182:2188  amount */\n      dup9\n        /* \"use_erc777_token_example.sol\":2149:2206  TokensToSend(operator, from, to, amount, \"token to send\") */\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"use_erc777_token_example.sol\":1935:2213  function tokensToSend(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"use_erc777_token_example.sol\":1456:1556  function showGive(address g) public view virtual returns (uint256) {... */\n    tag_20:\n        /* \"use_erc777_token_example.sol\":1514:1521  uint256 */\n      0x00\n        /* \"use_erc777_token_example.sol\":1540:1546  givers */\n      dup1\n        /* \"use_erc777_token_example.sol\":1540:1549  givers[g] */\n      0x00\n        /* \"use_erc777_token_example.sol\":1547:1548  g */\n      dup4\n        /* \"use_erc777_token_example.sol\":1540:1549  givers[g] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"use_erc777_token_example.sol\":1533:1549  return givers[g] */\n      swap1\n      pop\n        /* \"use_erc777_token_example.sol\":1456:1556  function showGive(address g) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"use_erc777_token_example.sol\":674:715  mapping(address => uint256) public givers */\n    tag_25:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_52:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_53:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_54:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_55:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_85\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_54\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_56:\n        /* \"#utility.yul\":641:665   */\n      tag_87\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_55\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_88\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_88:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_57:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_90\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_56\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_58:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_59:\n        /* \"#utility.yul\":997:1021   */\n      tag_93\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_58\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_94\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_94:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_60:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_96\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_59\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1314   */\n    tag_61:\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1303:1304   */\n      dup1\n        /* \"#utility.yul\":1296:1308   */\n      revert\n        /* \"#utility.yul\":1320:1437   */\n    tag_62:\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1443:1560   */\n    tag_63:\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1549:1550   */\n      dup1\n        /* \"#utility.yul\":1542:1554   */\n      revert\n        /* \"#utility.yul\":1579:2131   */\n    tag_64:\n        /* \"#utility.yul\":1636:1644   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup1\n        /* \"#utility.yul\":1696:1699   */\n      dup4\n        /* \"#utility.yul\":1689:1693   */\n      0x1f\n        /* \"#utility.yul\":1681:1687   */\n      dup5\n        /* \"#utility.yul\":1677:1694   */\n      add\n        /* \"#utility.yul\":1673:1700   */\n      slt\n        /* \"#utility.yul\":1663:1785   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":1704:1783   */\n      tag_102\n      tag_61\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1663:1785   */\n    tag_101:\n        /* \"#utility.yul\":1817:1823   */\n      dup3\n        /* \"#utility.yul\":1804:1824   */\n      calldataload\n        /* \"#utility.yul\":1794:1824   */\n      swap1\n      pop\n        /* \"#utility.yul\":1847:1865   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1839:1845   */\n      dup2\n        /* \"#utility.yul\":1836:1866   */\n      gt\n        /* \"#utility.yul\":1833:1950   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":1869:1948   */\n      tag_104\n      tag_62\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1833:1950   */\n    tag_103:\n        /* \"#utility.yul\":1983:1987   */\n      0x20\n        /* \"#utility.yul\":1975:1981   */\n      dup4\n        /* \"#utility.yul\":1971:1988   */\n      add\n        /* \"#utility.yul\":1959:1988   */\n      swap2\n      pop\n        /* \"#utility.yul\":2037:2040   */\n      dup4\n        /* \"#utility.yul\":2029:2033   */\n      0x01\n        /* \"#utility.yul\":2021:2027   */\n      dup3\n        /* \"#utility.yul\":2017:2034   */\n      mul\n        /* \"#utility.yul\":2007:2015   */\n      dup4\n        /* \"#utility.yul\":2003:2035   */\n      add\n        /* \"#utility.yul\":2000:2041   */\n      gt\n        /* \"#utility.yul\":1997:2125   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":2044:2123   */\n      tag_106\n      tag_63\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":1997:2125   */\n    tag_105:\n        /* \"#utility.yul\":1579:2131   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2137:3590   */\n    tag_10:\n        /* \"#utility.yul\":2263:2269   */\n      0x00\n        /* \"#utility.yul\":2271:2277   */\n      dup1\n        /* \"#utility.yul\":2279:2285   */\n      0x00\n        /* \"#utility.yul\":2287:2293   */\n      dup1\n        /* \"#utility.yul\":2295:2301   */\n      0x00\n        /* \"#utility.yul\":2303:2309   */\n      dup1\n        /* \"#utility.yul\":2311:2317   */\n      0x00\n        /* \"#utility.yul\":2319:2325   */\n      dup1\n        /* \"#utility.yul\":2368:2371   */\n      0xc0\n        /* \"#utility.yul\":2356:2365   */\n      dup10\n        /* \"#utility.yul\":2347:2354   */\n      dup12\n        /* \"#utility.yul\":2343:2366   */\n      sub\n        /* \"#utility.yul\":2339:2372   */\n      slt\n        /* \"#utility.yul\":2336:2456   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":2375:2454   */\n      tag_109\n      tag_52\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":2336:2456   */\n    tag_108:\n        /* \"#utility.yul\":2495:2496   */\n      0x00\n        /* \"#utility.yul\":2520:2573   */\n      tag_110\n        /* \"#utility.yul\":2565:2572   */\n      dup12\n        /* \"#utility.yul\":2556:2562   */\n      dup3\n        /* \"#utility.yul\":2545:2554   */\n      dup13\n        /* \"#utility.yul\":2541:2563   */\n      add\n        /* \"#utility.yul\":2520:2573   */\n      tag_57\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2510:2573   */\n      swap9\n      pop\n        /* \"#utility.yul\":2466:2583   */\n      pop\n        /* \"#utility.yul\":2622:2624   */\n      0x20\n        /* \"#utility.yul\":2648:2701   */\n      tag_111\n        /* \"#utility.yul\":2693:2700   */\n      dup12\n        /* \"#utility.yul\":2684:2690   */\n      dup3\n        /* \"#utility.yul\":2673:2682   */\n      dup13\n        /* \"#utility.yul\":2669:2691   */\n      add\n        /* \"#utility.yul\":2648:2701   */\n      tag_57\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2638:2701   */\n      swap8\n      pop\n        /* \"#utility.yul\":2593:2711   */\n      pop\n        /* \"#utility.yul\":2750:2752   */\n      0x40\n        /* \"#utility.yul\":2776:2829   */\n      tag_112\n        /* \"#utility.yul\":2821:2828   */\n      dup12\n        /* \"#utility.yul\":2812:2818   */\n      dup3\n        /* \"#utility.yul\":2801:2810   */\n      dup13\n        /* \"#utility.yul\":2797:2819   */\n      add\n        /* \"#utility.yul\":2776:2829   */\n      tag_57\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2766:2829   */\n      swap7\n      pop\n        /* \"#utility.yul\":2721:2839   */\n      pop\n        /* \"#utility.yul\":2878:2880   */\n      0x60\n        /* \"#utility.yul\":2904:2957   */\n      tag_113\n        /* \"#utility.yul\":2949:2956   */\n      dup12\n        /* \"#utility.yul\":2940:2946   */\n      dup3\n        /* \"#utility.yul\":2929:2938   */\n      dup13\n        /* \"#utility.yul\":2925:2947   */\n      add\n        /* \"#utility.yul\":2904:2957   */\n      tag_60\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2894:2957   */\n      swap6\n      pop\n        /* \"#utility.yul\":2849:2967   */\n      pop\n        /* \"#utility.yul\":3034:3037   */\n      0x80\n        /* \"#utility.yul\":3023:3032   */\n      dup10\n        /* \"#utility.yul\":3019:3038   */\n      add\n        /* \"#utility.yul\":3006:3039   */\n      calldataload\n        /* \"#utility.yul\":3066:3084   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3058:3064   */\n      dup2\n        /* \"#utility.yul\":3055:3085   */\n      gt\n        /* \"#utility.yul\":3052:3169   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":3088:3167   */\n      tag_115\n      tag_53\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3052:3169   */\n    tag_114:\n        /* \"#utility.yul\":3201:3265   */\n      tag_116\n        /* \"#utility.yul\":3257:3264   */\n      dup12\n        /* \"#utility.yul\":3248:3254   */\n      dup3\n        /* \"#utility.yul\":3237:3246   */\n      dup13\n        /* \"#utility.yul\":3233:3255   */\n      add\n        /* \"#utility.yul\":3201:3265   */\n      tag_64\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3183:3265   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":2977:3275   */\n      pop\n        /* \"#utility.yul\":3342:3345   */\n      0xa0\n        /* \"#utility.yul\":3331:3340   */\n      dup10\n        /* \"#utility.yul\":3327:3346   */\n      add\n        /* \"#utility.yul\":3314:3347   */\n      calldataload\n        /* \"#utility.yul\":3374:3392   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3366:3372   */\n      dup2\n        /* \"#utility.yul\":3363:3393   */\n      gt\n        /* \"#utility.yul\":3360:3477   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":3396:3475   */\n      tag_118\n      tag_53\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":3360:3477   */\n    tag_117:\n        /* \"#utility.yul\":3509:3573   */\n      tag_119\n        /* \"#utility.yul\":3565:3572   */\n      dup12\n        /* \"#utility.yul\":3556:3562   */\n      dup3\n        /* \"#utility.yul\":3545:3554   */\n      dup13\n        /* \"#utility.yul\":3541:3563   */\n      add\n        /* \"#utility.yul\":3509:3573   */\n      tag_64\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3491:3573   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3285:3583   */\n      pop\n        /* \"#utility.yul\":2137:3590   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3596:3925   */\n    tag_19:\n        /* \"#utility.yul\":3655:3661   */\n      0x00\n        /* \"#utility.yul\":3704:3706   */\n      0x20\n        /* \"#utility.yul\":3692:3701   */\n      dup3\n        /* \"#utility.yul\":3683:3690   */\n      dup5\n        /* \"#utility.yul\":3679:3702   */\n      sub\n        /* \"#utility.yul\":3675:3707   */\n      slt\n        /* \"#utility.yul\":3672:3791   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":3710:3789   */\n      tag_122\n      tag_52\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":3672:3791   */\n    tag_121:\n        /* \"#utility.yul\":3830:3831   */\n      0x00\n        /* \"#utility.yul\":3855:3908   */\n      tag_123\n        /* \"#utility.yul\":3900:3907   */\n      dup5\n        /* \"#utility.yul\":3891:3897   */\n      dup3\n        /* \"#utility.yul\":3880:3889   */\n      dup6\n        /* \"#utility.yul\":3876:3898   */\n      add\n        /* \"#utility.yul\":3855:3908   */\n      tag_57\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3845:3908   */\n      swap2\n      pop\n        /* \"#utility.yul\":3801:3918   */\n      pop\n        /* \"#utility.yul\":3596:3925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3931:4049   */\n    tag_65:\n        /* \"#utility.yul\":4018:4042   */\n      tag_125\n        /* \"#utility.yul\":4036:4041   */\n      dup2\n        /* \"#utility.yul\":4018:4042   */\n      tag_58\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":4013:4016   */\n      dup3\n        /* \"#utility.yul\":4006:4043   */\n      mstore\n        /* \"#utility.yul\":3931:4049   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4055:4277   */\n    tag_22:\n        /* \"#utility.yul\":4148:4152   */\n      0x00\n        /* \"#utility.yul\":4186:4188   */\n      0x20\n        /* \"#utility.yul\":4175:4184   */\n      dup3\n        /* \"#utility.yul\":4171:4189   */\n      add\n        /* \"#utility.yul\":4163:4189   */\n      swap1\n      pop\n        /* \"#utility.yul\":4199:4270   */\n      tag_127\n        /* \"#utility.yul\":4267:4268   */\n      0x00\n        /* \"#utility.yul\":4256:4265   */\n      dup4\n        /* \"#utility.yul\":4252:4269   */\n      add\n        /* \"#utility.yul\":4243:4249   */\n      dup5\n        /* \"#utility.yul\":4199:4270   */\n      tag_65\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":4055:4277   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4283:4463   */\n    tag_66:\n        /* \"#utility.yul\":4331:4408   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4328:4329   */\n      0x00\n        /* \"#utility.yul\":4321:4409   */\n      mstore\n        /* \"#utility.yul\":4428:4432   */\n      0x11\n        /* \"#utility.yul\":4425:4426   */\n      0x04\n        /* \"#utility.yul\":4418:4433   */\n      mstore\n        /* \"#utility.yul\":4452:4456   */\n      0x24\n        /* \"#utility.yul\":4449:4450   */\n      0x00\n        /* \"#utility.yul\":4442:4457   */\n      revert\n        /* \"#utility.yul\":4469:4660   */\n    tag_29:\n        /* \"#utility.yul\":4509:4512   */\n      0x00\n        /* \"#utility.yul\":4528:4548   */\n      tag_130\n        /* \"#utility.yul\":4546:4547   */\n      dup3\n        /* \"#utility.yul\":4528:4548   */\n      tag_58\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4523:4548   */\n      swap2\n      pop\n        /* \"#utility.yul\":4562:4582   */\n      tag_131\n        /* \"#utility.yul\":4580:4581   */\n      dup4\n        /* \"#utility.yul\":4562:4582   */\n      tag_58\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":4557:4582   */\n      swap3\n      pop\n        /* \"#utility.yul\":4605:4606   */\n      dup3\n        /* \"#utility.yul\":4602:4603   */\n      dup3\n        /* \"#utility.yul\":4598:4607   */\n      add\n        /* \"#utility.yul\":4591:4607   */\n      swap1\n      pop\n        /* \"#utility.yul\":4626:4629   */\n      dup1\n        /* \"#utility.yul\":4623:4624   */\n      dup3\n        /* \"#utility.yul\":4620:4630   */\n      gt\n        /* \"#utility.yul\":4617:4653   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":4633:4651   */\n      tag_133\n      tag_66\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":4617:4653   */\n    tag_132:\n        /* \"#utility.yul\":4469:4660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4666:4835   */\n    tag_67:\n        /* \"#utility.yul\":4750:4761   */\n      0x00\n        /* \"#utility.yul\":4784:4790   */\n      dup3\n        /* \"#utility.yul\":4779:4782   */\n      dup3\n        /* \"#utility.yul\":4772:4791   */\n      mstore\n        /* \"#utility.yul\":4824:4828   */\n      0x20\n        /* \"#utility.yul\":4819:4822   */\n      dup3\n        /* \"#utility.yul\":4815:4829   */\n      add\n        /* \"#utility.yul\":4800:4829   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4841:5005   */\n    tag_68:\n        /* \"#utility.yul\":4981:4997   */\n      0x746f6b656e207265636569766564000000000000000000000000000000000000\n        /* \"#utility.yul\":4977:4978   */\n      0x00\n        /* \"#utility.yul\":4969:4975   */\n      dup3\n        /* \"#utility.yul\":4965:4979   */\n      add\n        /* \"#utility.yul\":4958:4998   */\n      mstore\n        /* \"#utility.yul\":4841:5005   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5011:5377   */\n    tag_69:\n        /* \"#utility.yul\":5153:5156   */\n      0x00\n        /* \"#utility.yul\":5174:5241   */\n      tag_137\n        /* \"#utility.yul\":5238:5240   */\n      0x0e\n        /* \"#utility.yul\":5233:5236   */\n      dup4\n        /* \"#utility.yul\":5174:5241   */\n      tag_67\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":5167:5241   */\n      swap2\n      pop\n        /* \"#utility.yul\":5250:5343   */\n      tag_138\n        /* \"#utility.yul\":5339:5342   */\n      dup3\n        /* \"#utility.yul\":5250:5343   */\n      tag_68\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":5368:5370   */\n      0x20\n        /* \"#utility.yul\":5363:5366   */\n      dup3\n        /* \"#utility.yul\":5359:5371   */\n      add\n        /* \"#utility.yul\":5352:5371   */\n      swap1\n      pop\n        /* \"#utility.yul\":5011:5377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5383:5912   */\n    tag_31:\n        /* \"#utility.yul\":5577:5581   */\n      0x00\n        /* \"#utility.yul\":5615:5617   */\n      0x40\n        /* \"#utility.yul\":5604:5613   */\n      dup3\n        /* \"#utility.yul\":5600:5618   */\n      add\n        /* \"#utility.yul\":5592:5618   */\n      swap1\n      pop\n        /* \"#utility.yul\":5628:5699   */\n      tag_140\n        /* \"#utility.yul\":5696:5697   */\n      0x00\n        /* \"#utility.yul\":5685:5694   */\n      dup4\n        /* \"#utility.yul\":5681:5698   */\n      add\n        /* \"#utility.yul\":5672:5678   */\n      dup5\n        /* \"#utility.yul\":5628:5699   */\n      tag_65\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":5746:5755   */\n      dup2\n        /* \"#utility.yul\":5740:5744   */\n      dup2\n        /* \"#utility.yul\":5736:5756   */\n      sub\n        /* \"#utility.yul\":5731:5733   */\n      0x20\n        /* \"#utility.yul\":5720:5729   */\n      dup4\n        /* \"#utility.yul\":5716:5734   */\n      add\n        /* \"#utility.yul\":5709:5757   */\n      mstore\n        /* \"#utility.yul\":5774:5905   */\n      tag_141\n        /* \"#utility.yul\":5900:5904   */\n      dup2\n        /* \"#utility.yul\":5774:5905   */\n      tag_69\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":5766:5905   */\n      swap1\n      pop\n        /* \"#utility.yul\":5383:5912   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5918:6080   */\n    tag_70:\n        /* \"#utility.yul\":6058:6072   */\n      0x6e6f207065726d6973696f6e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":6054:6055   */\n      0x00\n        /* \"#utility.yul\":6046:6052   */\n      dup3\n        /* \"#utility.yul\":6042:6056   */\n      add\n        /* \"#utility.yul\":6035:6073   */\n      mstore\n        /* \"#utility.yul\":5918:6080   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6086:6452   */\n    tag_71:\n        /* \"#utility.yul\":6228:6231   */\n      0x00\n        /* \"#utility.yul\":6249:6316   */\n      tag_144\n        /* \"#utility.yul\":6313:6315   */\n      0x0c\n        /* \"#utility.yul\":6308:6311   */\n      dup4\n        /* \"#utility.yul\":6249:6316   */\n      tag_67\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":6242:6316   */\n      swap2\n      pop\n        /* \"#utility.yul\":6325:6418   */\n      tag_145\n        /* \"#utility.yul\":6414:6417   */\n      dup3\n        /* \"#utility.yul\":6325:6418   */\n      tag_70\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":6443:6445   */\n      0x20\n        /* \"#utility.yul\":6438:6441   */\n      dup3\n        /* \"#utility.yul\":6434:6446   */\n      add\n        /* \"#utility.yul\":6427:6446   */\n      swap1\n      pop\n        /* \"#utility.yul\":6086:6452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6458:6877   */\n    tag_35:\n        /* \"#utility.yul\":6624:6628   */\n      0x00\n        /* \"#utility.yul\":6662:6664   */\n      0x20\n        /* \"#utility.yul\":6651:6660   */\n      dup3\n        /* \"#utility.yul\":6647:6665   */\n      add\n        /* \"#utility.yul\":6639:6665   */\n      swap1\n      pop\n        /* \"#utility.yul\":6711:6720   */\n      dup2\n        /* \"#utility.yul\":6705:6709   */\n      dup2\n        /* \"#utility.yul\":6701:6721   */\n      sub\n        /* \"#utility.yul\":6697:6698   */\n      0x00\n        /* \"#utility.yul\":6686:6695   */\n      dup4\n        /* \"#utility.yul\":6682:6699   */\n      add\n        /* \"#utility.yul\":6675:6722   */\n      mstore\n        /* \"#utility.yul\":6739:6870   */\n      tag_147\n        /* \"#utility.yul\":6865:6869   */\n      dup2\n        /* \"#utility.yul\":6739:6870   */\n      tag_71\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":6731:6870   */\n      swap1\n      pop\n        /* \"#utility.yul\":6458:6877   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6883:7001   */\n    tag_72:\n        /* \"#utility.yul\":6970:6994   */\n      tag_149\n        /* \"#utility.yul\":6988:6993   */\n      dup2\n        /* \"#utility.yul\":6970:6994   */\n      tag_55\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":6965:6968   */\n      dup3\n        /* \"#utility.yul\":6958:6995   */\n      mstore\n        /* \"#utility.yul\":6883:7001   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7007:7229   */\n    tag_37:\n        /* \"#utility.yul\":7100:7104   */\n      0x00\n        /* \"#utility.yul\":7138:7140   */\n      0x20\n        /* \"#utility.yul\":7127:7136   */\n      dup3\n        /* \"#utility.yul\":7123:7141   */\n      add\n        /* \"#utility.yul\":7115:7141   */\n      swap1\n      pop\n        /* \"#utility.yul\":7151:7222   */\n      tag_151\n        /* \"#utility.yul\":7219:7220   */\n      0x00\n        /* \"#utility.yul\":7208:7217   */\n      dup4\n        /* \"#utility.yul\":7204:7221   */\n      add\n        /* \"#utility.yul\":7195:7201   */\n      dup5\n        /* \"#utility.yul\":7151:7222   */\n      tag_72\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":7007:7229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7235:7378   */\n    tag_73:\n        /* \"#utility.yul\":7292:7297   */\n      0x00\n        /* \"#utility.yul\":7323:7329   */\n      dup2\n        /* \"#utility.yul\":7317:7330   */\n      mload\n        /* \"#utility.yul\":7308:7330   */\n      swap1\n      pop\n        /* \"#utility.yul\":7339:7372   */\n      tag_153\n        /* \"#utility.yul\":7366:7371   */\n      dup2\n        /* \"#utility.yul\":7339:7372   */\n      tag_59\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":7235:7378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7384:7735   */\n    tag_41:\n        /* \"#utility.yul\":7454:7460   */\n      0x00\n        /* \"#utility.yul\":7503:7505   */\n      0x20\n        /* \"#utility.yul\":7491:7500   */\n      dup3\n        /* \"#utility.yul\":7482:7489   */\n      dup5\n        /* \"#utility.yul\":7478:7501   */\n      sub\n        /* \"#utility.yul\":7474:7506   */\n      slt\n        /* \"#utility.yul\":7471:7590   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":7509:7588   */\n      tag_156\n      tag_52\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":7471:7590   */\n    tag_155:\n        /* \"#utility.yul\":7629:7630   */\n      0x00\n        /* \"#utility.yul\":7654:7718   */\n      tag_157\n        /* \"#utility.yul\":7710:7717   */\n      dup5\n        /* \"#utility.yul\":7701:7707   */\n      dup3\n        /* \"#utility.yul\":7690:7699   */\n      dup6\n        /* \"#utility.yul\":7686:7708   */\n      add\n        /* \"#utility.yul\":7654:7718   */\n      tag_73\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":7644:7718   */\n      swap2\n      pop\n        /* \"#utility.yul\":7600:7728   */\n      pop\n        /* \"#utility.yul\":7384:7735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7741:7909   */\n    tag_74:\n        /* \"#utility.yul\":7824:7835   */\n      0x00\n        /* \"#utility.yul\":7858:7864   */\n      dup3\n        /* \"#utility.yul\":7853:7856   */\n      dup3\n        /* \"#utility.yul\":7846:7865   */\n      mstore\n        /* \"#utility.yul\":7898:7902   */\n      0x20\n        /* \"#utility.yul\":7893:7896   */\n      dup3\n        /* \"#utility.yul\":7889:7903   */\n      add\n        /* \"#utility.yul\":7874:7903   */\n      swap1\n      pop\n        /* \"#utility.yul\":7741:7909   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7915:8029   */\n    tag_75:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8035:8397   */\n    tag_76:\n        /* \"#utility.yul\":8176:8179   */\n      0x00\n        /* \"#utility.yul\":8197:8262   */\n      tag_161\n        /* \"#utility.yul\":8260:8261   */\n      0x00\n        /* \"#utility.yul\":8255:8258   */\n      dup4\n        /* \"#utility.yul\":8197:8262   */\n      tag_74\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":8190:8262   */\n      swap2\n      pop\n        /* \"#utility.yul\":8271:8364   */\n      tag_162\n        /* \"#utility.yul\":8360:8363   */\n      dup3\n        /* \"#utility.yul\":8271:8364   */\n      tag_75\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":8389:8390   */\n      0x00\n        /* \"#utility.yul\":8384:8387   */\n      dup3\n        /* \"#utility.yul\":8380:8391   */\n      add\n        /* \"#utility.yul\":8373:8391   */\n      swap1\n      pop\n        /* \"#utility.yul\":8035:8397   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8403:8930   */\n    tag_43:\n        /* \"#utility.yul\":8596:8600   */\n      0x00\n        /* \"#utility.yul\":8634:8636   */\n      0x40\n        /* \"#utility.yul\":8623:8632   */\n      dup3\n        /* \"#utility.yul\":8619:8637   */\n      add\n        /* \"#utility.yul\":8611:8637   */\n      swap1\n      pop\n        /* \"#utility.yul\":8647:8718   */\n      tag_164\n        /* \"#utility.yul\":8715:8716   */\n      0x00\n        /* \"#utility.yul\":8704:8713   */\n      dup4\n        /* \"#utility.yul\":8700:8717   */\n      add\n        /* \"#utility.yul\":8691:8697   */\n      dup5\n        /* \"#utility.yul\":8647:8718   */\n      tag_65\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":8765:8774   */\n      dup2\n        /* \"#utility.yul\":8759:8763   */\n      dup2\n        /* \"#utility.yul\":8755:8775   */\n      sub\n        /* \"#utility.yul\":8750:8752   */\n      0x20\n        /* \"#utility.yul\":8739:8748   */\n      dup4\n        /* \"#utility.yul\":8735:8753   */\n      add\n        /* \"#utility.yul\":8728:8776   */\n      mstore\n        /* \"#utility.yul\":8793:8923   */\n      tag_165\n        /* \"#utility.yul\":8918:8922   */\n      dup2\n        /* \"#utility.yul\":8793:8923   */\n      tag_76\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":8785:8923   */\n      swap1\n      pop\n        /* \"#utility.yul\":8403:8930   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8936:9099   */\n    tag_77:\n        /* \"#utility.yul\":9076:9091   */\n      0x746f6b656e20746f2073656e6400000000000000000000000000000000000000\n        /* \"#utility.yul\":9072:9073   */\n      0x00\n        /* \"#utility.yul\":9064:9070   */\n      dup3\n        /* \"#utility.yul\":9060:9074   */\n      add\n        /* \"#utility.yul\":9053:9092   */\n      mstore\n        /* \"#utility.yul\":8936:9099   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9105:9471   */\n    tag_78:\n        /* \"#utility.yul\":9247:9250   */\n      0x00\n        /* \"#utility.yul\":9268:9335   */\n      tag_168\n        /* \"#utility.yul\":9332:9334   */\n      0x0d\n        /* \"#utility.yul\":9327:9330   */\n      dup4\n        /* \"#utility.yul\":9268:9335   */\n      tag_67\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":9261:9335   */\n      swap2\n      pop\n        /* \"#utility.yul\":9344:9437   */\n      tag_169\n        /* \"#utility.yul\":9433:9436   */\n      dup3\n        /* \"#utility.yul\":9344:9437   */\n      tag_77\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":9462:9464   */\n      0x20\n        /* \"#utility.yul\":9457:9460   */\n      dup3\n        /* \"#utility.yul\":9453:9465   */\n      add\n        /* \"#utility.yul\":9446:9465   */\n      swap1\n      pop\n        /* \"#utility.yul\":9105:9471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9477:10006   */\n    tag_49:\n        /* \"#utility.yul\":9671:9675   */\n      0x00\n        /* \"#utility.yul\":9709:9711   */\n      0x40\n        /* \"#utility.yul\":9698:9707   */\n      dup3\n        /* \"#utility.yul\":9694:9712   */\n      add\n        /* \"#utility.yul\":9686:9712   */\n      swap1\n      pop\n        /* \"#utility.yul\":9722:9793   */\n      tag_171\n        /* \"#utility.yul\":9790:9791   */\n      0x00\n        /* \"#utility.yul\":9779:9788   */\n      dup4\n        /* \"#utility.yul\":9775:9792   */\n      add\n        /* \"#utility.yul\":9766:9772   */\n      dup5\n        /* \"#utility.yul\":9722:9793   */\n      tag_65\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":9840:9849   */\n      dup2\n        /* \"#utility.yul\":9834:9838   */\n      dup2\n        /* \"#utility.yul\":9830:9850   */\n      sub\n        /* \"#utility.yul\":9825:9827   */\n      0x20\n        /* \"#utility.yul\":9814:9823   */\n      dup4\n        /* \"#utility.yul\":9810:9828   */\n      add\n        /* \"#utility.yul\":9803:9851   */\n      mstore\n        /* \"#utility.yul\":9868:9999   */\n      tag_172\n        /* \"#utility.yul\":9994:9998   */\n      dup2\n        /* \"#utility.yul\":9868:9999   */\n      tag_78\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":9860:9999   */\n      swap1\n      pop\n        /* \"#utility.yul\":9477:10006   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d91ea7eb97eecf18c4dbe89503d7dfc6f25046d48d2effc6be61cf5d2ee12ce164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_395": {
									"entryPoint": null,
									"id": 395,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC777_$162_fromMemory": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC777_$162_fromMemory": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC777_$162": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC777_$162": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2185:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "667:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "649:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "638:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC777_$162",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "610:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "620:7:5",
														"type": ""
													}
												],
												"src": "568:111:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "743:94:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "815:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "824:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "827:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "817:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "817:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "817:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "766:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "806:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC777_$162",
																					"nodeType": "YulIdentifier",
																					"src": "773:32:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "773:39:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "763:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:50:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "756:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:58:5"
															},
															"nodeType": "YulIf",
															"src": "753:78:5"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC777_$162",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "736:5:5",
														"type": ""
													}
												],
												"src": "685:152:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "921:95:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "931:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "946:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "940:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "940:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "931:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1004:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC777_$162",
																	"nodeType": "YulIdentifier",
																	"src": "962:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "962:48:5"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC777_$162_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "899:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "907:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "915:5:5",
														"type": ""
													}
												],
												"src": "843:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:289:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1160:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1162:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1162:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1162:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1135:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1144:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1131:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1156:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1127:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:32:5"
															},
															"nodeType": "YulIf",
															"src": "1124:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1253:143:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1268:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1282:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1272:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1297:89:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1358:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1369:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1354:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1354:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1378:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC777_$162_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1307:46:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1307:79:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1297:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC777_$162_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1084:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1095:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1107:6:5",
														"type": ""
													}
												],
												"src": "1022:381:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1491:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1514:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1496:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1496:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1484:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1484:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1462:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1469:3:5",
														"type": ""
													}
												],
												"src": "1409:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1578:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1599:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1588:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1570:7:5",
														"type": ""
													}
												],
												"src": "1533:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1681:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1698:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1721:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "1703:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1703:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1691:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1691:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1691:37:5"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1669:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1676:3:5",
														"type": ""
													}
												],
												"src": "1616:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1894:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1904:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1916:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1927:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1912:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1904:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1984:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2008:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1993:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1993:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1940:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1940:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2078:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2089:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2074:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2074:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2021:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2021:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2021:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2147:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2160:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2171:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2156:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2156:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2103:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2103:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2103:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1850:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1862:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1870:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1878:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1889:4:5",
														"type": ""
													}
												],
												"src": "1740:442:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC777_$162(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC777_$162(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC777_$162(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC777_$162_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC777_$162(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC777_$162_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC777_$162_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000cb938038062000cb983398181016040528101906200003791906200028c565b731820a4b7618bde71dce8cdc73aab6c95905fad2473ffffffffffffffffffffffffffffffffffffffff166329965a1d307f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895306040518463ffffffff1660e01b8152600401620000aa93929190620002ea565b600060405180830381600087803b158015620000c557600080fd5b505af1158015620000da573d6000803e3d6000fd5b50505050731820a4b7618bde71dce8cdc73aab6c95905fad2473ffffffffffffffffffffffffffffffffffffffff166329965a1d307fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b306040518463ffffffff1660e01b81526004016200015193929190620002ea565b600060405180830381600087803b1580156200016c57600080fd5b505af115801562000181573d6000803e3d6000fd5b5050505033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000327565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002408262000213565b9050919050565b6000620002548262000233565b9050919050565b620002668162000247565b81146200027257600080fd5b50565b60008151905062000286816200025b565b92915050565b600060208284031215620002a557620002a46200020e565b5b6000620002b58482850162000275565b91505092915050565b620002c98162000233565b82525050565b6000819050919050565b620002e481620002cf565b82525050565b6000606082019050620003016000830186620002be565b620003106020830185620002d9565b6200031f6040830184620002be565b949350505050565b61098280620003376000396000f3fe608060405234801561001057600080fd5b50600436106100565760003560e01c806223de291461005b57806344df8e701461007757806375ab9782146100815780638170eace1461009d578063e89081f8146100cd575b600080fd5b61007560048036038101906100709190610581565b6100fd565b005b61007f6101d8565b005b61009b60048036038101906100969190610581565b610398565b005b6100b760048036038101906100b29190610650565b61041e565b6040516100c4919061068c565b60405180910390f35b6100e760048036038101906100e29190610650565b610466565b6040516100f4919061068c565b60405180910390f35b846000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461014b91906106d6565b925050819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f40079291ab55cc19bc58cf71f199a7dbea42e6ae0a5df85085cfd005989882e1886040516101c69190610767565b60405180910390a45050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025f906107e1565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102c59190610810565b602060405180830381865afa1580156102e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103069190610840565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9d9303826040518263ffffffff1660e01b815260040161036391906108a4565b600060405180830381600087803b15801561037d57600080fd5b505af1158015610391573d6000803e3d6000fd5b5050505050565b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f76a1164d576fc7c969d03ca591db9973dcf556dea68edfb7cc163fdce887d39b8860405161040c919061091e565b60405180910390a45050505050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006020528060005260406000206000915090505481565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104b382610488565b9050919050565b6104c3816104a8565b81146104ce57600080fd5b50565b6000813590506104e0816104ba565b92915050565b6000819050919050565b6104f9816104e6565b811461050457600080fd5b50565b600081359050610516816104f0565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126105415761054061051c565b5b8235905067ffffffffffffffff81111561055e5761055d610521565b5b60208301915083600182028301111561057a57610579610526565b5b9250929050565b60008060008060008060008060c0898b0312156105a1576105a061047e565b5b60006105af8b828c016104d1565b98505060206105c08b828c016104d1565b97505060406105d18b828c016104d1565b96505060606105e28b828c01610507565b955050608089013567ffffffffffffffff81111561060357610602610483565b5b61060f8b828c0161052b565b945094505060a089013567ffffffffffffffff81111561063257610631610483565b5b61063e8b828c0161052b565b92509250509295985092959890939650565b6000602082840312156106665761066561047e565b5b6000610674848285016104d1565b91505092915050565b610686816104e6565b82525050565b60006020820190506106a1600083018461067d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106e1826104e6565b91506106ec836104e6565b9250828201905080821115610704576107036106a7565b5b92915050565b600082825260208201905092915050565b7f746f6b656e207265636569766564000000000000000000000000000000000000600082015250565b6000610751600e8361070a565b915061075c8261071b565b602082019050919050565b600060408201905061077c600083018461067d565b818103602083015261078d81610744565b905092915050565b7f6e6f207065726d6973696f6e0000000000000000000000000000000000000000600082015250565b60006107cb600c8361070a565b91506107d682610795565b602082019050919050565b600060208201905081810360008301526107fa816107be565b9050919050565b61080a816104a8565b82525050565b60006020820190506108256000830184610801565b92915050565b60008151905061083a816104f0565b92915050565b6000602082840312156108565761085561047e565b5b60006108648482850161082b565b91505092915050565b600082825260208201905092915050565b50565b600061088e60008361086d565b91506108998261087e565b600082019050919050565b60006040820190506108b9600083018461067d565b81810360208301526108ca81610881565b905092915050565b7f746f6b656e20746f2073656e6400000000000000000000000000000000000000600082015250565b6000610908600d8361070a565b9150610913826108d2565b602082019050919050565b6000604082019050610933600083018461067d565b8181036020830152610944816108fb565b90509291505056fea2646970667358221220d91ea7eb97eecf18c4dbe89503d7dfc6f25046d48d2effc6be61cf5d2ee12ce164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCB9 CODESIZE SUB DUP1 PUSH3 0xCB9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x28C JUMP JUMPDEST PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29965A1D ADDRESS PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xAA SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0xDA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29965A1D ADDRESS PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B ADDRESS PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x151 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x181 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x327 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x240 DUP3 PUSH3 0x213 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x254 DUP3 PUSH3 0x233 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x266 DUP2 PUSH3 0x247 JUMP JUMPDEST DUP2 EQ PUSH3 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x286 DUP2 PUSH3 0x25B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2A5 JUMPI PUSH3 0x2A4 PUSH3 0x20E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2B5 DUP5 DUP3 DUP6 ADD PUSH3 0x275 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2C9 DUP2 PUSH3 0x233 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2E4 DUP2 PUSH3 0x2CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x301 PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x2BE JUMP JUMPDEST PUSH3 0x310 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x2D9 JUMP JUMPDEST PUSH3 0x31F PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x2BE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x982 DUP1 PUSH3 0x337 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x23DE29 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x44DF8E70 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x75AB9782 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8170EACE EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xE89081F8 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x581 JUMP JUMPDEST PUSH2 0xFD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x1D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x581 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP5 PUSH1 0x0 DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x6D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x40079291AB55CC19BC58CF71F199A7DBEA42E6AE0A5DF85085CFD005989882E1 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x840 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFE9D9303 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x391 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x76A1164D576FC7C969D03CA591DB9973DCF556DEA68EDFB7CC163FDCE887D39B DUP9 PUSH1 0x40 MLOAD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP3 PUSH2 0x488 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C3 DUP2 PUSH2 0x4A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4E0 DUP2 PUSH2 0x4BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F9 DUP2 PUSH2 0x4E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x516 DUP2 PUSH2 0x4F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x541 JUMPI PUSH2 0x540 PUSH2 0x51C JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x55E JUMPI PUSH2 0x55D PUSH2 0x521 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x57A JUMPI PUSH2 0x579 PUSH2 0x526 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x5A1 JUMPI PUSH2 0x5A0 PUSH2 0x47E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5AF DUP12 DUP3 DUP13 ADD PUSH2 0x4D1 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x5C0 DUP12 DUP3 DUP13 ADD PUSH2 0x4D1 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x5D1 DUP12 DUP3 DUP13 ADD PUSH2 0x4D1 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x5E2 DUP12 DUP3 DUP13 ADD PUSH2 0x507 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x603 JUMPI PUSH2 0x602 PUSH2 0x483 JUMP JUMPDEST JUMPDEST PUSH2 0x60F DUP12 DUP3 DUP13 ADD PUSH2 0x52B JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x632 JUMPI PUSH2 0x631 PUSH2 0x483 JUMP JUMPDEST JUMPDEST PUSH2 0x63E DUP12 DUP3 DUP13 ADD PUSH2 0x52B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x666 JUMPI PUSH2 0x665 PUSH2 0x47E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x674 DUP5 DUP3 DUP6 ADD PUSH2 0x4D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x686 DUP2 PUSH2 0x4E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6A1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x67D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6E1 DUP3 PUSH2 0x4E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x6EC DUP4 PUSH2 0x4E6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x704 JUMPI PUSH2 0x703 PUSH2 0x6A7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x746F6B656E207265636569766564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x751 PUSH1 0xE DUP4 PUSH2 0x70A JUMP JUMPDEST SWAP2 POP PUSH2 0x75C DUP3 PUSH2 0x71B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x77C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x67D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x78D DUP2 PUSH2 0x744 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F207065726D6973696F6E0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CB PUSH1 0xC DUP4 PUSH2 0x70A JUMP JUMPDEST SWAP2 POP PUSH2 0x7D6 DUP3 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7FA DUP2 PUSH2 0x7BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80A DUP2 PUSH2 0x4A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x825 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x801 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x83A DUP2 PUSH2 0x4F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x856 JUMPI PUSH2 0x855 PUSH2 0x47E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x864 DUP5 DUP3 DUP6 ADD PUSH2 0x82B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88E PUSH1 0x0 DUP4 PUSH2 0x86D JUMP JUMPDEST SWAP2 POP PUSH2 0x899 DUP3 PUSH2 0x87E JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x8B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x67D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x8CA DUP2 PUSH2 0x881 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x746F6B656E20746F2073656E6400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x908 PUSH1 0xD DUP4 PUSH2 0x70A JUMP JUMPDEST SWAP2 POP PUSH2 0x913 DUP3 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x933 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x67D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x944 DUP2 PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0x1E 0xA7 0xEB SWAP8 0xEE 0xCF XOR 0xC4 0xDB 0xE8 SWAP6 SUB 0xD7 0xDF 0xC6 CALLCODE POP CHAINID 0xD4 DUP14 0x2E SELFDESTRUCT 0xC6 0xBE PUSH2 0xCF5D 0x2E 0xE1 0x2C 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "352:2086:4:-:0;;;1095:315;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;850:42;1132:41;;;1182:4;957:31;1228:4;1132:102;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;850:42;1244:41;;;1294:4;1054:34;1343:4;1244:105;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1369:10;1360:6;;:19;;;;;;;;;;;;;;;;;;1398:5;1389:6;;:14;;;;;;;;;;;;;;;;;;1095:315;352:2086;;88:117:5;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:111::-;620:7;649:24;667:5;649:24;:::i;:::-;638:35;;568:111;;;:::o;685:152::-;773:39;806:5;773:39;:::i;:::-;766:5;763:50;753:78;;827:1;824;817:12;753:78;685:152;:::o;843:173::-;915:5;946:6;940:13;931:22;;962:48;1004:5;962:48;:::i;:::-;843:173;;;;:::o;1022:381::-;1107:6;1156:2;1144:9;1135:7;1131:23;1127:32;1124:119;;;1162:79;;:::i;:::-;1124:119;1282:1;1307:79;1378:7;1369:6;1358:9;1354:22;1307:79;:::i;:::-;1297:89;;1253:143;1022:381;;;;:::o;1409:118::-;1496:24;1514:5;1496:24;:::i;:::-;1491:3;1484:37;1409:118;;:::o;1533:77::-;1570:7;1599:5;1588:16;;1533:77;;;:::o;1616:118::-;1703:24;1721:5;1703:24;:::i;:::-;1698:3;1691:37;1616:118;;:::o;1740:442::-;1889:4;1927:2;1916:9;1912:18;1904:26;;1940:71;2008:1;1997:9;1993:17;1984:6;1940:71;:::i;:::-;2021:72;2089:2;2078:9;2074:18;2065:6;2021:72;:::i;:::-;2103;2171:2;2160:9;2156:18;2147:6;2103:72;:::i;:::-;1740:442;;;;;;:::o;352:2086:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@burn_490": {
									"entryPoint": 472,
									"id": 490,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@givers_330": {
									"entryPoint": 1126,
									"id": 330,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@showGive_407": {
									"entryPoint": 1054,
									"id": 407,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokensReceived_437": {
									"entryPoint": 253,
									"id": 437,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@tokensToSend_461": {
									"entryPoint": 920,
									"id": 461,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 1323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 1409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_957565bfa95a89eab0addc1e72a2c28b5ad17773f21c7c7c29c86526b05159cd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a3455eecf05d88eb24388b0ef355bcd38fd16864f5924c6c44d91a8814b99d80_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d9c87d73bd595fd3ff45f66221ff0b28aa4bc82b6d9329c6d105c3f9b4748806_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9c87d73bd595fd3ff45f66221ff0b28aa4bc82b6d9329c6d105c3f9b4748806__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_957565bfa95a89eab0addc1e72a2c28b5ad17773f21c7c7c29c86526b05159cd__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_a3455eecf05d88eb24388b0ef355bcd38fd16864f5924c6c44d91a8814b99d80__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1703,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 1313,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1308,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1318,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1155,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_957565bfa95a89eab0addc1e72a2c28b5ad17773f21c7c7c29c86526b05159cd": {
									"entryPoint": 2258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a3455eecf05d88eb24388b0ef355bcd38fd16864f5924c6c44d91a8814b99d80": {
									"entryPoint": 1819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 2174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d9c87d73bd595fd3ff45f66221ff0b28aa4bc82b6d9329c6d105c3f9b4748806": {
									"entryPoint": 1941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10009:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:5",
														"type": ""
													}
												],
												"src": "696:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:5",
														"type": ""
													}
												],
												"src": "841:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:5"
															},
															"nodeType": "YulIf",
															"src": "977:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:5",
														"type": ""
													}
												],
												"src": "924:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:5",
														"type": ""
													}
												],
												"src": "1052:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1286:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1303:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1296:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1197:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1409:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1419:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1419:12:5"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "1320:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1532:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1549:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1542:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1542:12:5"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "1443:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1653:478:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1702:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1704:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1704:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1704:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1681:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1689:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1677:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1677:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1696:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1673:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1673:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1666:35:5"
															},
															"nodeType": "YulIf",
															"src": "1663:122:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1794:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:20:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1867:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "1869:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1869:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1869:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1839:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1847:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1836:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:30:5"
															},
															"nodeType": "YulIf",
															"src": "1833:117:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1959:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1975:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1971:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1971:17:5"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "1959:8:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2042:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "2044:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2044:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2044:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "2007:8:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2021:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2029:4:5",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "2017:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2017:17:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2003:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2003:32:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2037:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2000:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:41:5"
															},
															"nodeType": "YulIf",
															"src": "1997:128:5"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1620:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1628:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "1636:8:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1646:6:5",
														"type": ""
													}
												],
												"src": "1579:552:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2326:1264:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2373:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2375:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2375:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2347:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2356:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2343:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2343:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2368:3:5",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2339:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:33:5"
															},
															"nodeType": "YulIf",
															"src": "2336:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2466:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2481:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2495:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2485:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2510:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2545:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2556:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2541:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2541:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2565:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2520:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2520:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2510:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2593:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2608:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2622:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2612:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2638:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2673:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2684:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2669:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2669:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2693:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2648:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2648:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2638:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2721:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2736:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2750:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2740:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2766:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2801:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2812:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2797:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2797:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2821:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2776:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2776:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2766:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2849:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2864:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2878:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2868:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2894:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2929:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2940:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2925:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2925:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2949:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2904:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2904:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2894:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2977:298:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2992:47:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3023:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3034:3:5",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3019:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3019:19:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3006:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:33:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2996:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3086:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3088:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3088:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3088:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3058:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3066:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3055:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3055:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3052:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3183:82:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3237:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3248:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3233:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3233:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3257:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3201:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3201:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3183:6:5"
																		},
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "3191:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3285:298:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3300:47:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3331:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3342:3:5",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3327:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3327:19:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3314:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3314:33:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3304:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3394:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3396:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3396:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3396:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3366:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3374:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3363:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3363:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3360:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3491:82:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3545:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3556:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3541:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3541:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3565:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3509:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3509:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "3491:6:5"
																		},
																		{
																			"name": "value7",
																			"nodeType": "YulIdentifier",
																			"src": "3499:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2240:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2251:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2263:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2271:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2279:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2287:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2295:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2303:6:5",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2311:6:5",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "2319:6:5",
														"type": ""
													}
												],
												"src": "2137:1453:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3662:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3708:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3710:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3710:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3710:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3683:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3692:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3679:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3679:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3704:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3675:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:32:5"
															},
															"nodeType": "YulIf",
															"src": "3672:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3801:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3816:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3830:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3820:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3845:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3880:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3891:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3876:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3876:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3900:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3855:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3855:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3845:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3632:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3643:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3655:6:5",
														"type": ""
													}
												],
												"src": "3596:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3996:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4013:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4036:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4018:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4018:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4006:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4006:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4006:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3984:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3991:3:5",
														"type": ""
													}
												],
												"src": "3931:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4153:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4163:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4175:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4186:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4171:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4163:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4243:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4256:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4267:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4252:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4252:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4199:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4199:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4199:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4125:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4137:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4148:4:5",
														"type": ""
													}
												],
												"src": "4055:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4311:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4328:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4331:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4321:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4321:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4321:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4425:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4428:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4449:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4452:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4442:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4442:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4442:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4283:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4513:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4523:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4546:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4528:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4528:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4523:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4557:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4580:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4562:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4562:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4557:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4591:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4602:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4605:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4598:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4598:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4591:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4631:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4633:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4633:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4633:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4623:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4626:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4620:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4620:10:5"
															},
															"nodeType": "YulIf",
															"src": "4617:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4500:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4503:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4509:3:5",
														"type": ""
													}
												],
												"src": "4469:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4762:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4779:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4784:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4772:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4772:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4800:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4819:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4824:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4815:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4815:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4800:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4734:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4739:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4750:11:5",
														"type": ""
													}
												],
												"src": "4666:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4947:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4969:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4977:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4965:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4965:14:5"
																	},
																	{
																		"hexValue": "746f6b656e207265636569766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4981:16:5",
																		"type": "",
																		"value": "token received"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4958:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4958:40:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4958:40:5"
														}
													]
												},
												"name": "store_literal_in_memory_a3455eecf05d88eb24388b0ef355bcd38fd16864f5924c6c44d91a8814b99d80",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4939:6:5",
														"type": ""
													}
												],
												"src": "4841:164:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5157:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5167:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5233:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5238:2:5",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5174:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5174:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5167:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5339:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a3455eecf05d88eb24388b0ef355bcd38fd16864f5924c6c44d91a8814b99d80",
																	"nodeType": "YulIdentifier",
																	"src": "5250:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5250:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5250:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5352:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5363:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5368:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5359:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5359:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5352:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a3455eecf05d88eb24388b0ef355bcd38fd16864f5924c6c44d91a8814b99d80_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5145:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5153:3:5",
														"type": ""
													}
												],
												"src": "5011:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5582:330:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5592:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5604:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5615:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5592:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5672:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5628:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5628:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5628:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5720:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5731:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5716:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5716:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5740:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5746:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5736:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5736:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5709:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5709:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5709:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5766:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5900:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a3455eecf05d88eb24388b0ef355bcd38fd16864f5924c6c44d91a8814b99d80_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5774:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5774:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5766:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_a3455eecf05d88eb24388b0ef355bcd38fd16864f5924c6c44d91a8814b99d80__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5554:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5566:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5577:4:5",
														"type": ""
													}
												],
												"src": "5383:529:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6024:56:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6046:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6054:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6042:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6042:14:5"
																	},
																	{
																		"hexValue": "6e6f207065726d6973696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6058:14:5",
																		"type": "",
																		"value": "no permision"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6035:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6035:38:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6035:38:5"
														}
													]
												},
												"name": "store_literal_in_memory_d9c87d73bd595fd3ff45f66221ff0b28aa4bc82b6d9329c6d105c3f9b4748806",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6016:6:5",
														"type": ""
													}
												],
												"src": "5918:162:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6232:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6242:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6308:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6313:2:5",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6249:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6249:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6242:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6414:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d9c87d73bd595fd3ff45f66221ff0b28aa4bc82b6d9329c6d105c3f9b4748806",
																	"nodeType": "YulIdentifier",
																	"src": "6325:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6325:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6325:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6427:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6438:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6443:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6434:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6434:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6427:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d9c87d73bd595fd3ff45f66221ff0b28aa4bc82b6d9329c6d105c3f9b4748806_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6220:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6228:3:5",
														"type": ""
													}
												],
												"src": "6086:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6629:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6639:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6651:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6662:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6647:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6647:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6639:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6686:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6697:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6682:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6682:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6705:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6711:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6701:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6701:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6675:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6675:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6675:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6731:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6865:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d9c87d73bd595fd3ff45f66221ff0b28aa4bc82b6d9329c6d105c3f9b4748806_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6739:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6739:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6731:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9c87d73bd595fd3ff45f66221ff0b28aa4bc82b6d9329c6d105c3f9b4748806__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6609:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6624:4:5",
														"type": ""
													}
												],
												"src": "6458:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6948:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6965:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6988:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6970:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6970:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6958:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6958:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6958:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6936:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6943:3:5",
														"type": ""
													}
												],
												"src": "6883:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7105:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7115:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7127:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7138:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7123:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7123:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7115:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7195:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7208:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7219:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7204:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7204:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7151:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7151:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7151:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7077:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7089:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7100:4:5",
														"type": ""
													}
												],
												"src": "7007:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7298:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7308:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7323:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7317:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7317:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7308:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7366:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7339:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7339:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7339:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7276:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7284:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7292:5:5",
														"type": ""
													}
												],
												"src": "7235:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7461:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7507:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7509:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7509:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7509:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7482:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7491:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7478:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7478:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7503:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7474:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:32:5"
															},
															"nodeType": "YulIf",
															"src": "7471:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "7600:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7615:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7619:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7644:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7690:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7701:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7686:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7686:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7710:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7654:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7654:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7644:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7431:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7442:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7454:6:5",
														"type": ""
													}
												],
												"src": "7384:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7836:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7853:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7858:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7846:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7846:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7846:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7874:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7893:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7898:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7889:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7889:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7874:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7808:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7813:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7824:11:5",
														"type": ""
													}
												],
												"src": "7741:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8021:8:5",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8013:6:5",
														"type": ""
													}
												],
												"src": "7915:114:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8180:217:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8190:72:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8255:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8260:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8197:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8197:65:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8190:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8360:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "8271:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8271:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8271:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8373:18:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8384:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8389:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8380:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8380:11:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8373:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8168:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8176:3:5",
														"type": ""
													}
												],
												"src": "8035:362:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8601:329:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8611:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8623:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8634:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8619:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8611:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8691:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8704:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8715:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8700:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8700:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8647:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8647:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8647:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8739:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8750:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8735:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8735:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8759:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8765:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8755:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8755:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8728:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8728:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8728:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8785:138:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8918:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8793:123:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8793:130:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8785:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8573:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8585:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8596:4:5",
														"type": ""
													}
												],
												"src": "8403:527:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9042:57:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9064:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9072:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9060:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9060:14:5"
																	},
																	{
																		"hexValue": "746f6b656e20746f2073656e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9076:15:5",
																		"type": "",
																		"value": "token to send"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9053:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9053:39:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9053:39:5"
														}
													]
												},
												"name": "store_literal_in_memory_957565bfa95a89eab0addc1e72a2c28b5ad17773f21c7c7c29c86526b05159cd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9034:6:5",
														"type": ""
													}
												],
												"src": "8936:163:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9251:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9261:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9327:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9332:2:5",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9268:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9268:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9261:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9433:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_957565bfa95a89eab0addc1e72a2c28b5ad17773f21c7c7c29c86526b05159cd",
																	"nodeType": "YulIdentifier",
																	"src": "9344:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9344:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9344:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9446:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9457:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9462:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9453:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9453:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9446:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_957565bfa95a89eab0addc1e72a2c28b5ad17773f21c7c7c29c86526b05159cd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9239:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9247:3:5",
														"type": ""
													}
												],
												"src": "9105:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9676:330:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9686:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9698:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9709:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9694:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9694:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9686:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9766:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9779:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9790:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9775:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9775:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9722:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9722:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9722:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9814:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9825:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9810:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9810:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9834:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9840:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9830:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9830:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9803:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9803:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9803:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9860:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9994:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_957565bfa95a89eab0addc1e72a2c28b5ad17773f21c7c7c29c86526b05159cd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9868:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9868:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9860:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_stringliteral_957565bfa95a89eab0addc1e72a2c28b5ad17773f21c7c7c29c86526b05159cd__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9648:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9660:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9671:4:5",
														"type": ""
													}
												],
												"src": "9477:529:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a3455eecf05d88eb24388b0ef355bcd38fd16864f5924c6c44d91a8814b99d80(memPtr) {\n\n        mstore(add(memPtr, 0), \"token received\")\n\n    }\n\n    function abi_encode_t_stringliteral_a3455eecf05d88eb24388b0ef355bcd38fd16864f5924c6c44d91a8814b99d80_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_a3455eecf05d88eb24388b0ef355bcd38fd16864f5924c6c44d91a8814b99d80(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_stringliteral_a3455eecf05d88eb24388b0ef355bcd38fd16864f5924c6c44d91a8814b99d80__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a3455eecf05d88eb24388b0ef355bcd38fd16864f5924c6c44d91a8814b99d80_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d9c87d73bd595fd3ff45f66221ff0b28aa4bc82b6d9329c6d105c3f9b4748806(memPtr) {\n\n        mstore(add(memPtr, 0), \"no permision\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9c87d73bd595fd3ff45f66221ff0b28aa4bc82b6d9329c6d105c3f9b4748806_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_d9c87d73bd595fd3ff45f66221ff0b28aa4bc82b6d9329c6d105c3f9b4748806(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9c87d73bd595fd3ff45f66221ff0b28aa4bc82b6d9329c6d105c3f9b4748806__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9c87d73bd595fd3ff45f66221ff0b28aa4bc82b6d9329c6d105c3f9b4748806_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_957565bfa95a89eab0addc1e72a2c28b5ad17773f21c7c7c29c86526b05159cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"token to send\")\n\n    }\n\n    function abi_encode_t_stringliteral_957565bfa95a89eab0addc1e72a2c28b5ad17773f21c7c7c29c86526b05159cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_957565bfa95a89eab0addc1e72a2c28b5ad17773f21c7c7c29c86526b05159cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_stringliteral_957565bfa95a89eab0addc1e72a2c28b5ad17773f21c7c7c29c86526b05159cd__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_957565bfa95a89eab0addc1e72a2c28b5ad17773f21c7c7c29c86526b05159cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100565760003560e01c806223de291461005b57806344df8e701461007757806375ab9782146100815780638170eace1461009d578063e89081f8146100cd575b600080fd5b61007560048036038101906100709190610581565b6100fd565b005b61007f6101d8565b005b61009b60048036038101906100969190610581565b610398565b005b6100b760048036038101906100b29190610650565b61041e565b6040516100c4919061068c565b60405180910390f35b6100e760048036038101906100e29190610650565b610466565b6040516100f4919061068c565b60405180910390f35b846000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461014b91906106d6565b925050819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f40079291ab55cc19bc58cf71f199a7dbea42e6ae0a5df85085cfd005989882e1886040516101c69190610767565b60405180910390a45050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025f906107e1565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102c59190610810565b602060405180830381865afa1580156102e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103069190610840565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe9d9303826040518263ffffffff1660e01b815260040161036391906108a4565b600060405180830381600087803b15801561037d57600080fd5b505af1158015610391573d6000803e3d6000fd5b5050505050565b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f76a1164d576fc7c969d03ca591db9973dcf556dea68edfb7cc163fdce887d39b8860405161040c919061091e565b60405180910390a45050505050505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006020528060005260406000206000915090505481565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104b382610488565b9050919050565b6104c3816104a8565b81146104ce57600080fd5b50565b6000813590506104e0816104ba565b92915050565b6000819050919050565b6104f9816104e6565b811461050457600080fd5b50565b600081359050610516816104f0565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126105415761054061051c565b5b8235905067ffffffffffffffff81111561055e5761055d610521565b5b60208301915083600182028301111561057a57610579610526565b5b9250929050565b60008060008060008060008060c0898b0312156105a1576105a061047e565b5b60006105af8b828c016104d1565b98505060206105c08b828c016104d1565b97505060406105d18b828c016104d1565b96505060606105e28b828c01610507565b955050608089013567ffffffffffffffff81111561060357610602610483565b5b61060f8b828c0161052b565b945094505060a089013567ffffffffffffffff81111561063257610631610483565b5b61063e8b828c0161052b565b92509250509295985092959890939650565b6000602082840312156106665761066561047e565b5b6000610674848285016104d1565b91505092915050565b610686816104e6565b82525050565b60006020820190506106a1600083018461067d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106e1826104e6565b91506106ec836104e6565b9250828201905080821115610704576107036106a7565b5b92915050565b600082825260208201905092915050565b7f746f6b656e207265636569766564000000000000000000000000000000000000600082015250565b6000610751600e8361070a565b915061075c8261071b565b602082019050919050565b600060408201905061077c600083018461067d565b818103602083015261078d81610744565b905092915050565b7f6e6f207065726d6973696f6e0000000000000000000000000000000000000000600082015250565b60006107cb600c8361070a565b91506107d682610795565b602082019050919050565b600060208201905081810360008301526107fa816107be565b9050919050565b61080a816104a8565b82525050565b60006020820190506108256000830184610801565b92915050565b60008151905061083a816104f0565b92915050565b6000602082840312156108565761085561047e565b5b60006108648482850161082b565b91505092915050565b600082825260208201905092915050565b50565b600061088e60008361086d565b91506108998261087e565b600082019050919050565b60006040820190506108b9600083018461067d565b81810360208301526108ca81610881565b905092915050565b7f746f6b656e20746f2073656e6400000000000000000000000000000000000000600082015250565b6000610908600d8361070a565b9150610913826108d2565b602082019050919050565b6000604082019050610933600083018461067d565b8181036020830152610944816108fb565b90509291505056fea2646970667358221220d91ea7eb97eecf18c4dbe89503d7dfc6f25046d48d2effc6be61cf5d2ee12ce164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x23DE29 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x44DF8E70 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x75AB9782 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8170EACE EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xE89081F8 EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x75 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x581 JUMP JUMPDEST PUSH2 0xFD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x1D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x581 JUMP JUMPDEST PUSH2 0x398 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH2 0x466 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP5 PUSH1 0x0 DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x6D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x40079291AB55CC19BC58CF71F199A7DBEA42E6AE0A5DF85085CFD005989882E1 DUP9 PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x810 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x840 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFE9D9303 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x8A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x391 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x76A1164D576FC7C969D03CA591DB9973DCF556DEA68EDFB7CC163FDCE887D39B DUP9 PUSH1 0x40 MLOAD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP3 PUSH2 0x488 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C3 DUP2 PUSH2 0x4A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4E0 DUP2 PUSH2 0x4BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F9 DUP2 PUSH2 0x4E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x516 DUP2 PUSH2 0x4F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x541 JUMPI PUSH2 0x540 PUSH2 0x51C JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x55E JUMPI PUSH2 0x55D PUSH2 0x521 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x57A JUMPI PUSH2 0x579 PUSH2 0x526 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x5A1 JUMPI PUSH2 0x5A0 PUSH2 0x47E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5AF DUP12 DUP3 DUP13 ADD PUSH2 0x4D1 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x5C0 DUP12 DUP3 DUP13 ADD PUSH2 0x4D1 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x5D1 DUP12 DUP3 DUP13 ADD PUSH2 0x4D1 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x5E2 DUP12 DUP3 DUP13 ADD PUSH2 0x507 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x603 JUMPI PUSH2 0x602 PUSH2 0x483 JUMP JUMPDEST JUMPDEST PUSH2 0x60F DUP12 DUP3 DUP13 ADD PUSH2 0x52B JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x632 JUMPI PUSH2 0x631 PUSH2 0x483 JUMP JUMPDEST JUMPDEST PUSH2 0x63E DUP12 DUP3 DUP13 ADD PUSH2 0x52B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x666 JUMPI PUSH2 0x665 PUSH2 0x47E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x674 DUP5 DUP3 DUP6 ADD PUSH2 0x4D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x686 DUP2 PUSH2 0x4E6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6A1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x67D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6E1 DUP3 PUSH2 0x4E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x6EC DUP4 PUSH2 0x4E6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x704 JUMPI PUSH2 0x703 PUSH2 0x6A7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x746F6B656E207265636569766564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x751 PUSH1 0xE DUP4 PUSH2 0x70A JUMP JUMPDEST SWAP2 POP PUSH2 0x75C DUP3 PUSH2 0x71B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x77C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x67D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x78D DUP2 PUSH2 0x744 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F207065726D6973696F6E0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CB PUSH1 0xC DUP4 PUSH2 0x70A JUMP JUMPDEST SWAP2 POP PUSH2 0x7D6 DUP3 PUSH2 0x795 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7FA DUP2 PUSH2 0x7BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80A DUP2 PUSH2 0x4A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x825 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x801 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x83A DUP2 PUSH2 0x4F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x856 JUMPI PUSH2 0x855 PUSH2 0x47E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x864 DUP5 DUP3 DUP6 ADD PUSH2 0x82B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88E PUSH1 0x0 DUP4 PUSH2 0x86D JUMP JUMPDEST SWAP2 POP PUSH2 0x899 DUP3 PUSH2 0x87E JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x8B9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x67D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x8CA DUP2 PUSH2 0x881 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x746F6B656E20746F2073656E6400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x908 PUSH1 0xD DUP4 PUSH2 0x70A JUMP JUMPDEST SWAP2 POP PUSH2 0x913 DUP3 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x933 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x67D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x944 DUP2 PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0x1E 0xA7 0xEB SWAP8 0xEE 0xCF XOR 0xC4 0xDB 0xE8 SWAP6 SUB 0xD7 0xDF 0xC6 CALLCODE POP CHAINID 0xD4 DUP14 0x2E SELFDESTRUCT 0xC6 0xBE PUSH2 0xCF5D 0x2E 0xE1 0x2C 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "352:2086:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1588:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2256:180;;;:::i;:::-;;1935:278;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1456:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;674:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1588:315;1815:6;1799;:12;1806:4;1799:12;;;;;;;;;;;;;;;;:22;;;;;;;:::i;:::-;;;;;;;;1867:2;1836:60;;1861:4;1836:60;;1851:8;1836:60;;;1871:6;1836:60;;;;;;:::i;:::-;;;;;;;;1588:315;;;;;;;;:::o;2256:180::-;2313:6;;;;;;;;;;;2299:20;;:10;:20;;;2291:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;2346:15;2364:6;;;;;;;;;;;:16;;;2389:4;2364:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2346:49;;2405:6;;;;;;;;;;;:11;;;2417:7;2405:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2281:155;2256:180::o;1935:278::-;2178:2;2149:57;;2172:4;2149:57;;2162:8;2149:57;;;2182:6;2149:57;;;;;;:::i;:::-;;;;;;;;1935:278;;;;;;;;:::o;1456:100::-;1514:7;1540:6;:9;1547:1;1540:9;;;;;;;;;;;;;;;;1533:16;;1456:100;;;:::o;674:41::-;;;;;;;;;;;;;;;;;:::o;88:117:5:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:117;1552:1;1549;1542:12;1579:552;1636:8;1646:6;1696:3;1689:4;1681:6;1677:17;1673:27;1663:122;;1704:79;;:::i;:::-;1663:122;1817:6;1804:20;1794:30;;1847:18;1839:6;1836:30;1833:117;;;1869:79;;:::i;:::-;1833:117;1983:4;1975:6;1971:17;1959:29;;2037:3;2029:4;2021:6;2017:17;2007:8;2003:32;2000:41;1997:128;;;2044:79;;:::i;:::-;1997:128;1579:552;;;;;:::o;2137:1453::-;2263:6;2271;2279;2287;2295;2303;2311;2319;2368:3;2356:9;2347:7;2343:23;2339:33;2336:120;;;2375:79;;:::i;:::-;2336:120;2495:1;2520:53;2565:7;2556:6;2545:9;2541:22;2520:53;:::i;:::-;2510:63;;2466:117;2622:2;2648:53;2693:7;2684:6;2673:9;2669:22;2648:53;:::i;:::-;2638:63;;2593:118;2750:2;2776:53;2821:7;2812:6;2801:9;2797:22;2776:53;:::i;:::-;2766:63;;2721:118;2878:2;2904:53;2949:7;2940:6;2929:9;2925:22;2904:53;:::i;:::-;2894:63;;2849:118;3034:3;3023:9;3019:19;3006:33;3066:18;3058:6;3055:30;3052:117;;;3088:79;;:::i;:::-;3052:117;3201:64;3257:7;3248:6;3237:9;3233:22;3201:64;:::i;:::-;3183:82;;;;2977:298;3342:3;3331:9;3327:19;3314:33;3374:18;3366:6;3363:30;3360:117;;;3396:79;;:::i;:::-;3360:117;3509:64;3565:7;3556:6;3545:9;3541:22;3509:64;:::i;:::-;3491:82;;;;3285:298;2137:1453;;;;;;;;;;;:::o;3596:329::-;3655:6;3704:2;3692:9;3683:7;3679:23;3675:32;3672:119;;;3710:79;;:::i;:::-;3672:119;3830:1;3855:53;3900:7;3891:6;3880:9;3876:22;3855:53;:::i;:::-;3845:63;;3801:117;3596:329;;;;:::o;3931:118::-;4018:24;4036:5;4018:24;:::i;:::-;4013:3;4006:37;3931:118;;:::o;4055:222::-;4148:4;4186:2;4175:9;4171:18;4163:26;;4199:71;4267:1;4256:9;4252:17;4243:6;4199:71;:::i;:::-;4055:222;;;;:::o;4283:180::-;4331:77;4328:1;4321:88;4428:4;4425:1;4418:15;4452:4;4449:1;4442:15;4469:191;4509:3;4528:20;4546:1;4528:20;:::i;:::-;4523:25;;4562:20;4580:1;4562:20;:::i;:::-;4557:25;;4605:1;4602;4598:9;4591:16;;4626:3;4623:1;4620:10;4617:36;;;4633:18;;:::i;:::-;4617:36;4469:191;;;;:::o;4666:169::-;4750:11;4784:6;4779:3;4772:19;4824:4;4819:3;4815:14;4800:29;;4666:169;;;;:::o;4841:164::-;4981:16;4977:1;4969:6;4965:14;4958:40;4841:164;:::o;5011:366::-;5153:3;5174:67;5238:2;5233:3;5174:67;:::i;:::-;5167:74;;5250:93;5339:3;5250:93;:::i;:::-;5368:2;5363:3;5359:12;5352:19;;5011:366;;;:::o;5383:529::-;5577:4;5615:2;5604:9;5600:18;5592:26;;5628:71;5696:1;5685:9;5681:17;5672:6;5628:71;:::i;:::-;5746:9;5740:4;5736:20;5731:2;5720:9;5716:18;5709:48;5774:131;5900:4;5774:131;:::i;:::-;5766:139;;5383:529;;;;:::o;5918:162::-;6058:14;6054:1;6046:6;6042:14;6035:38;5918:162;:::o;6086:366::-;6228:3;6249:67;6313:2;6308:3;6249:67;:::i;:::-;6242:74;;6325:93;6414:3;6325:93;:::i;:::-;6443:2;6438:3;6434:12;6427:19;;6086:366;;;:::o;6458:419::-;6624:4;6662:2;6651:9;6647:18;6639:26;;6711:9;6705:4;6701:20;6697:1;6686:9;6682:17;6675:47;6739:131;6865:4;6739:131;:::i;:::-;6731:139;;6458:419;;;:::o;6883:118::-;6970:24;6988:5;6970:24;:::i;:::-;6965:3;6958:37;6883:118;;:::o;7007:222::-;7100:4;7138:2;7127:9;7123:18;7115:26;;7151:71;7219:1;7208:9;7204:17;7195:6;7151:71;:::i;:::-;7007:222;;;;:::o;7235:143::-;7292:5;7323:6;7317:13;7308:22;;7339:33;7366:5;7339:33;:::i;:::-;7235:143;;;;:::o;7384:351::-;7454:6;7503:2;7491:9;7482:7;7478:23;7474:32;7471:119;;;7509:79;;:::i;:::-;7471:119;7629:1;7654:64;7710:7;7701:6;7690:9;7686:22;7654:64;:::i;:::-;7644:74;;7600:128;7384:351;;;;:::o;7741:168::-;7824:11;7858:6;7853:3;7846:19;7898:4;7893:3;7889:14;7874:29;;7741:168;;;;:::o;7915:114::-;;:::o;8035:362::-;8176:3;8197:65;8260:1;8255:3;8197:65;:::i;:::-;8190:72;;8271:93;8360:3;8271:93;:::i;:::-;8389:1;8384:3;8380:11;8373:18;;8035:362;;;:::o;8403:527::-;8596:4;8634:2;8623:9;8619:18;8611:26;;8647:71;8715:1;8704:9;8700:17;8691:6;8647:71;:::i;:::-;8765:9;8759:4;8755:20;8750:2;8739:9;8735:18;8728:48;8793:130;8918:4;8793:130;:::i;:::-;8785:138;;8403:527;;;;:::o;8936:163::-;9076:15;9072:1;9064:6;9060:14;9053:39;8936:163;:::o;9105:366::-;9247:3;9268:67;9332:2;9327:3;9268:67;:::i;:::-;9261:74;;9344:93;9433:3;9344:93;:::i;:::-;9462:2;9457:3;9453:12;9446:19;;9105:366;;;:::o;9477:529::-;9671:4;9709:2;9698:9;9694:18;9686:26;;9722:71;9790:1;9779:9;9775:17;9766:6;9722:71;:::i;:::-;9840:9;9834:4;9830:20;9825:2;9814:9;9810:18;9803:48;9868:131;9994:4;9868:131;:::i;:::-;9860:139;;9477:529;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "486800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"burn()": "infinite",
								"givers(address)": "2880",
								"showGive(address)": "2885",
								"tokensReceived(address,address,address,uint256,bytes,bytes)": "infinite",
								"tokensToSend(address,address,address,uint256,bytes,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 352,
									"end": 2438,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 352,
									"end": 2438,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 352,
									"end": 2438,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1095,
									"end": 1410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 850,
									"end": 892,
									"name": "PUSH",
									"source": 4,
									"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
								},
								{
									"begin": 1132,
									"end": 1173,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1132,
									"end": 1173,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1173,
									"name": "PUSH",
									"source": 4,
									"value": "29965A1D"
								},
								{
									"begin": 1182,
									"end": 1186,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 957,
									"end": 988,
									"name": "PUSH",
									"source": 4,
									"value": "29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895"
								},
								{
									"begin": 1228,
									"end": 1232,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1132,
									"end": 1234,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "EXTCODESIZE",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "GAS",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "CALL",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "RETURNDATACOPY",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1234,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 850,
									"end": 892,
									"name": "PUSH",
									"source": 4,
									"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
								},
								{
									"begin": 1244,
									"end": 1285,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1244,
									"end": 1285,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1285,
									"name": "PUSH",
									"source": 4,
									"value": "29965A1D"
								},
								{
									"begin": 1294,
									"end": 1298,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 1054,
									"end": 1088,
									"name": "PUSH",
									"source": 4,
									"value": "B281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
								},
								{
									"begin": 1343,
									"end": 1347,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFF"
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1244,
									"end": 1349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "EXTCODESIZE",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "GAS",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "CALL",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "RETURNDATACOPY",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1244,
									"end": 1349,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1369,
									"end": 1379,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1366,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1360,
									"end": 1366,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1379,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1398,
									"end": 1403,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1389,
									"end": 1395,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1403,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1095,
									"end": 1410,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 352,
									"end": 2438,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 352,
									"end": 2438,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 679,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 568,
									"end": 679,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 620,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 649,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 667,
									"end": 672,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 649,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 649,
									"end": 673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 649,
									"end": 673,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 649,
									"end": 673,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 638,
									"end": 673,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 638,
									"end": 673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 679,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 568,
									"end": 679,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 568,
									"end": 679,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 679,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 685,
									"end": 837,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 685,
									"end": 837,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 773,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 806,
									"end": 811,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 773,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 773,
									"end": 812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 773,
									"end": 812,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 773,
									"end": 812,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 763,
									"end": 813,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 753,
									"end": 831,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 753,
									"end": 831,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 827,
									"end": 828,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 825,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 817,
									"end": 829,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 753,
									"end": 831,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 753,
									"end": 831,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 685,
									"end": 837,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 685,
									"end": 837,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 915,
									"end": 920,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 940,
									"end": 953,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 931,
									"end": 953,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 931,
									"end": 953,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1004,
									"end": 1009,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 962,
									"end": 1010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 843,
									"end": 1016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1107,
									"end": 1113,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1156,
									"end": 1158,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1144,
									"end": 1153,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1135,
									"end": 1142,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1131,
									"end": 1154,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1127,
									"end": 1159,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1162,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1162,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1162,
									"end": 1241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1162,
									"end": 1241,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1162,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1124,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1283,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1307,
									"end": 1386,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1378,
									"end": 1385,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1375,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1358,
									"end": 1367,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1354,
									"end": 1376,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1307,
									"end": 1386,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 1307,
									"end": 1386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1307,
									"end": 1386,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1307,
									"end": 1386,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1386,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1386,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1253,
									"end": 1396,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1022,
									"end": 1403,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1022,
									"end": 1403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1409,
									"end": 1527,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1409,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1496,
									"end": 1520,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1514,
									"end": 1519,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1496,
									"end": 1520,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1496,
									"end": 1520,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1496,
									"end": 1520,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1496,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1491,
									"end": 1494,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1521,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1409,
									"end": 1527,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1409,
									"end": 1527,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1409,
									"end": 1527,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1533,
									"end": 1610,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1533,
									"end": 1610,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1570,
									"end": 1577,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1599,
									"end": 1604,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1588,
									"end": 1604,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1588,
									"end": 1604,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1533,
									"end": 1610,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1533,
									"end": 1610,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1533,
									"end": 1610,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1533,
									"end": 1610,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1616,
									"end": 1734,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 1616,
									"end": 1734,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1727,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1721,
									"end": 1726,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1727,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1703,
									"end": 1727,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1703,
									"end": 1727,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1703,
									"end": 1727,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1698,
									"end": 1701,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1691,
									"end": 1728,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1616,
									"end": 1734,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1616,
									"end": 1734,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1616,
									"end": 1734,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1740,
									"end": 2182,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1740,
									"end": 2182,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1927,
									"end": 1929,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1916,
									"end": 1925,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1912,
									"end": 1930,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1904,
									"end": 1930,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1940,
									"end": 2011,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 2008,
									"end": 2009,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1997,
									"end": 2006,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1993,
									"end": 2010,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1984,
									"end": 1990,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1940,
									"end": 2011,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1940,
									"end": 2011,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1940,
									"end": 2011,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1940,
									"end": 2011,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2021,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2089,
									"end": 2091,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2078,
									"end": 2087,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2074,
									"end": 2092,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2021,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 2021,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2021,
									"end": 2093,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2021,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2103,
									"end": 2175,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2160,
									"end": 2169,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2156,
									"end": 2174,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2147,
									"end": 2153,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2103,
									"end": 2175,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2103,
									"end": 2175,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2103,
									"end": 2175,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 2103,
									"end": 2175,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1740,
									"end": 2182,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1740,
									"end": 2182,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1740,
									"end": 2182,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1740,
									"end": 2182,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1740,
									"end": 2182,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1740,
									"end": 2182,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1740,
									"end": 2182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 352,
									"end": 2438,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 352,
									"end": 2438,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 352,
									"end": 2438,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 352,
									"end": 2438,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 352,
									"end": 2438,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 352,
									"end": 2438,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 352,
									"end": 2438,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 352,
									"end": 2438,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 352,
									"end": 2438,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d91ea7eb97eecf18c4dbe89503d7dfc6f25046d48d2effc6be61cf5d2ee12ce164736f6c63430008120033",
									".code": [
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH",
											"source": 4,
											"value": "23DE29"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH",
											"source": 4,
											"value": "44DF8E70"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH",
											"source": 4,
											"value": "75AB9782"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH",
											"source": 4,
											"value": "8170EACE"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH",
											"source": 4,
											"value": "E89081F8"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 352,
											"end": 2438,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1588,
											"end": 1903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1588,
											"end": 1903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2256,
											"end": 2436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1935,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1935,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1456,
											"end": 1556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1456,
											"end": 1556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1456,
											"end": 1556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 674,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 674,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 674,
											"end": 715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1821,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1806,
											"end": 1810,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1799,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1869,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1865,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1859,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "PUSH",
											"source": 4,
											"value": "40079291AB55CC19BC58CF71F199A7DBEA42E6AE0A5DF85085CFD005989882E1"
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1836,
											"end": 1896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1896,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2319,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2313,
											"end": 2319,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2319,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2319,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2313,
											"end": 2319,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2319,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2319,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2313,
											"end": 2319,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2299,
											"end": 2319,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2299,
											"end": 2319,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2299,
											"end": 2309,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2299,
											"end": 2319,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2299,
											"end": 2319,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2299,
											"end": 2319,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2291,
											"end": 2336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2291,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2361,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2370,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2364,
											"end": 2370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2370,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2370,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2364,
											"end": 2370,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2370,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2370,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2364,
											"end": 2370,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2364,
											"end": 2380,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2380,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 2389,
											"end": 2393,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2364,
											"end": 2395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2364,
											"end": 2395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2395,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2411,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2405,
											"end": 2411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2411,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2411,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2405,
											"end": 2411,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2411,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2411,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2405,
											"end": 2411,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2416,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2405,
											"end": 2416,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2416,
											"name": "PUSH",
											"source": 4,
											"value": "FE9D9303"
										},
										{
											"begin": 2417,
											"end": 2424,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2405,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2180,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2176,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2170,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "PUSH",
											"source": 4,
											"value": "76A1164D576FC7C969D03CA591DB9973DCF556DEA68EDFB7CC163FDCE887D39B"
										},
										{
											"begin": 2182,
											"end": 2188,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2149,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2149,
											"end": 2206,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1548,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1549,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1549,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1456,
											"end": 1556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 674,
											"end": 715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1554,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1644,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1699,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1693,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1700,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1704,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1794,
											"end": 1824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1865,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1866,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1869,
											"end": 1948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 1987,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 1988,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2040,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2034,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2015,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2041,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2044,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 2131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2293,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2309,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2311,
											"end": 2317,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2366,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2372,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2375,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2495,
											"end": 2496,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2565,
											"end": 2572,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 2556,
											"end": 2562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2563,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2520,
											"end": 2573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2573,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2573,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2693,
											"end": 2700,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 2684,
											"end": 2690,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2673,
											"end": 2682,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2648,
											"end": 2701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2701,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2593,
											"end": 2711,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2750,
											"end": 2752,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2821,
											"end": 2828,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2818,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2810,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2776,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2829,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2839,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2880,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2929,
											"end": 2938,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2904,
											"end": 2957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2957,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2967,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3037,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3023,
											"end": 3032,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3019,
											"end": 3038,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3006,
											"end": 3039,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3066,
											"end": 3084,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3088,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3088,
											"end": 3167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3167,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3088,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3201,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3257,
											"end": 3264,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3255,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3201,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3201,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3201,
											"end": 3265,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3201,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3265,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3265,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3275,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3342,
											"end": 3345,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 3331,
											"end": 3340,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3346,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3314,
											"end": 3347,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3366,
											"end": 3372,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3363,
											"end": 3393,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3396,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3396,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3475,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3396,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3565,
											"end": 3572,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 3556,
											"end": 3562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3554,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3563,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3509,
											"end": 3573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3509,
											"end": 3573,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3509,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3573,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3573,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3573,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3573,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3285,
											"end": 3583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 3590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3925,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3596,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3655,
											"end": 3661,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3704,
											"end": 3706,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3683,
											"end": 3690,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3679,
											"end": 3702,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3675,
											"end": 3707,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3791,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3672,
											"end": 3791,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3710,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3710,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3789,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3710,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3791,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3672,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3900,
											"end": 3907,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3880,
											"end": 3889,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3876,
											"end": 3898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3855,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3855,
											"end": 3908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3855,
											"end": 3908,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3855,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3908,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3908,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3801,
											"end": 3918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3925,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3925,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3931,
											"end": 4049,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3931,
											"end": 4049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4036,
											"end": 4041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4018,
											"end": 4042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4042,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4018,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4013,
											"end": 4016,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4006,
											"end": 4043,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3931,
											"end": 4049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3931,
											"end": 4049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3931,
											"end": 4049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4277,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4055,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4148,
											"end": 4152,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4188,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4184,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4171,
											"end": 4189,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4163,
											"end": 4189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4267,
											"end": 4268,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4265,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4252,
											"end": 4269,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4243,
											"end": 4249,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 4199,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4199,
											"end": 4270,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4199,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4277,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4277,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4283,
											"end": 4463,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 4283,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4331,
											"end": 4408,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4328,
											"end": 4329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4409,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4428,
											"end": 4432,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4425,
											"end": 4426,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4418,
											"end": 4433,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4456,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4449,
											"end": 4450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4457,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4660,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 4469,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4509,
											"end": 4512,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4546,
											"end": 4547,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4528,
											"end": 4548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4548,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4528,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4548,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4523,
											"end": 4548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4580,
											"end": 4581,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4562,
											"end": 4582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4582,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4562,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4605,
											"end": 4606,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4602,
											"end": 4603,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4598,
											"end": 4607,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4591,
											"end": 4607,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4591,
											"end": 4607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4629,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4623,
											"end": 4624,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4620,
											"end": 4630,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 4653,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4617,
											"end": 4653,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4633,
											"end": 4651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 4633,
											"end": 4651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4633,
											"end": 4651,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4633,
											"end": 4651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4617,
											"end": 4653,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4617,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4660,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4660,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4666,
											"end": 4835,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 4666,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4750,
											"end": 4761,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4790,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4782,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4824,
											"end": 4828,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4819,
											"end": 4822,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4815,
											"end": 4829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4800,
											"end": 4829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4800,
											"end": 4829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4666,
											"end": 4835,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4666,
											"end": 4835,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4666,
											"end": 4835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4666,
											"end": 4835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4666,
											"end": 4835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4841,
											"end": 5005,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 4841,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4981,
											"end": 4997,
											"name": "PUSH",
											"source": 5,
											"value": "746F6B656E207265636569766564000000000000000000000000000000000000"
										},
										{
											"begin": 4977,
											"end": 4978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 4975,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4965,
											"end": 4979,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4958,
											"end": 4998,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4841,
											"end": 5005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4841,
											"end": 5005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5011,
											"end": 5377,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 5011,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5156,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5238,
											"end": 5240,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 5233,
											"end": 5236,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5174,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 5174,
											"end": 5241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5174,
											"end": 5241,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5174,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5167,
											"end": 5241,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5167,
											"end": 5241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5250,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5339,
											"end": 5342,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5250,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5250,
											"end": 5343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5250,
											"end": 5343,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5250,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5368,
											"end": 5370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5363,
											"end": 5366,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5359,
											"end": 5371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5011,
											"end": 5377,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5011,
											"end": 5377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5011,
											"end": 5377,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5011,
											"end": 5377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5912,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 5383,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5577,
											"end": 5581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5617,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5604,
											"end": 5613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5618,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5696,
											"end": 5697,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5685,
											"end": 5694,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5681,
											"end": 5698,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5672,
											"end": 5678,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 5628,
											"end": 5699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5699,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5628,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5755,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5736,
											"end": 5756,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5733,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5720,
											"end": 5729,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5716,
											"end": 5734,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5709,
											"end": 5757,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5774,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5900,
											"end": 5904,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5774,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 5774,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5774,
											"end": 5905,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5774,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5766,
											"end": 5905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5766,
											"end": 5905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5912,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5912,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6080,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 5918,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6058,
											"end": 6072,
											"name": "PUSH",
											"source": 5,
											"value": "6E6F207065726D6973696F6E0000000000000000000000000000000000000000"
										},
										{
											"begin": 6054,
											"end": 6055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6046,
											"end": 6052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6042,
											"end": 6056,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6035,
											"end": 6073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6080,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 6080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6086,
											"end": 6452,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 6086,
											"end": 6452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6228,
											"end": 6231,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6249,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 6313,
											"end": 6315,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 6308,
											"end": 6311,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 6249,
											"end": 6316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6316,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 6249,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6242,
											"end": 6316,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6242,
											"end": 6316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6325,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6414,
											"end": 6417,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6325,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 6325,
											"end": 6418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6325,
											"end": 6418,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6325,
											"end": 6418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6443,
											"end": 6445,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6438,
											"end": 6441,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6434,
											"end": 6446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6427,
											"end": 6446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6427,
											"end": 6446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6086,
											"end": 6452,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6086,
											"end": 6452,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6086,
											"end": 6452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6086,
											"end": 6452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6458,
											"end": 6877,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 6458,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6624,
											"end": 6628,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6662,
											"end": 6664,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6651,
											"end": 6660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6665,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6665,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6665,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6711,
											"end": 6720,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6705,
											"end": 6709,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6701,
											"end": 6721,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6686,
											"end": 6695,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6682,
											"end": 6699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6675,
											"end": 6722,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6739,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6865,
											"end": 6869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6739,
											"end": 6870,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 6739,
											"end": 6870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6739,
											"end": 6870,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6739,
											"end": 6870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6731,
											"end": 6870,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6731,
											"end": 6870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6458,
											"end": 6877,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6458,
											"end": 6877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6458,
											"end": 6877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6458,
											"end": 6877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6883,
											"end": 7001,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 6883,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6970,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 6988,
											"end": 6993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6970,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 6970,
											"end": 6994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6970,
											"end": 6994,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 6970,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6965,
											"end": 6968,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6958,
											"end": 6995,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6883,
											"end": 7001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6883,
											"end": 7001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6883,
											"end": 7001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7007,
											"end": 7229,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 7007,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7100,
											"end": 7104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7140,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7127,
											"end": 7136,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7123,
											"end": 7141,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7141,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 7219,
											"end": 7220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7208,
											"end": 7217,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7204,
											"end": 7221,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7195,
											"end": 7201,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 7151,
											"end": 7222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7222,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 7151,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7007,
											"end": 7229,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7007,
											"end": 7229,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7007,
											"end": 7229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7007,
											"end": 7229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7007,
											"end": 7229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7235,
											"end": 7378,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 7235,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7292,
											"end": 7297,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7323,
											"end": 7329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7317,
											"end": 7330,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7308,
											"end": 7330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7308,
											"end": 7330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 7366,
											"end": 7371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 7339,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 7339,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7235,
											"end": 7378,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7235,
											"end": 7378,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7235,
											"end": 7378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7235,
											"end": 7378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7235,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7735,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 7384,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7454,
											"end": 7460,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7505,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7491,
											"end": 7500,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7482,
											"end": 7489,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7501,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7474,
											"end": 7506,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7590,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 7471,
											"end": 7590,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 7509,
											"end": 7588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 7509,
											"end": 7588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7588,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 7509,
											"end": 7588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7590,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 7471,
											"end": 7590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7629,
											"end": 7630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7654,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7710,
											"end": 7717,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7701,
											"end": 7707,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7690,
											"end": 7699,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7686,
											"end": 7708,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 7654,
											"end": 7718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7718,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 7654,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7644,
											"end": 7718,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7644,
											"end": 7718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7600,
											"end": 7728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7735,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7735,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7741,
											"end": 7909,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 7741,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7824,
											"end": 7835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7858,
											"end": 7864,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7853,
											"end": 7856,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7898,
											"end": 7902,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7893,
											"end": 7896,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7889,
											"end": 7903,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7874,
											"end": 7903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7874,
											"end": 7903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7741,
											"end": 7909,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7741,
											"end": 7909,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7741,
											"end": 7909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7741,
											"end": 7909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7741,
											"end": 7909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7915,
											"end": 8029,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 7915,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7915,
											"end": 8029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7915,
											"end": 8029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8397,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 8035,
											"end": 8397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8176,
											"end": 8179,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8197,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 8260,
											"end": 8261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8255,
											"end": 8258,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8197,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 8197,
											"end": 8262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8197,
											"end": 8262,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 8197,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8190,
											"end": 8262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8190,
											"end": 8262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8271,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 8360,
											"end": 8363,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8271,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 8271,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8271,
											"end": 8364,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 8271,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8389,
											"end": 8390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8384,
											"end": 8387,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8380,
											"end": 8391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8373,
											"end": 8391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8397,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8397,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8035,
											"end": 8397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8403,
											"end": 8930,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 8403,
											"end": 8930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8596,
											"end": 8600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8634,
											"end": 8636,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8623,
											"end": 8632,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8619,
											"end": 8637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8611,
											"end": 8637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8611,
											"end": 8637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8647,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 8715,
											"end": 8716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8704,
											"end": 8713,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8700,
											"end": 8717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8691,
											"end": 8697,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8647,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 8647,
											"end": 8718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8647,
											"end": 8718,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 8647,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8765,
											"end": 8774,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8763,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8755,
											"end": 8775,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8750,
											"end": 8752,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8739,
											"end": 8748,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8728,
											"end": 8776,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8793,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 8918,
											"end": 8922,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8793,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 8793,
											"end": 8923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8793,
											"end": 8923,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 8793,
											"end": 8923,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8785,
											"end": 8923,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8785,
											"end": 8923,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8403,
											"end": 8930,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8403,
											"end": 8930,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8403,
											"end": 8930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8403,
											"end": 8930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8403,
											"end": 8930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8936,
											"end": 9099,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 8936,
											"end": 9099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9076,
											"end": 9091,
											"name": "PUSH",
											"source": 5,
											"value": "746F6B656E20746F2073656E6400000000000000000000000000000000000000"
										},
										{
											"begin": 9072,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9064,
											"end": 9070,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9060,
											"end": 9074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9092,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8936,
											"end": 9099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8936,
											"end": 9099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9105,
											"end": 9471,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 9105,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9247,
											"end": 9250,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9268,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 9332,
											"end": 9334,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 9327,
											"end": 9330,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9268,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 9268,
											"end": 9335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9268,
											"end": 9335,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 9268,
											"end": 9335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9261,
											"end": 9335,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9261,
											"end": 9335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9344,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 9433,
											"end": 9436,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9344,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 9344,
											"end": 9437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9344,
											"end": 9437,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 9344,
											"end": 9437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9462,
											"end": 9464,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9457,
											"end": 9460,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9453,
											"end": 9465,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9446,
											"end": 9465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9446,
											"end": 9465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9105,
											"end": 9471,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9105,
											"end": 9471,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9105,
											"end": 9471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9105,
											"end": 9471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9477,
											"end": 10006,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 9477,
											"end": 10006,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9671,
											"end": 9675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9709,
											"end": 9711,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9698,
											"end": 9707,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9694,
											"end": 9712,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9686,
											"end": 9712,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9686,
											"end": 9712,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9722,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 9790,
											"end": 9791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9779,
											"end": 9788,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9775,
											"end": 9792,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9766,
											"end": 9772,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9722,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 9722,
											"end": 9793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9722,
											"end": 9793,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 9722,
											"end": 9793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9830,
											"end": 9850,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9825,
											"end": 9827,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9814,
											"end": 9823,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9810,
											"end": 9828,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9803,
											"end": 9851,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9868,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 9994,
											"end": 9998,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9868,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 9868,
											"end": 9999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9868,
											"end": 9999,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 9868,
											"end": 9999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9860,
											"end": 9999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9860,
											"end": 9999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9477,
											"end": 10006,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9477,
											"end": 10006,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9477,
											"end": 10006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9477,
											"end": 10006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9477,
											"end": 10006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC777/IERC777.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
								"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol",
								"use_erc777_token_example.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"burn()": "44df8e70",
							"givers(address)": "e89081f8",
							"showGive(address)": "8170eace",
							"tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29",
							"tokensToSend(address,address,address,uint256,bytes,bytes)": "75ab9782"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC777\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"log_text\",\"type\":\"string\"}],\"name\":\"TokensReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"log_text\",\"type\":\"string\"}],\"name\":\"TokensToSend\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"givers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"g\",\"type\":\"address\"}],\"name\":\"showGive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensToSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed.\"},\"tokensToSend(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"use_erc777_token_example.sol\":\"ReceiveAndBurn\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18\",\"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0xd750324b0fc76aa4c1b0aadf7cab03b3d1cc4d5744348c18ba2b99dbdbe1758d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d53cbf8e2e469a6422fb61d8636af3ec39d8e10e7f4d99d625bdd36d4b8ddf34\",\"dweb:/ipfs/QmNhvk3jmfgquVki2V7gNmTWTMeNwEPCnetybeBntQtsyJ\"]},\"use_erc777_token_example.sol\":{\"keccak256\":\"0xb4f60f858aca83894457f4b6ebc74995beaad8a5361a62587eb5149f60b9bb0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0608a291206309a1a16ef66be440f80902aefa0cea09aa27476df787b1f516\",\"dweb:/ipfs/Qma1KB8AZZbcHHW1oNfPJiG2XEVC67ELTGF5jAi8FhipSp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 330,
								"contract": "use_erc777_token_example.sol:ReceiveAndBurn",
								"label": "givers",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 332,
								"contract": "use_erc777_token_example.sol:ReceiveAndBurn",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 335,
								"contract": "use_erc777_token_example.sol:ReceiveAndBurn",
								"label": "_token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC777)162"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC777)162": {
								"encoding": "inplace",
								"label": "contract IERC777",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> use_erc777_token_example.sol:42:9:\n   |\n42 |         bytes calldata userData,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1736,
					"file": "use_erc777_token_example.sol",
					"start": 1713
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> use_erc777_token_example.sol:43:9:\n   |\n43 |         bytes calldata operatorData\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1773,
					"file": "use_erc777_token_example.sol",
					"start": 1746
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> use_erc777_token_example.sol:55:9:\n   |\n55 |         bytes calldata userData,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2081,
					"file": "use_erc777_token_example.sol",
					"start": 2058
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> use_erc777_token_example.sol:56:9:\n   |\n56 |         bytes calldata operatorData\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2118,
					"file": "use_erc777_token_example.sol",
					"start": 2091
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC777/IERC777.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
					"exportedSymbols": {
						"IERC777": [
							162
						]
					},
					"id": 163,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "133:372:0",
								"text": " @dev Interface of the ERC777Token standard as defined in the EIP.\n This contract uses the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n token holders and recipients react to token movements by using setting implementers\n for the associated interfaces in said registry. See {IERC1820Registry} and\n {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 162,
							"linearizedBaseContracts": [
								162
							],
							"name": "IERC777",
							"nameLocation": "516:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "530:199:0",
										"text": " @dev Emitted when `amount` tokens are created by `operator` and assigned to `to`.\n Note that some additional user `data` and `operatorData` can be logged in the event."
									},
									"eventSelector": "2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d",
									"id": 15,
									"name": "Minted",
									"nameLocation": "740:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "763:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "747:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "789:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "773:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "801:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "793:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "815:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "809:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "827:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "821:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "821:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:94:0"
									},
									"src": "734:107:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "847:187:0",
										"text": " @dev Emitted when `operator` destroys `amount` tokens from `account`.\n Note that some additional user `data` and `operatorData` can be logged in the event."
									},
									"eventSelector": "a78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098",
									"id": 28,
									"name": "Burned",
									"nameLocation": "1045:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1068:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1052:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1094:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1078:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1108:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1100:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1122:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1116:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 23,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1116:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "1134:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1128:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 25,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1128:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:96:0"
									},
									"src": "1039:109:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1154:83:0",
										"text": " @dev Emitted when `operator` is made operator for `tokenHolder`."
									},
									"eventSelector": "f4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f9",
									"id": 35,
									"name": "AuthorizedOperator",
									"nameLocation": "1248:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1283:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1267:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "1309:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1293:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:55:0"
									},
									"src": "1242:80:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1328:97:0",
										"text": " @dev Emitted when `operator` is revoked its operator status for `tokenHolder`."
									},
									"eventSelector": "50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa1",
									"id": 42,
									"name": "RevokedOperator",
									"nameLocation": "1436:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1468:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1452:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "1494:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1478:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:55:0"
									},
									"src": "1430:77:0"
								},
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1513:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1581:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1585:2:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1611:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 45,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1611:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1610:15:0"
									},
									"scope": 162,
									"src": "1572:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1632:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1748:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:2:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1780:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1780:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:15:0"
									},
									"scope": 162,
									"src": "1739:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1801:287:0",
										"text": " @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For most token contracts, this value will equal 1."
									},
									"functionSelector": "556f0dc7",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "granularity",
									"nameLocation": "2102:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2113:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2139:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2138:9:0"
									},
									"scope": 162,
									"src": "2093:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2154:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2234:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2245:2:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "2271:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2270:9:0"
									},
									"scope": 162,
									"src": "2225:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "2286:83:0",
										"text": " @dev Returns the amount of tokens owned by an account (`owner`)."
									},
									"functionSelector": "70a08231",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2383:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2401:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2393:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:15:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2431:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:9:0"
									},
									"scope": 162,
									"src": "2374:66:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2446:585:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "9bd9bbc6",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "3045:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3067:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3059:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3059:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3094:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3086:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3125:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3110:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 80,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3110:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:86:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3144:0:0"
									},
									"scope": 162,
									"src": "3036:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3151:404:0",
										"text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."
									},
									"functionSelector": "fe9d9303",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3569:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3582:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3574:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3605:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3590:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 88,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3590:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3573:37:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3619:0:0"
									},
									"scope": 162,
									"src": "3560:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3626:249:0",
										"text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
									},
									"functionSelector": "d95b6371",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOperatorFor",
									"nameLocation": "3889:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3911:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3903:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "tokenHolder",
												"nameLocation": "3929:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3921:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3902:39:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3965:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 99,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3965:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3964:6:0"
									},
									"scope": 162,
									"src": "3880:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "3977:233:0",
										"text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."
									},
									"functionSelector": "959b8c3f",
									"id": 108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "authorizeOperator",
									"nameLocation": "4224:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4250:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4242:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4241:18:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4268:0:0"
									},
									"scope": 162,
									"src": "4215:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4275:261:0",
										"text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."
									},
									"functionSelector": "fad8b32a",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeOperator",
									"nameLocation": "4550:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4573:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "4565:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:18:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4591:0:0"
									},
									"scope": 162,
									"src": "4541:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "4598:338:0",
										"text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
									},
									"functionSelector": "06e48538",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "defaultOperators",
									"nameLocation": "4950:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4966:2:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "4992:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 117,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4992:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 118,
													"nodeType": "ArrayTypeName",
													"src": "4992:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4991:18:0"
									},
									"scope": 162,
									"src": "4941:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "5016:714:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
									},
									"functionSelector": "62ad1b83",
									"id": 135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorSend",
									"nameLocation": "5744:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5774:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "5766:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5766:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5798:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "5790:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5825:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "5817:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "5841:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 129,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5841:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "5885:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "5870:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 131,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5870:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5756:147:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5912:0:0"
									},
									"scope": 162,
									"src": "5735:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "5919:532:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
									},
									"functionSelector": "fc673c4f",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operatorBurn",
									"nameLocation": "6465:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6495:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "6487:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6520:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "6512:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6551:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "6536:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 141,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6536:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "6580:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "6565:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 143,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6565:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6477:121:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6607:0:0"
									},
									"scope": 162,
									"src": "6456:152:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987",
									"id": 161,
									"name": "Sent",
									"nameLocation": "6620:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6650:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "6634:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6684:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "6668:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6714:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "6698:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6734:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "6726:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6756:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "6750:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6750:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"indexed": false,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "6776:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "6770:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6770:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6624:170:0"
									},
									"src": "6614:181:0"
								}
							],
							"scope": 163,
							"src": "506:6291:0",
							"usedErrors": []
						}
					],
					"src": "108:6690:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
					"exportedSymbols": {
						"IERC777Recipient": [
							182
						]
					},
					"id": 183,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777Recipient",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 165,
								"nodeType": "StructuredDocumentation",
								"src": "127:406:1",
								"text": " @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n Accounts can be notified of {IERC777} tokens being sent to them by having a\n contract implement this interface (contract holders can be their own\n implementer) and registering it on the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n See {IERC1820Registry} and {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182
							],
							"name": "IERC777Recipient",
							"nameLocation": "544:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "567:474:1",
										"text": " @dev Called by an {IERC777} token contract whenever tokens are being\n moved or created into a registered account (`to`). The type of operation\n is conveyed by `from` being the zero address or not.\n This call occurs _after_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n This function may revert to prevent the operation from being executed."
									},
									"functionSelector": "0023de29",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "1055:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1087:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1079:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1113:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1105:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1135:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1127:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1155:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1147:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1186:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1171:23:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 175,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1171:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "1219:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1204:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1204:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1069:168:1"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:1"
									},
									"scope": 182,
									"src": "1046:201:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 183,
							"src": "534:715:1",
							"usedErrors": []
						}
					],
					"src": "102:1148:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
					"exportedSymbols": {
						"IERC777Sender": [
							202
						]
					},
					"id": 203,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777Sender",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "124:419:2",
								"text": " @dev Interface of the ERC777TokensSender standard as defined in the EIP.\n {IERC777} Token holders can be notified of operations performed on their\n tokens by having a contract implement this interface (contract holders can be\n their own implementer) and registering it on the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n See {IERC1820Registry} and {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 202,
							"linearizedBaseContracts": [
								202
							],
							"name": "IERC777Sender",
							"nameLocation": "554:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "574:478:2",
										"text": " @dev Called by an {IERC777} token contract whenever a registered holder's\n (`from`) tokens are about to be moved or destroyed. The type of operation\n is conveyed by `to` being the zero address or not.\n This call occurs _before_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\n This function may revert to prevent the operation from being executed."
									},
									"functionSelector": "75ab9782",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensToSend",
									"nameLocation": "1066:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1096:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1088:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1122:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1114:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1144:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1136:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1164:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1156:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1195:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1180:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1180:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "1228:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1213:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 197,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1213:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:168:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1255:0:2"
									},
									"scope": 202,
									"src": "1057:199:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 203,
							"src": "544:714:2",
							"usedErrors": []
						}
					],
					"src": "99:1160:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol",
					"exportedSymbols": {
						"IERC1820Registry": [
							292
						]
					},
					"id": 293,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 204,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "124:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1820Registry",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 205,
								"nodeType": "StructuredDocumentation",
								"src": "149:619:3",
								"text": " @dev Interface of the global ERC1820 Registry, as defined in the\n https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n implementers for interfaces in this registry, as well as query support.\n Implementers may be shared by multiple accounts, and can also implement more\n than a single interface for each account. Contracts can implement interfaces\n for themselves, but externally-owned accounts (EOA) must delegate this to a\n contract.\n {IERC165} interfaces can also be queried via the registry.\n For an in-depth explanation and source code analysis, see the EIP text."
							},
							"fullyImplemented": false,
							"id": 292,
							"linearizedBaseContracts": [
								292
							],
							"name": "IERC1820Registry",
							"nameLocation": "779:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db153",
									"id": 213,
									"name": "InterfaceImplementerSet",
									"nameLocation": "808:23:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "848:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "832:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "832:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"indexed": true,
												"mutability": "mutable",
												"name": "interfaceHash",
												"nameLocation": "873:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "857:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 208,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementer",
												"nameLocation": "904:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "888:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "831:85:3"
									},
									"src": "802:115:3"
								},
								{
									"anonymous": false,
									"eventSelector": "605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a4350",
									"id": 219,
									"name": "ManagerChanged",
									"nameLocation": "929:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "960:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "944:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"indexed": true,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "985:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "969:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "943:53:3"
									},
									"src": "923:74:3"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "1003:445:3",
										"text": " @dev Sets `newManager` as the manager for `account`. A manager of an\n account is able to set interface implementers for it.\n By default, each account is its own manager. Passing a value of `0x0` in\n `newManager` will reset the manager to this initial state.\n Emits a {ManagerChanged} event.\n Requirements:\n - the caller must be the current manager for `account`."
									},
									"functionSelector": "5df8122f",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setManager",
									"nameLocation": "1462:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "1498:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1490:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1472:37:3"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:0:3"
									},
									"scope": 292,
									"src": "1453:66:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "1525:90:3",
										"text": " @dev Returns the manager for `account`.\n See {setManager}."
									},
									"functionSelector": "3d584063",
									"id": 235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getManager",
									"nameLocation": "1629:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "1640:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1639:17:3"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "1680:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:9:3"
									},
									"scope": 292,
									"src": "1620:69:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "1695:815:3",
										"text": " @dev Sets the `implementer` contract as ``account``'s implementer for\n `interfaceHash`.\n `account` being the zero address is an alias for the caller's address.\n The zero address can also be used in `implementer` to remove an old one.\n See {interfaceHash} to learn how these are created.\n Emits an {InterfaceImplementerSet} event.\n Requirements:\n - the caller must be the current manager for `account`.\n - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n end in 28 zeroes).\n - `implementer` must implement {IERC1820Implementer} and return true when\n queried for support, unless `implementer` is the caller. See\n {IERC1820Implementer-canImplementInterfaceForAddress}."
									},
									"functionSelector": "29965a1d",
									"id": 245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setInterfaceImplementer",
									"nameLocation": "2524:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2565:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2557:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "_interfaceHash",
												"nameLocation": "2590:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2582:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 239,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2582:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "implementer",
												"nameLocation": "2622:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "2614:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2614:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2547:92:3"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2648:0:3"
									},
									"scope": 292,
									"src": "2515:134:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "2655:382:3",
										"text": " @dev Returns the implementer of `interfaceHash` for `account`. If no such\n implementer is registered, returns the zero address.\n If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n zeroes), `account` will be queried for support of it.\n `account` being the zero address is an alias for the caller's address."
									},
									"functionSelector": "aabbb8ca",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getInterfaceImplementer",
									"nameLocation": "3051:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3083:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3075:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "_interfaceHash",
												"nameLocation": "3100:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3092:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 249,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3092:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:41:3"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3139:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3138:9:3"
									},
									"scope": 292,
									"src": "3042:106:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "3154:196:3",
										"text": " @dev Returns the interface hash for an `interfaceName`, as defined in the\n corresponding\n https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
									},
									"functionSelector": "65ba36c1",
									"id": 263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "interfaceHash",
									"nameLocation": "3364:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "interfaceName",
												"nameLocation": "3394:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3378:29:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3378:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:31:3"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3432:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 260,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:9:3"
									},
									"scope": 292,
									"src": "3355:86:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "3447:260:3",
										"text": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache."
									},
									"functionSelector": "a41e7d51",
									"id": 271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateERC165Cache",
									"nameLocation": "3721:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3747:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3739:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3763:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "3756:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 267,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3756:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:37:3"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3784:0:3"
									},
									"scope": 292,
									"src": "3712:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "3791:536:3",
										"text": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n {updateERC165Cache} with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
									},
									"functionSelector": "f712f3e8",
									"id": 281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementsERC165Interface",
									"nameLocation": "4341:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4375:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4367:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4367:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4391:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4384:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 275,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4384:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4366:37:3"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4427:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4427:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4426:6:3"
									},
									"scope": 292,
									"src": "4332:101:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4439:312:3",
										"text": " @notice Checks whether a contract implements an ERC165 interface or not without using or updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
									},
									"functionSelector": "b7056765",
									"id": 291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementsERC165InterfaceNoCache",
									"nameLocation": "4765:32:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4806:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4798:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4822:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4815:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 285,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4815:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:37:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "4858:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4858:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4857:6:3"
									},
									"scope": 292,
									"src": "4756:108:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 293,
							"src": "769:4097:3",
							"usedErrors": []
						}
					],
					"src": "124:4743:3"
				},
				"id": 3
			},
			"use_erc777_token_example.sol": {
				"ast": {
					"absolutePath": "use_erc777_token_example.sol",
					"exportedSymbols": {
						"IERC1820Registry": [
							292
						],
						"IERC777": [
							162
						],
						"IERC777Recipient": [
							182
						],
						"IERC777Sender": [
							202
						],
						"ReceiveAndBurn": [
							491
						]
					},
					"id": 492,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 294,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
							"file": "@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
							"id": 295,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 492,
							"sourceUnit": 183,
							"src": "57:67:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
							"file": "@openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
							"id": 296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 492,
							"sourceUnit": 203,
							"src": "125:64:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
							"file": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
							"id": 297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 492,
							"sourceUnit": 163,
							"src": "190:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol",
							"id": 298,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 492,
							"sourceUnit": 293,
							"src": "249:74:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 299,
										"name": "IERC777Sender",
										"nameLocations": [
											"379:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 202,
										"src": "379:13:4"
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "379:13:4"
								},
								{
									"baseName": {
										"id": 301,
										"name": "IERC777Recipient",
										"nameLocations": [
											"394:16:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 182,
										"src": "394:16:4"
									},
									"id": 302,
									"nodeType": "InheritanceSpecifier",
									"src": "394:16:4"
								}
							],
							"canonicalName": "ReceiveAndBurn",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 491,
							"linearizedBaseContracts": [
								491,
								182,
								202
							],
							"name": "ReceiveAndBurn",
							"nameLocation": "361:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "40079291ab55cc19bc58cf71f199a7dbea42e6ae0a5df85085cfd005989882e1",
									"id": 314,
									"name": "TokensReceived",
									"nameLocation": "423:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "454:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "438:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "480:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "464:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "502:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "486:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "486:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "514:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "506:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "506:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "log_text",
												"nameLocation": "529:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "522:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "522:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:101:4"
									},
									"src": "417:122:4"
								},
								{
									"anonymous": false,
									"eventSelector": "76a1164d576fc7c969d03ca591db9973dcf556dea68edfb7cc163fdce887d39b",
									"id": 326,
									"name": "TokensToSend",
									"nameLocation": "550:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "579:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "563:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "605:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "589:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "627:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "611:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "639:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "631:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": false,
												"mutability": "mutable",
												"name": "log_text",
												"nameLocation": "654:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "647:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "647:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:101:4"
									},
									"src": "544:120:4"
								},
								{
									"constant": false,
									"functionSelector": "e89081f8",
									"id": 330,
									"mutability": "mutable",
									"name": "givers",
									"nameLocation": "709:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "674:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 329,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 327,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "682:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "674:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "693:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "737:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "721:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 331,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "721:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 335,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "765:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "749:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC777_$162",
										"typeString": "contract IERC777"
									},
									"typeName": {
										"id": 334,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 333,
											"name": "IERC777",
											"nameLocations": [
												"749:7:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 162,
											"src": "749:7:4"
										},
										"referencedDeclaration": 162,
										"src": "749:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC777_$162",
											"typeString": "contract IERC777"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 341,
									"mutability": "constant",
									"name": "_ERC1820_REGISTRY",
									"nameLocation": "813:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "778:115:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC1820Registry_$292",
										"typeString": "contract IERC1820Registry"
									},
									"typeName": {
										"id": 337,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 336,
											"name": "IERC1820Registry",
											"nameLocations": [
												"778:16:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 292,
											"src": "778:16:4"
										},
										"referencedDeclaration": 292,
										"src": "778:16:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1820Registry_$292",
											"typeString": "contract IERC1820Registry"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
												"id": 339,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "850:42:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 338,
											"name": "IERC1820Registry",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 292,
											"src": "833:16:4",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$292_$",
												"typeString": "type(contract IERC1820Registry)"
											}
										},
										"id": 340,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "833:60:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1820Registry_$292",
											"typeString": "contract IERC1820Registry"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 346,
									"mutability": "constant",
									"name": "_TOKENS_SENDER_INTERFACE_HASH",
									"nameLocation": "925:29:4",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "900:88:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 342,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "900:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "455243373737546f6b656e7353656e646572",
												"id": 344,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "967:20:4",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
													"typeString": "literal_string \"ERC777TokensSender\""
												},
												"value": "ERC777TokensSender"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
													"typeString": "literal_string \"ERC777TokensSender\""
												}
											],
											"id": 343,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "957:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 345,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "957:31:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 351,
									"mutability": "constant",
									"name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
									"nameLocation": "1019:32:4",
									"nodeType": "VariableDeclaration",
									"scope": 491,
									"src": "994:94:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 347,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "994:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "455243373737546f6b656e73526563697069656e74",
												"id": 349,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1064:23:4",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
													"typeString": "literal_string \"ERC777TokensRecipient\""
												},
												"value": "ERC777TokensRecipient"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
													"typeString": "literal_string \"ERC777TokensRecipient\""
												}
											],
											"id": 348,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1054:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 350,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1054:34:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1122:288:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 362,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1182:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ReceiveAndBurn_$491",
																		"typeString": "contract ReceiveAndBurn"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ReceiveAndBurn_$491",
																		"typeString": "contract ReceiveAndBurn"
																	}
																],
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1174:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 360,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1174:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1174:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "_TOKENS_SENDER_INTERFACE_HASH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "1189:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 367,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1228:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ReceiveAndBurn_$491",
																		"typeString": "contract ReceiveAndBurn"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ReceiveAndBurn_$491",
																		"typeString": "contract ReceiveAndBurn"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 357,
															"name": "_ERC1820_REGISTRY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "1132:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1820Registry_$292",
																"typeString": "contract IERC1820Registry"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1150:23:4",
														"memberName": "setInterfaceImplementer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 245,
														"src": "1132:41:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (address,bytes32,address) external"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1132:102:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "1132:102:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 376,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1294:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ReceiveAndBurn_$491",
																		"typeString": "contract ReceiveAndBurn"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ReceiveAndBurn_$491",
																		"typeString": "contract ReceiveAndBurn"
																	}
																],
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1286:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 374,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1286:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1286:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "1301:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 381,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1343:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ReceiveAndBurn_$491",
																		"typeString": "contract ReceiveAndBurn"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ReceiveAndBurn_$491",
																		"typeString": "contract ReceiveAndBurn"
																	}
																],
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1335:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 379,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1335:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1335:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 371,
															"name": "_ERC1820_REGISTRY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "1244:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1820Registry_$292",
																"typeString": "contract IERC1820Registry"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1262:23:4",
														"memberName": "setInterfaceImplementer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 245,
														"src": "1244:41:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (address,bytes32,address) external"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1244:105:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1244:105:4"
											},
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 385,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "1360:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 386,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1369:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1373:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1369:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1360:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "1360:19:4"
											},
											{
												"expression": {
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 390,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "1389:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC777_$162",
															"typeString": "contract IERC777"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 391,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "1398:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC777_$162",
															"typeString": "contract IERC777"
														}
													},
													"src": "1389:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC777_$162",
														"typeString": "contract IERC777"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "1389:14:4"
											}
										]
									},
									"id": 395,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1115:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1107:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC777_$162",
													"typeString": "contract IERC777"
												},
												"typeName": {
													"id": 353,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 352,
														"name": "IERC777",
														"nameLocations": [
															"1107:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 162,
														"src": "1107:7:4"
													},
													"referencedDeclaration": 162,
													"src": "1107:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC777_$162",
														"typeString": "contract IERC777"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1106:15:4"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1122:0:4"
									},
									"scope": 491,
									"src": "1095:315:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "1523:33:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 402,
														"name": "givers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "1540:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 404,
													"indexExpression": {
														"id": 403,
														"name": "g",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "1547:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1540:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 401,
												"id": 405,
												"nodeType": "Return",
												"src": "1533:16:4"
											}
										]
									},
									"functionSelector": "8170eace",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showGive",
									"nameLocation": "1465:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "g",
												"nameLocation": "1482:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1474:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1473:11:4"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1514:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1514:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1513:9:4"
									},
									"scope": 491,
									"src": "1456:100:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										181
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "1789:114:4",
										"statements": [
											{
												"expression": {
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 422,
															"name": "givers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "1799:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 424,
														"indexExpression": {
															"id": 423,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "1806:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1799:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 425,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "1815:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1799:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "1799:22:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 429,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "1851:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "1861:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 431,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "1867:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 432,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "1871:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "746f6b656e207265636569766564",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1879:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a3455eecf05d88eb24388b0ef355bcd38fd16864f5924c6c44d91a8814b99d80",
																"typeString": "literal_string \"token received\""
															},
															"value": "token received"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_a3455eecf05d88eb24388b0ef355bcd38fd16864f5924c6c44d91a8814b99d80",
																"typeString": "literal_string \"token received\""
															}
														],
														"id": 428,
														"name": "TokensReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "1836:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,string memory)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1836:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "EmitStatement",
												"src": "1831:65:4"
											}
										]
									},
									"functionSelector": "0023de29",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "1597:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1629:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "1621:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1655:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "1647:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1647:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1677:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "1669:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1697:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "1689:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1689:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1728:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "1713:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1713:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "1761:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "1746:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 418,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1746:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:168:4"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1789:0:4"
									},
									"scope": 491,
									"src": "1588:315:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										201
									],
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "2134:79:4",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 453,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "2162:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "2172:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "2178:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "2182:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "746f6b656e20746f2073656e64",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2190:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_957565bfa95a89eab0addc1e72a2c28b5ad17773f21c7c7c29c86526b05159cd",
																"typeString": "literal_string \"token to send\""
															},
															"value": "token to send"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_957565bfa95a89eab0addc1e72a2c28b5ad17773f21c7c7c29c86526b05159cd",
																"typeString": "literal_string \"token to send\""
															}
														],
														"id": 452,
														"name": "TokensToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "2149:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,string memory)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2149:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "EmitStatement",
												"src": "2144:62:4"
											}
										]
									},
									"functionSelector": "75ab9782",
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensToSend",
									"nameLocation": "1944:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1974:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "1966:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1966:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2000:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "1992:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1992:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2022:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2014:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2042:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2034:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "2073:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2058:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2058:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "2106:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2091:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 448,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2091:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:168:4"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2134:0:4"
									},
									"scope": 491,
									"src": "1935:278:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "2281:155:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 465,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2299:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2303:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2299:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 467,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "2313:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2299:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f207065726d6973696f6e",
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2321:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9c87d73bd595fd3ff45f66221ff0b28aa4bc82b6d9329c6d105c3f9b4748806",
																"typeString": "literal_string \"no permision\""
															},
															"value": "no permision"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9c87d73bd595fd3ff45f66221ff0b28aa4bc82b6d9329c6d105c3f9b4748806",
																"typeString": "literal_string \"no permision\""
															}
														],
														"id": 464,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2291:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2291:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "2291:45:4"
											},
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "2354:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 489,
														"src": "2346:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 472,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2346:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 481,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 478,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2389:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ReceiveAndBurn_$491",
																		"typeString": "contract ReceiveAndBurn"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ReceiveAndBurn_$491",
																		"typeString": "contract ReceiveAndBurn"
																	}
																],
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2381:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 476,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2381:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2381:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 474,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "2364:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC777_$162",
																"typeString": "contract IERC777"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2371:9:4",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 74,
														"src": "2364:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2364:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2346:49:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "2417:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"id": 482,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "2405:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC777_$162",
																"typeString": "contract IERC777"
															}
														},
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2412:4:4",
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 92,
														"src": "2405:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (uint256,bytes memory) external"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2405:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "2405:24:4"
											}
										]
									},
									"functionSelector": "44df8e70",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2265:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2269:2:4"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2281:0:4"
									},
									"scope": 491,
									"src": "2256:180:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 492,
							"src": "352:2086:4",
							"usedErrors": []
						}
					],
					"src": "32:2407:4"
				},
				"id": 4
			}
		}
	}
}